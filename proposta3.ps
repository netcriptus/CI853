%!PS-Adobe-2.0
%%Creator: dvips(k) 5.99 Copyright 2010 Radical Eye Software
%%Title: proposta3.dvi
%%CreationDate: Wed Nov 23 11:55:32 2011
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Bold CMR8 Times-Roman CMSY10 Courier
%%+ Times-BoldItalic Times-Italic Helvetica-Bold
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips proposta3.dvi -o proposta3.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2011.11.23:1155
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 14 /openbullet put
dup 15 /bullet put
dup 102 /braceleft put
dup 103 /braceright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B15A0
657F5ED27D204449A841ED19E01432CFFE928E921321113780D036D34F2797DE
D4459CFD15BB117B5C9745EF3CD2B296D91FAD48C80B136D94476967E255F808
AD2B5D522ADEC64176833756510391815A1D4A8DA1D0AEE7CAD36A1D161889F2
3347D5B6BC503300FDDD48F594F391D5FB42C42113C538E707C16EE24A3F375E
7C506E8F49CE50FF9DEF3B4A4C1BEB3848EAA3477349833BA22D2A9012287D8B
A8C4CB4307A1188ACC0E6E9338E1559BE5FAFF381BD82A6C71C267409468B3C0
2C1A29F4281D565836EAE57F680490FEA4A952FF64C8CD11C377C294DCD1EC25
CEFB2B6DCE959D0208F85B6E32E9B44FD455F9B134A5306D95EA29F37BB8B86D
9E592159338E1293F449380E13C21AE42E6E371B75D78AA87381B96012E722B1
3E1628DC89D9009FB38D9984AECC3367A8436F03DD58F85DD4971868D7949CBF
51EEF1C2D1CA959EFB5A12A9CA4B2A098441C978D8B8E7BA4CDCA20DFDA7447F
825F4292F41FC6686DB3C8543A356F4C4FB594D9034F9AADB35FBFC3EA4230D1
E2ACAB8BF960AF5BDDAC1255735B8C4B540EABD3113E9F6AAE0CDA18F28B2082
88DB54E2DDEE526146166A01AB20352415949032CB1B4FAFDBBCF140A7641808
FC80F2B95C49AFCFD1AA6E87F704B1499B783C3B925C84F8CED48611480A89BC
56F2FFC0F8E093FC71056C002CB6741C1CB195EE26F160DDFFC83A39338064CA
0823B514EB18B5CB9792207FC413F19AC544258BEF69242C42391DF8C4E88E9A
8B066A014C0B3FBE41A3B34611650FED5CFB810FD5206EBF5B115D41A2103791
8CA9BF915D194C0305C95B52A543305E83E9943303A71904164FB69F9C3D5319
87361E453B79C8D8E96D6F9461C368B6DDF5BA937C4C0D992CB41A43A06B9FFF
6312C6F309C6DDFCDAF76C5BC7146FBFBE7B4E2EEB3222ECAAD99D3014E7E709
2922C4DD478F3D07E8BE15EA5C26867FEB86A0DDD4210B7B98B374540D8E90AF
791F28C2FCA79C096D3B93DC108211646ED8130BFB0E4FE147E82DF57CBAE459
6F2EC85659EC627FE9DA5BB3C678A04786EA239D3FB434F9D1F41777B4E0D027
B8E36DE35F81BCEDCB724D4B5D27458DE79CF0D3E802C8986554149CD0F05EFA
50ED34BADFF66850C2BB60A7E4393F98C5721E99005C57D97204E450B6276B12
25B060DF6298414216352416360755CFD545D01D56664C2EB62E6F27344FEB5D
FC91EC5C054F71ED72274D1B3AF6CA9782A83A88CE698DD31EB7CCF64FAEB1DB
ECAC4B5E23315A111F44691FDB8DD96B4F0E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DF4743FAE6668B61F72C8700992755522AB11C765981A9BEE0D040039D
6C2D64ABED527082C97CA606127AF5C0D25DE3F1AE7D9F8FF63151BB62BB3E72
F9C045F155681989DF5063C53AAEF389C38697E8DD489CF03F23E121C7ED4F6F
7DAC0AAE1806B08936B66E4568F3267A3D3EE271C44278A7104045A9EE0FDA5F
41CAA6E2522BDD69BF74808A159F08A5CFB75086654A9BD76FC718D33C7F05AF
F68C1C1241E91084BF571BD865396AE446DB9EA63D5326E1F1D0144D61E630CC
C88A5BA95B6A48DC89F4C66D10ED7B65CA7FD1A58E076F916292D2A51579B15E
E9A496D7BB2E44A8073E9CC364F8F1B7E562A8E4F7013A4D36EBAF9CCEBE7B55
B8A0FFA678EBD574381B08987A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600 (proposta3.dvi)
@start /Fa 133[37 3[42 6[42 9[37 22[60 9[60 15[42 42
42 42 1[23 47[{TeXBase1Encoding ReEncodeFont}11 83.022
/Times-Bold rf /Fb 240[50 50 14[{}2 99.6264 /CMSY10 rf
/Fc 138[42 5[42 2[23 7[42 37 99[{TeXBase1Encoding ReEncodeFont}5
83.022 /Times-Italic rf /Fd 71[28 3[28 27[28 3[37 37
10[28 15[42 1[42 42 23 32 28 42 42 42 42 65 23 2[23 42
42 28 37 42 37 42 37 13[46 2[46 6[28 3[51 60 55 1[60
18[21 1[21 26[23 14[46 2[{TeXBase1Encoding ReEncodeFont}38
83.022 /Times-Roman rf /Fe 205[29 29 49[{TeXBase1Encoding ReEncodeFont}
2 58.1154 /Times-Roman rf /Ff 205[33 33 49[{
TeXBase1Encoding ReEncodeFont}2 66.4176 /Times-Roman
rf /Fg 71[28 31[28 34[51 28 46 32 51 51 51 1[74 23 2[23
1[51 1[46 51 46 1[46 13[55 9[23 2[51 1[60 18[46 2[23
46[{TeXBase1Encoding ReEncodeFont}23 83.022 /Helvetica-Bold
rf /Fh 138[60 5[54 2[30 7[54 32[72 67[{TeXBase1Encoding ReEncodeFont}5
107.929 /Times-BoldItalic rf /Fi 71[36 31[36 15[36 16[78
54 60 36 42 48 60 60 54 60 90 30 60 1[30 60 54 36 48
60 48 60 54 12[72 60 78 4[102 3[42 4[78 78 1[78 8[54
54 54 54 54 54 54 54 2[27 46[{TeXBase1Encoding ReEncodeFont}42
107.929 /Times-Bold rf /Fj 71[33 3[33 27[33 15[33 13[39
44 44 66 44 50 28 39 39 50 50 50 50 72 28 44 28 28 50
50 28 44 50 44 50 50 8[61 83 61 72 55 50 61 1[61 72 66
83 55 2[33 72 72 61 61 72 66 61 61 5[33 33 50 50 50 50
2[50 50 50 50 1[25 33 25 2[33 33 33 78 2[50 17[28 14[50
2[{TeXBase1Encoding ReEncodeFont}71 99.6264 /Times-Italic
rf /Fk 138[55 1[39 3[50 1[78 7[44 18[66 35[25 46[{
TeXBase1Encoding ReEncodeFont}7 99.6264 /Times-BoldItalic
rf /Fl 133[50 2[50 1[50 2[50 1[50 50 50 50 50 2[50 50
50 50 50 1[50 50 50 32[50 9[50 5[50 1[50 1[50 44[{
TeXBase1Encoding ReEncodeFont}22 83.022 /Courier rf /Fm
152[42 42 86[42 42 14[{}4 83.022 /CMSY10 rf /Fn 71[33
3[33 27[33 1[50 1[44 44 10[33 13[44 50 50 72 50 50 28
39 33 50 50 50 50 78 28 50 28 28 50 50 33 44 50 44 50
44 3[33 1[33 61 72 1[94 72 72 61 55 66 72 55 72 72 89
61 72 39 33 72 72 55 61 72 66 66 72 5[28 28 50 50 50
50 50 50 50 50 50 50 28 25 33 25 2[33 33 33 5[33 2[33
12[28 13[55 55 2[{TeXBase1Encoding ReEncodeFont}84 99.6264
/Times-Roman rf /Fo 206[35 49[{}1 66.4176 /CMR8 rf /Fp
71[33 3[33 27[33 1[50 27[44 2[72 50 55 33 39 44 55 55
50 55 83 28 2[28 55 50 1[44 55 44 55 50 12[66 3[61 78
72 94 66 2[39 78 78 61 66 72 72 66 72 20[25 2[33 33 22[28
17[{TeXBase1Encoding ReEncodeFont}44 99.6264 /Times-Bold
rf /Fq 71[44 31[44 34[74 44 52 59 74 74 66 5[37 1[66
1[59 74 59 1[66 13[74 5[125 8[96 2[96 65[{TeXBase1Encoding ReEncodeFont}
19 132.835 /Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black Black 574 377
a Fq(Ar)n(quitetura)33 b(para)g(Mitigac)-52 b(\270)2036
375 y(\230)2025 377 y(ao)34 b(de)f(Ataques)g(DDoS)803
611 y Fp(Cinara)25 b(Menegazzo)1602 575 y Fo(1)1642 611
y Fp(,)g(F)n(er)o(nando)g(Cezar)g(Ber)o(nardelli)2892
575 y Fo(1)2932 611 y Fp(,)867 731 y(F)n(er)o(nando)g(Henrique)h(Gielo)
o(w)2031 695 y Fo(1)2069 731 y Fp(,)f(Nadine)g(Lipa)h(P)o(ari)2855
695 y Fo(1)589 937 y(1)629 973 y Fn(Departamento)e(de)h(Inform)6
b(\264)-39 b(atica)25 b(\226)f(Uni)n(v)o(ersidade)g(Federal)h(do)g(P)o
(aran)6 b(\264)-39 b(a)832 1093 y(NR2)26 b(-)f(N)8 b(\264)-41
b(ucleo)24 b(de)h(Redes)h(Sem)f(Fio)f(e)i(Redes)f(A)-7
b(v)n(anc)-38 b(\270)t(adas)710 1212 y(Caixa)25 b(Postal)f(19.081)g
(\226)h(81.531-980)f(\226)g(Curitiba)h(\226)f(PR)i(\226)f(Brasil)718
1402 y Fm(f)p Fl(cmenegazzo,fcb06,fhgielow,nelpari)o
Fm(g)p Fl(@i)o(nf.ufp)o(r.br)p Black 298 1664 a Fk(Resumo.)p
Black 48 w Fj(Ataques)e(de)i(Distrib)n(uted)c(Denial)j(of)f(Service)h
(\(DDoS\))g(fr)l(equentemente)g(s)3372 1665 y(\230)3364
1664 y(ao)298 1783 y(ne)l(glig)o(enciados)34 b(por)h(r)l(epr)l(esentar)
l(em)h(apenas)f(interrupc)-38 b(\270)2408 1784 y(\230)2400
1783 y(ao)36 b(de)f(funcionamento)f(nor)n(-)298 1903
y(mal)28 b(dos)h(r)l(ecur)o(sos)g(dispon)1276 1904 y(\264)1279
1903 y(\021veis.)42 b(P)-8 b(or)1676 1904 y(\264)1671
1903 y(em,)30 b(tr)o(atando-se)d(de)i(aplicac)-38 b(\270)2754
1904 y(\230)2746 1903 y(oes)29 b(destinadas)e(ao)298
2022 y(com)469 2023 y(\264)464 2022 y(er)l(cio)20 b(eletr)876
2023 y(\210)868 2022 y(onico,)g(uma)g(par)o(ada)e(do)i(servic)-38
b(\270)5 b(o)20 b(pode)g(r)l(epr)l(esentar)g(gr)o(andes)e(per)l(das)i
(\002-)298 2142 y(nanceir)o(as.)28 b(Com)c(o)g(advento)f(da)g(Internet)
g(do)h(Futur)l(o)e(e)i(ar)l(quitetur)o(as)d(como)i(a)h(cloud,)f(a)298
2261 y(mitigac)-38 b(\270)605 2262 y(\230)597 2261 y(ao)19
b(deste)i(tipo)e(de)h(ameac)-38 b(\270)5 b(a)20 b(com)h(o)f(acr)1956
2262 y(\264)1951 2261 y(escimo)g(de)g(r)l(ecur)o(sos)g(par)o(a)f(as)h
(aplicac)-38 b(\270)3338 2262 y(\230)3330 2261 y(oes)298
2381 y(se)33 b(torna)f(uma)g(alternativa)f(vi)1417 2382
y(\264)1409 2381 y(avel,)k(mas)e(que)g(acarr)l(eta)f(o)h(pr)l(oblema)e
(do)i(e)g(economic)298 2501 y(DDoS.)26 b(Este)h(artigo)f(apr)l(esenta)g
(uma)h(pr)l(oposta)e(de)j(mecanismo)e(par)o(a)g(a)h(mitigac)-38
b(\270)3250 2502 y(\230)3242 2501 y(ao)27 b(de)298 2620
y(ataques)35 b(DDoS)h(dir)l(ecionados)e(a)j(uma)e(aplicac)-38
b(\270)2072 2621 y(\230)2064 2620 y(ao)36 b(hospedada)f(em)h(uma)g
(cloud.)64 b(T)-9 b(al)298 2740 y(mecanismo)777 2741
y(\264)772 2740 y(e)26 b(baseado)f(na)g(instanciac)-38
b(\270)1743 2741 y(\230)1734 2740 y(ao)26 b(de)g(uma)f(r)2221
2741 y(\264)2216 2740 y(eplica)g(da)h(aplicac)-38 b(\270)2912
2741 y(\230)2904 2740 y(ao)25 b(-)h(oper)o(ac)-38 b(\270)3372
2741 y(\230)3363 2740 y(ao)298 2859 y(simples)30 b(em)h(uma)f(cloud)h
(-)g(e)g(r)l(edir)l(ecionamento)f(de)h(apenas)g(r)l(equisic)-38
b(\270)2865 2860 y(\230)2857 2859 y(oes)31 b(le)l(g)3136
2860 y(\264)3139 2859 y(\021timas)e(a)298 2979 y(esta)36
b(r)539 2980 y(\264)534 2979 y(eplica.)65 b(O)37 b(mecanismo)1467
2980 y(\264)1462 2979 y(e)g(ino)o(vador)e(por)h(n)2171
2980 y(\230)2163 2979 y(ao)h(pr)l(ecisar)f(identi\002car)f(os)h(clien-)
298 3098 y(tes)29 b(atacantes)g(e)o(,)j(ainda)d(assim,)h(conse)l(guir)f
(\002ltr)o(ar)f(apenas)h(o)h(tr)2637 3099 y(\264)2629
3098 y(afe)l(go)f(le)l(g)2991 3099 y(\264)2994 3098 y(\021timo)f(sem)i
(a)298 3218 y(car)l(ga)24 b(e)g(poss)794 3219 y(\264)797
3218 y(\021veis)f(err)l(os)g(de)i(cate)l(gorizac)-38
b(\270)1821 3219 y(\230)1813 3218 y(ao)24 b(que)g(seriam)f(intr)l
(oduzidos)e(pela)j(tentativa)298 3337 y(de)h(identi\002cac)-38
b(\270)840 3338 y(\230)832 3337 y(ao)24 b(de)h(clientes.)p
Black 109 3623 a Fi(1.)p Black 49 w(Intr)n(oduc)-42 b(\270)654
3622 y(\230)645 3623 y(ao)109 3813 y Fn(Di)n(v)o(ersas)20
b(pesquisas)g(e)h(propostas)f(t)6 b(\210)-39 b(em)21
b(sido)f(desen)l(v)n(olvidas)g(b)n(uscando)h(soluc)-38
b(\270)12 b(\230)-41 b(oes)21 b(para)h(problemas)109
3932 y(da)27 b(Internet)f(atual,)h(que)g(se)f(propagam)g(para)h(a)g
(Internet)g(do)f(Futuro)h(\(IF\).)h(T)-8 b(ais)26 b(problemas)g(podem)
109 4052 y(ser)d(amplamente)f(cate)o(gorizados)g(nas)29
b(\264)-39 b(areas)24 b(de)f(mobilidade,)f(qualidade)g(de)h(servic)-38
b(\270)5 b(o)23 b(e)g(se)o(guranc)-38 b(\270)5 b(a,)109
4171 y(os)24 b(quais)g(ainda)h(caminham)f(para)h(soluc)-38
b(\270)13 b(\230)-41 b(oes)24 b(aceit)6 b(\264)-39 b(av)o(eis.)409
4341 y(Alguns)42 b(paradigmas)g(mudaram)h(nestas)51 b(\264)-41
b(ultimas)42 b(d)6 b(\264)-39 b(ecadas.)86 b(Hoje,)48
b(tem-se)43 b(os)g(dados)109 4460 y(e)37 b(aplicac)-38
b(\270)13 b(\230)-41 b(oes)37 b(disponibilizados)d(em)j(localizac)-38
b(\270)14 b(\230)-42 b(oes)37 b(f)m(\264)-30 b(\021sicas)37
b(distintas)e(e)i(desconhecidas.)67 b(Outra)109 4580
y(grande)33 b(mudanc)-38 b(\270)5 b(a)33 b(ocorreu)h(na)f(forma)h(de)f
(administrar)f(um)h(sistema,)h(que)g(antes)f(era)h(de)39
b(\210)-39 b(ambito)109 4699 y(mais)32 b(local,)k(com)d(seus)g(usu)6
b(\264)-39 b(arios)33 b(e)h(servidores)f(caracter)m(\264)-30
b(\021sticos.)56 b(Agora,)36 b(tal)d(sistema)38 b(\264)-38
b(e)33 b(hospe-)109 4819 y(dado)28 b(em)g(ambientes)f(constru)m(\264)
-30 b(\021dos)26 b(pelo)i(compartilhamento)e(de)j(recursos)f(de)g(di)n
(v)o(ersos)e(sistemas)109 4939 y(aut)8 b(\210)-41 b(onomos)23
b(\(AS\))i(e)h(heterog)6 b(\210)-39 b(eneos.)409 5108
y(O)33 b(uso)h(massi)n(v)n(o)e(dos)h(recursos)h(disponibilizados)d(na)j
(Internet)f(e)i(toda)e(a)h(conecti)n(vidade)109 5227
y(que)29 b(este)g(ambiente)f(computacional)g(proporciona)g(com)h
(servic)-38 b(\270)5 b(os)29 b(para)g(uso)g(pessoal,)g(comercial)109
5347 y(ou)k(acad)6 b(\210)-39 b(emico,)36 b(torna)e(este)g(ambiente)f
(um)g(alv)n(o)h(visado)f(para)h(c)8 b(\264)-41 b(odigos)33
b(maliciosos.)56 b(Ademais,)109 5467 y(isso)38 b(\264)-38
b(e)34 b(agra)n(v)n(ado)g(pela)g(forma)g(como)g(a)g(arquitetura)g
(TCP/IP)h(pode)f(f)o(a)n(v)n(orecer)h(um)e(atacante.)59
b(O)109 5586 y(protocolo)34 b(IP)j(\()p Fj(Internet)e(Pr)l(otocol)p
Fn(\))g(omite)g(as)h(informac)-38 b(\270)13 b(\230)-42
b(oes)36 b(da)g(v)o(erdadeira)g(identidade)f(de)h(um)109
5706 y(emissor)l(,)i(essa)f(n)6 b(\230)-39 b(ao)36 b(autenticac)-38
b(\270)11 b(\230)-39 b(ao)37 b(da)g(fonte)f(permite)g(ao)h(atacante)g
(realizar)g(o)f(ataque)h(contra)g(a)109 5825 y(v)m(\264)-30
b(\021tima,)23 b(podendo)h(permanecer)i(an)8 b(\210)-41
b(onimo)23 b(e)i(impune.)p Black Black eop end
%%Page: 2 2
TeXDict begin 2 1 bop Black Black 409 326 a Fn(Apesar)26
b(de)h(muitos)e(anos)h(de)h(esforc)-38 b(\270)5 b(os)27
b(de)f(pesquisadores,)g(um)g(tipo)g(de)g(ataque)h(ainda)f(re-)109
446 y(presenta)33 b(s)6 b(\264)-39 b(erias)33 b(ameac)-38
b(\270)5 b(as)33 b(a)h(muitos)d(servidores)i(na)g(Internet:)47
b(o)33 b(ataque)g(de)g Fj(Denial)f(of)h(Service)109 566
y Fn(\(DoS\).)25 b(Ele)f(se)g(con\002gura)h(como)f(um)g(dos)g
(principais)f(desa\002os)h(de)h(se)o(guranc)-38 b(\270)5
b(a)24 b(atualmente)g(propa-)109 685 y(gado)g(para)h(a)g(IF)-8
b(,)26 b(que)e(interconecta)h(muito)f(mais)g(dispositi)n(v)n(os)d(e)k
(indi)n(v)m(\264)-30 b(\021duos.)409 854 y(Uma)39 b(forma)h(de)g(se)g
(defender)g(deste)f(tipo)g(de)h(ataque)46 b(\264)-39
b(e)40 b(a)g(pre)n(v)o(enc)-38 b(\270)10 b(\230)-38 b(ao)39
b(e)h(a)h(reac)-38 b(\270)11 b(\230)-39 b(ao.)76 b(O)109
974 y(ataque)33 b(por)h(DoS)g(n)6 b(\230)-39 b(ao)33
b(visa)g(in)l(v)n(adir)g(um)g(computador)g(para)h(obter)f(informac)-38
b(\270)13 b(\230)-41 b(oes)33 b(con\002denciais,)109
1094 y(nem)23 b(t)6 b(\230)-39 b(ao)23 b(pouco)f(alterar)i(informac)-38
b(\270)13 b(\230)-41 b(oes)23 b(armazenadas)h(nele.)30
b(Seu)24 b(objeti)n(v)n(o)j(\264)-39 b(e)24 b(a)f(indisponibilizac)-38
b(\270)8 b(\230)-38 b(ao)109 1213 y(de)36 b(um)f(servic)-38
b(\270)5 b(o)35 b(que)h(est)6 b(\264)-39 b(a)36 b(sendo)f(fornecido,)k
(utilizando-se)34 b(do)i(encaminhamento)e(de)i(grandes)109
1333 y(quantidades)18 b(de)h(tr)6 b(\264)-39 b(afe)o(go)19
b(ao)h(hospedeiro)e(do)h(servic)-38 b(\270)5 b(o.)29
b(Desta)19 b(forma,)h(este)g(servic)-38 b(\270)5 b(o)19
b(n)6 b(\230)-39 b(ao)19 b(conse)o(guir)6 b(\264)-39
b(a)109 1452 y(responder)24 b(a)i(todas)e(as)h(requisic)-38
b(\270)12 b(\230)-41 b(oes)25 b(que)g(lhe)f(s)6 b(\230)-39
b(ao)25 b(encaminhadas.)409 1622 y(O)19 b(problema)f(se)i(torna)f
(ainda)g(mais)f(se)n(v)o(ero)h(quando)f(di)n(v)o(ersos)g(geradores)h
(de)h(tr)6 b(\264)-39 b(afe)o(go)19 b(inten-)109 1741
y(si\002cam)h(o)g(encaminhamento)f(de)h(tr)6 b(\264)-39
b(afe)o(go)20 b(de)g(maneira)h(distrib)n(u)m(\264)-30
b(\021da,)19 b(caracterizando)i(um)f(ataque)g(de)109
1861 y Fj(Distrib)n(uted)g(Denial)i(of)g(Service)g Fn(\(DDoS)h([Sachde)
n(v)n(a)i(et)g(al.)30 b(2008]\).)g(O)22 b(resultado)g(obtido)27
b(\264)-39 b(e)23 b(o)f(con-)109 1980 y(gelamento,)f(a)h(reinicializac)
-38 b(\270)10 b(\230)-38 b(ao,)22 b(ou)f(ainda)h(o)f(esgotamento)g
(completo)f(de)i(recursos)g(necess)6 b(\264)-39 b(arios)21
b(ao)109 2100 y(hospedeiro.)30 b(Os)25 b(servic)-38 b(\270)5
b(os)25 b(que)g(mais)f(sofrem)h(com)g(este)g(tipo)f(de)h(ataque)g(s)6
b(\230)-39 b(ao)25 b(aqueles)g(que)g(permi-)109 2219
y(tem)k(requisic)-38 b(\270)13 b(\230)-41 b(oes)29 b(an)8
b(\210)-41 b(onimas,)30 b(como)g(servic)-38 b(\270)5
b(os)29 b(web)l(.)46 b(Assim,)30 b(o)g(desa\002o)g(de)h(eliminar)e(os)g
(ataques)109 2339 y(de)e(DDoS)h(est)6 b(\264)-39 b(a)27
b(na)h(di\002culdade)f(de)h(determinar)f(a)g(diferenc)-38
b(\270)6 b(a)28 b(entre)f(pacotes)h(le)o(g)m(\264)-30
b(\021timos)24 b(e)k(pacotes)109 2458 y(de)d(atacantes)g([Li)f(et)h
(al.)31 b(2009)o(].)409 2628 y(Com)g(as)h(no)o(v)n(as)e(arquiteturas)g
(de)i(rede)g(e)g(de)f(aplicac)-38 b(\270)14 b(\230)-41
b(oes)31 b(que)g(con\002guram)h(a)f(IF)-8 b(,)32 b(sur)n(gem)109
2747 y(sistemas)23 b(comple)o(xos)g(e)i(rob)n(ustos)f(como)g
Fj(clouds)p Fn(,)g(onde)h(o)f(desa\002o)i(de)e(mitigar)g(ataques)g
(deste)h(tipo)109 2867 y(torna-se)38 b(ainda)g(mais)f(necess)6
b(\264)-39 b(ario.)71 b(Embora)38 b(o)g(poder)g(de)g(alocar)h(recursos)
f(para)h(suportar)f(um)109 2986 y(ataque)g(deste)g(tipo)f(agora)h
(torna-se)g(poss)m(\264)-30 b(\021v)o(el)36 b(em)i(um)f
Fj(cloud)p Fn(,)k(crescem)e(com)e(isso)g(tamb)6 b(\264)-39
b(em)37 b(os)109 3106 y(custos)30 b(do)h(usu)6 b(\264)-39
b(ario)31 b(para)g(manter)g(tais)g(recursos.)50 b(T)-8
b(al)31 b(reac)-38 b(\270)12 b(\230)-39 b(ao)32 b(carateriza)g(o)f
(chamado)g Fj(economic)109 3226 y(DDoS)25 b Fn(\(eDDoS)g([Khor)g(and)g
(Nakao)g(2009)o(]\).)409 3395 y(A)34 b(maioria)g(das)g(soluc)-38
b(\270)13 b(\230)-41 b(oes)34 b(comumente)g(oferecidas)g(para)i
(mitigar)c(DDoS)j(em)f Fj(cloud)j Fn(se)109 3514 y(baseiam)31
b(inteiramente)h(na)g(maior)g(alocac)-38 b(\270)11 b(\230)-39
b(ao)32 b(de)h(recursos)f([Peng)25 b(et)g(al.)31 b(2007)o(].)53
b(Algumas)31 b(abor)n(-)109 3634 y(dagens)26 b(diferenciadas)h(se)g
(mostram)f(inadequadas)g(por)h(premissas)f(que)h(nem)g(sempre)f(s)6
b(\230)-39 b(ao)27 b(v)o(erda-)109 3754 y(deiras)35 b(ou)g(por)g(serem)
g(custosas)f(demais)h([Bakshi)25 b(and)f(Y)-11 b(ogesh1)24
b(2010],)38 b([Liu)24 b(2010)o(].)62 b(Existem)109 3873
y(di)n(v)o(ersos)25 b(re)o(gistros)g(de)i(ataques)g(que)f(abalaram)h(a)
g(Internet)g(nos)35 b(\264)-42 b(ultimos)25 b(tempos,)h(como)g(os)h
(ocor)n(-)109 3993 y(ridos)e(contra)h(o)f(Y)-10 b(ahoo!,)26
b(eBay)-6 b(,)27 b(Amazon.com)d(e)j(di)n(v)o(ersos)d(outros)g
Fj(sites)i Fn(populares)f(em)g(fe)n(v)o(ereiro)109 4112
y(de)e(2000.)29 b(No)22 b(in)m(\264)-30 b(\021cio)22
b(de)h(2011)f(se)h(observ)n(ou)f(o)h(ataque)g(sofrido)f(pelo)g
(hospedeiro)g(de)h Fj(blo)o(gs)p Fn(,)f(W)-8 b(ord-)109
4232 y(Press,)24 b(que)g(enfrentou)g(o)g(pior)f(ataque)i(de)f(DDoS)g
(de)g(sua)g(hist)8 b(\264)-41 b(oria)23 b([Exame)i(2011)o(].)31
b(Ataques)23 b(deste)109 4351 y(tipo)g(ainda)h(s)6 b(\230)-39
b(ao)23 b(disparados)h(em)f(proporc)-38 b(\270)14 b(\230)-42
b(oes)24 b(alarmantes,)g(de)g(acordo)g(com)g(descobertas)g(recentes)109
4471 y(que)d(tamb)6 b(\264)-39 b(em)20 b(re)n(v)o(elam)g(a)h
(engenharia)g(aplicada)g(que)g(gera)h(redes)f(de)g(zumbis.)29
b(Um)20 b(e)o(x)o(emplo)f(destas)114 4590 y(\264)-38
b(e)33 b(a)h(rede)g(TDL-4,)h(que)k(\264)-38 b(e)34 b(classi\002cada)f
(por)h(especialistas)e(em)i(se)o(guranc)-38 b(\270)t(a)34
b(como)f(\223n)6 b(\230)-39 b(ao)34 b(perfeita-)109 4710
y(mente,)26 b(mas)g(praticamente)g(indestrut)m(\264)-30
b(\021v)o(el\224,)24 b(com)i(aproximadamente)f(4,5)h(milh)8
b(\230)-41 b(oes)25 b(de)i(infecc)-38 b(\270)13 b(\230)-41
b(oes)109 4830 y(s)8 b(\264)-41 b(o)29 b(em)h(2011)g([Ne)n(ws)24
b(2011].)47 b(Assim,)30 b(a)g(mitigac)-38 b(\270)9 b(\230)-38
b(ao)30 b(de)g(DDoS)h(em)f Fj(clouds)f Fn(ainda)h(demanda)g(pes-)109
4949 y(quisas.)409 5118 y(O)24 b(objeti)n(v)n(o)f(deste)h(trabalho)29
b(\264)-38 b(e)24 b(elaborar)h(uma)f(arquitetura)g(para)h(mitigac)-38
b(\270)9 b(\230)-38 b(ao)24 b(de)h(ataques)f(de)109 5238
y(DDoS)c(e)o(x)o(ecutados)f(contra)h(uma)g(aplicac)-38
b(\270)11 b(\230)-38 b(ao)20 b(hospedada)g(em)g(uma)g
Fj(cloud)p Fn(.)29 b(Esta)19 b(arquitetura)h(de)n(v)o(er)6
b(\264)-39 b(a)109 5358 y(monitorar)29 b(o)i(tr)6 b(\264)-39
b(afe)o(go)30 b(da)h(aplicac)-38 b(\270)11 b(\230)-39
b(ao)31 b(e,)h(quando)e(detectar)h(a)g(poss)m(\264)-30
b(\021v)o(el)29 b(ocorr)6 b(\210)-39 b(encia)31 b(de)g(um)f(ataque)109
5477 y(de)25 b(DDoS,)g(criar)6 b(\264)-39 b(a)26 b(uma)e(no)o(v)n(a)g
(inst)6 b(\210)-39 b(ancia)24 b(desta)h(aplicac)-38 b(\270)11
b(\230)-39 b(ao,)26 b(garantindo)d(que)i(nenhum)f(tr)6
b(\264)-39 b(afe)o(go)25 b(ma-)109 5597 y(licioso)e(a)i(alcance.)409
5766 y(Este)20 b(trabalho)g(est)6 b(\264)-39 b(a)21 b(di)n(vido)e
(conforme)h(a)h(descric)-38 b(\270)11 b(\230)-39 b(ao)21
b(que)f(se)o(gue.)29 b(Inicialmente,)21 b(a)f(primeira)p
Black Black eop end
%%Page: 3 3
TeXDict begin 3 2 bop Black Black 109 326 a Fn(Sec)-38
b(\270)11 b(\230)-38 b(ao)31 b(apresenta)h(a)g(introduc)-38
b(\270)10 b(\230)-39 b(ao)32 b(do)f(tema.)51 b(Em)31
b(se)o(guida,)h(a)g(Sec)-38 b(\270)11 b(\230)-38 b(ao)31
b(2)h(e)o(xp)8 b(\230)-41 b(oem)30 b(os)i(trabalhos)e(re-)109
446 y(lacionados,)d(se)o(guido)g(pela)h(arquitetura,)g(na)g(Sec)-38
b(\270)11 b(\230)-38 b(ao)28 b(3.)40 b(A)27 b(Sec)-38
b(\270)12 b(\230)-39 b(ao)28 b(4)g(apresenta)g(uma)g(descric)-38
b(\270)10 b(\230)-38 b(ao)28 b(da)109 566 y(implementac)-38
b(\270)9 b(\230)-39 b(ao)30 b(que)g(realizaremos.)46
b(Ent)6 b(\230)-39 b(ao,)31 b(a)f(a)n(v)n(aliac)-38 b(\270)10
b(\230)-38 b(ao)30 b(a)g(ser)g(realizada)36 b(\264)-38
b(e)30 b(descrita)g(na)g(Sec)-38 b(\270)11 b(\230)-38
b(ao)109 685 y(5.)30 b(Por)c(\002m,)e(a)h(conclus)6 b(\230)-39
b(ao)30 b(\264)-38 b(e)25 b(apresentada)g(na)g(Sec)-38
b(\270)11 b(\230)-38 b(ao)25 b(6)f(e)i(o)e(cronograma)h(na)g(Sec)-38
b(\270)11 b(\230)-38 b(ao)25 b(7.)p Black 109 920 a Fi(2.)p
Black 49 w(T)-8 b(rabalhos)27 b(Relacionados)109 1083
y Fn(A)21 b(necessidade)f(de)h(prote)o(ger)g(ou)f(mitigar)f(as)i
(arquiteturas)g(de)g(rede)g(de)g(ataques)g(de)g(DDoS)g(tem)f(sido)109
1203 y(reconhecida)k(tanto)g(no)g(meio)f(acad)6 b(\210)-39
b(emico)25 b(quanto)e(comercial.)31 b(Se)o(gundo)23 b([Chang)i(2002)o
(],)g(tr)6 b(\210)-39 b(es)24 b(s)6 b(\230)-39 b(ao)109
1322 y(as)28 b(linhas)f(de)i(defesa)g(contra)f(ataques)g(de)h(DDoS,)f
(compreendendo)g(a)g Fp(pr)n(e)o(v)o(enc)-38 b(\270)3000
1321 y(\230)2991 1322 y(ao)p Fn(,)29 b(a)g Fp(r)n(eac)-38
b(\270)3407 1321 y(\230)3399 1322 y(ao)p Fn(,)28 b(ou)109
1442 y(ambas,)20 b(na)h(chamada)f(defesa)h Fp(h)1225
1441 y(\264)1228 1442 y(\021brida)p Fn(.)30 b(A)20 b(pre)n(v)o(enc)-38
b(\270)10 b(\230)-38 b(ao)20 b(tenta)g(eliminar)g(a)g(possibilidade)f
(de)h(ataques)109 1561 y(de)26 b(DDoS,)h(isto)k(\264)-38
b(e,)27 b(e)n(vita)f(a)h(ne)o(gac)-38 b(\270)10 b(\230)-39
b(ao)27 b(de)f(servic)-38 b(\270)5 b(o)27 b(para)g(os)f(clientes)g(le)o
(g)m(\264)-30 b(\021timos.)34 b(A)26 b(linha)g(de)h(reac)-38
b(\270)11 b(\230)-38 b(ao)109 1681 y(detecta)29 b(o)g(ataque)h(e)f
(responde)g(imediatamente,)g(e)h(a)f(abordagem)g(h)m(\264)-30
b(\021brida)29 b(combina)f(os)h(m)6 b(\264)-39 b(etodos)109
1800 y(anteriores,)24 b(n)6 b(\230)-39 b(ao)25 b(s)8
b(\264)-41 b(o)25 b(pre)n(v)o(enindo)e(mas)h(tamb)6 b(\264)-39
b(em)24 b(reagindo)30 b(\036)-39 b(a)26 b(ataques.)409
1970 y(As)j(pesquisas)f(que)h(en)l(v)n(olv)o(em)f(propostas)h(de)g
(mitigac)-38 b(\270)9 b(\230)-39 b(ao)30 b(de)f(DDoS)h(em)f
(arquiteturas)g(de)109 2089 y Fj(cloud)p Fn(,)39 b(ainda)e(s)6
b(\230)-39 b(ao)37 b(consideradas)f(incipientes)g(e)h(distantes)f(de)h
(uma)g(con)l(v)o(er)n(g)6 b(\210)-39 b(encia.)67 b(Dentre)37
b(as)109 2209 y(poucas)26 b(propostas)g(para)h(estes)f(ambientes,)g
(destaca-se)h(o)g Fj(fr)o(ame)o(work)g Fn(pr)8 b(\264)-41
b(o-ati)n(v)n(o)25 b(CluB,)j(apresen-)109 2328 y(tado)h(em)h
([Hazelhurst)24 b(2008)o(],)32 b(que)d(considera)h(uma)f
Fj(cloud)j Fn(como)d(uma)h(rede)g(constitu)m(\264)-30
b(\021da)28 b(de)i(um)109 2448 y(conjunto)22 b(de)h Fj(cluster)o(s)p
Fn(,)g(ou)g Fj(A)n(utonomous)e(Systems)i Fn(\(AS\).)h(Estre)f(trabalho)
g(sugere)h(que)f(sejam)g(sele-)109 2567 y(cionados)g(determinados)f
(roteadores,)i(dispostos)e(de)h(forma)h(distrib)n(u)m(\264)-30
b(\021da,)22 b(para)i(an)6 b(\264)-39 b(alise)24 b(de)f(tr)6
b(\264)-39 b(afe)o(go)109 2687 y(e)32 b(consequente)h(pre)n(v)o(enc)-38
b(\270)9 b(\230)-38 b(ao)32 b(de)h(que)g(as)f(requisic)-38
b(\270)13 b(\230)-41 b(oes)32 b(maliciosas)f(alcancem)i(a)g(aplicac)-38
b(\270)10 b(\230)-38 b(ao.)54 b(Estes)109 2807 y(roteadores)33
b(s)6 b(\230)-39 b(ao)32 b(respons)6 b(\264)-39 b(av)o(eis)32
b(por)h(gerar)g Fj(tok)o(ens)g Fn(de)g(autenticac)-38
b(\270)10 b(\230)-38 b(ao)33 b(para)g(le)o(gitimar)f(os)g(pacotes,)109
2926 y(sendo)k(que)h(a)g(autenticac)-38 b(\270)11 b(\230)-39
b(ao)43 b(\264)-39 b(e)37 b(necess)6 b(\264)-39 b(aria)38
b(para)f(a)g(entrada,)j(sa)m(\264)-30 b(\021da)37 b(ou)g(tr)6
b(\210)-39 b(ansito)35 b(na)i(arquitetura.)109 3046 y(Cada)26
b Fj(cluster)h Fn(tem)f(seu)f(c)8 b(\264)-41 b(odigo)25
b(de)h(autenticac)-38 b(\270)10 b(\230)-38 b(ao,)26 b(que)31
b(\264)-39 b(e)26 b(trocado)g(periodicamente,)f(podendo)g(ser)109
3165 y(gerado)j(por)g(uma)g(func)-38 b(\270)10 b(\230)-38
b(ao)28 b Fj(hash)p Fn(,)g(como)f(MD5)h(ou)g(SHA.)g(O)g(uso)f(de)i
(ferramentas)f(apropriadas)g(de)109 3285 y(criptogra\002a)e(e)g
(atualizac)-38 b(\270)13 b(\230)-41 b(oes)25 b(peri)8
b(\264)-41 b(odicas)25 b(de)h(componentes)e(da)i(infraestrutura)f
(parte)h(da)g(proposta)109 3404 y(do)e(CluB.)409 3574
y(Neste)c Fj(fr)o(ame)o(work)p Fn(,)f(todo)h(pacote,)h(malicioso)e(ou)g
(n)6 b(\230)-39 b(ao,)21 b(precisa)g(ser)f(v)o(eri\002cado)g(para)h
(entrar)l(,)109 3693 y(sair)35 b(ou)h(transitar)f(na)h(arquitetura.)64
b(Cada)36 b(roteador)g(alocado)g(de)n(v)o(er)6 b(\264)-39
b(a)35 b(realizar)i(a)f(v)o(eri\002cac)-38 b(\270)11
b(\230)-38 b(ao,)38 b(o)109 3813 y(que)c(\264)-39 b(e)29
b(custoso)e(de)n(vido)h(ao)g Fj(o)o(verhead)j Fn(causado)e(pela)f
(autenticac)-38 b(\270)10 b(\230)-38 b(ao)29 b(de)f(cada)h(pacote.)42
b(T)-8 b(amb)6 b(\264)-39 b(em)33 b(\264)-38 b(e)109
3932 y(necess)6 b(\264)-39 b(aria)23 b(a)g(implantac)-38
b(\270)10 b(\230)-39 b(ao)23 b(e)g(atualizac)-38 b(\270)11
b(\230)-39 b(ao)23 b(dos)f(algoritmos)f(de)i(an)6 b(\264)-39
b(alise)23 b(de)g(tr)6 b(\264)-39 b(afe)o(go)22 b(na)h(arquitetura)109
4052 y(onde)32 b(estaria)h(sendo)f(utilizado)g(o)g(CluB.)h(Esta)f
(quest)6 b(\230)-39 b(ao)33 b(se)f(torna)h(in)l(vi)6
b(\264)-39 b(av)o(el)31 b(ao)i(se)g(tratar)g(de)f(uma)109
4171 y Fj(cloud)p Fn(,)24 b(de)n(vido)29 b(\036)-39 b(a)26
b(neb)n(ulosidade)d(de)i(sua)g(arquitetura)f(e)i(infraestrutura.)409
4341 y([V)-11 b(erkaik)25 b(et)f(al.)31 b(2006)o(])e(apresentam)f
(outra)g(proposta)f(pr)8 b(\264)-41 b(o-ati)n(v)n(a,)27
b(que)h(empre)o(ga)g(Comuni-)109 4460 y(dades)20 b(de)g(Interesse)h
(\(COIs\))g(para)g(capturar)f(dados)g(sobre)g(o)h(comportamento)d
(coleti)n(v)n(o)h(das)h(entida-)109 4580 y(des)27 b(remotas,)f
(utilizando-os)g(para)h(predizer)h(o)f(comportamento)e(futuro.)37
b(T)-8 b(al)27 b(proposta)f(se)h(baseia)109 4699 y(no)37
b(f)o(ato)h(de)g(que)g(clientes)f(que)h(ti)n(v)o(eram)e
(relacionamentos)h(le)o(g)m(\264)-30 b(\021timos)35 b(anteriormente)i
(possuem)109 4819 y(bons)30 b(ind)m(\264)-30 b(\021cios)29
b(e)i(podem)g(ser)g(considerados)f(no)o(v)n(amente)f(le)o(g)m(\264)-30
b(\021timos.)46 b(Estas)30 b(a\002rmac)-38 b(\270)15
b(\230)-42 b(oes)31 b(s)6 b(\230)-39 b(ao)31 b(ge-)109
4939 y(radas)c(da)f(observ)n(ac)-38 b(\270)11 b(\230)-39
b(ao)27 b(de)g(comunicac)-38 b(\270)12 b(\230)-41 b(oes)27
b(normais)e(da)i(rede)g(e)g(s)6 b(\230)-39 b(ao)27 b(utilizadas)f(em)g
(conjunto)f(com)109 5058 y(pol)m(\264)-30 b(\021ticas)21
b(espec)m(\264)-30 b(\021\002cas)24 b(do)f(servidor)f(para)i(mitigar)d
(pr)8 b(\264)-41 b(o-ati)n(v)n(amente)21 b(os)i(ataques)g(de)g(DDoS,)g
(usando)109 5178 y(mecanismos)29 b(e)o(xistentes)f(nos)i(roteadores.)47
b(Entretanto,)31 b(a)f(identi\002cac)-38 b(\270)11 b(\230)-39
b(ao)30 b(dos)g(clientes)g(passados)109 5297 y(n)6 b(\230)-39
b(ao)34 b(\264)-39 b(e)29 b(t)6 b(\230)-39 b(ao)28 b(tri)n(vial.)41
b(Al)6 b(\264)-39 b(em)28 b(do)g(pequeno)g Fj(o)o(verhead)j
Fn(gerado)e(pela)f(v)o(eri\002cac)-38 b(\270)11 b(\230)-38
b(ao,)29 b(enderec)-38 b(\270)6 b(os)28 b(IPs)h(s)6 b(\230)-39
b(ao)109 5417 y(normalmente)32 b(din)6 b(\210)-39 b(amicos)31
b(e)j(a)f(e)o(xig)6 b(\210)-39 b(encia)32 b(da)i(realizac)-38
b(\270)11 b(\230)-39 b(ao)33 b(de)h Fj(lo)o(gin)e Fn(para)h(a)h
(identi\002cac)-38 b(\270)10 b(\230)-38 b(ao)33 b(n)6
b(\230)-39 b(ao)38 b(\264)-38 b(e)109 5536 y(poss)m(\264)-30
b(\021v)o(el,)23 b(dado)h(que)h(o)g(ataque)g(de)f(DDoS)h(pode)g(a)g
(impossibilitar)-5 b(.)409 5706 y(Em)32 b([Bakshi)25
b(and)g(Y)-11 b(ogesh1)24 b(2010)o(],)36 b(ataques)d(s)6
b(\230)-39 b(ao)33 b(tratados)g(atra)n(v)6 b(\264)-39
b(es)33 b(da)g(criac)-38 b(\270)11 b(\230)-38 b(ao)33
b(de)g(uma)109 5825 y(no)o(v)n(a)21 b(inst)6 b(\210)-39
b(ancia)23 b(da)g(aplicac)-38 b(\270)10 b(\230)-38 b(ao.)30
b(Uma)23 b(v)o(ez)g(que)g(um)f(ataque)h(DDoS)29 b(\264)-39
b(e)24 b(detectado,)f(a)g(proposta)f(b)n(usca)p Black
Black eop end
%%Page: 4 4
TeXDict begin 4 3 bop Black Black 109 326 a Fn(identi\002car)32
b(os)g(atacantes)h(atra)n(v)6 b(\264)-39 b(es)32 b(de)h(PINGs:)46
b(caso)32 b(um)g(cliente)g(suspeito)f(de)i(ser)f(atacante)h(n)6
b(\230)-39 b(ao)109 446 y(responda)33 b(ao)i(PING,)f(ele)40
b(\264)-38 b(e)34 b(considerado)g(como)f(um)h(atacante,)i(de)f(f)o
(ato.)58 b(Desta)34 b(maneira,)j(ape-)109 566 y(nas)29
b(os)g(clientes)g(que)g(responderem)g(ao)g(PING)h(ser)6
b(\230)-39 b(ao)30 b(redirecionados)f(para)h(a)f(no)o(v)n(a)f(inst)6
b(\210)-39 b(ancia)29 b(da)109 685 y(aplicac)-38 b(\270)10
b(\230)-38 b(ao.)45 b(Entretanto,)29 b(tal)g(abordagem)h(depende)f(da)h
(premissa)e(que)i(atacantes)g(jamais)e(respon-)109 805
y(der)6 b(\230)-39 b(ao)33 b(a)h(PINGs)g(e)f(que)g(clientes)g(genu)m
(\264)-30 b(\021nos)32 b(sempre)h(responder)6 b(\230)-39
b(ao,)36 b(o)d(que)g(nem)g(sempre)g(condiz)109 924 y(com)24
b(a)h(realidade.)409 1094 y([W)-8 b(al\002sh)25 b(et)g(al.)30
b(2010])42 b(apresenta)h(uma)f(forma)h(de)f(mitigac)-38
b(\270)9 b(\230)-38 b(ao)42 b(de)h(ataque)g(classi\002cada)109
1213 y(como)34 b(defesa)h(baseada)g(em)f(recursos)h([Dw)o(ork)25
b(and)f(Naor)h(1993].)60 b(T)-8 b(oda)34 b(v)o(ez)h(que)f(um)g
(determi-)109 1333 y(nado)25 b(limite)f(de)h(banda)31
b(\264)-39 b(e)26 b(consumido)e(com)h(requisic)-38 b(\270)13
b(\230)-42 b(oes)25 b(para)h(um)f(servidor)l(,)g(este)g(servidor)l(,)g
(antes)109 1452 y(que)32 b(seus)g(recursos)h(se)f(esgotem,)i(encoraja)f
(seus)f(clientes)g(a)h(en)l(viar)f(v)n(olumes)g(ainda)g(mais)g(altos)
109 1572 y(de)d(tr)6 b(\264)-39 b(afe)o(go.)44 b(Considera-se)30
b(que)f(os)g(atacantes)h(j)6 b(\264)-39 b(a)29 b(estariam)g(usando)g
(sua)g(capacidade)h(m)6 b(\264)-39 b(axima)29 b(e,)109
1691 y(assim,)24 b(eles)i(n)6 b(\230)-39 b(ao)25 b(poderiam)g(reagir)h
(ao)f(encorajamento.)33 b(A)25 b(proposta)g(se)g(baseia)h(na)f
(premissa)g(que)109 1811 y(bons)i(clientes)h(tem)f(condic)-38
b(\270)13 b(\230)-41 b(oes)28 b(de)g(aumentar)g(seu)g(uso)f(de)i(banda)
f(e)g(reagir)h(de)f(forma)g(dr)6 b(\264)-39 b(astica)28
b(ao)109 1930 y(encorajamento.)33 b(O)26 b(resultado)f(pretendido)31
b(\264)-39 b(e)27 b(que)e(os)h(bons)f(clientes)g(dominem)g(os)g(maus)h
(clientes)109 2050 y(ao)31 b(capturar)i(uma)e(frac)-38
b(\270)11 b(\230)-38 b(ao)32 b(maior)f(de)h(recursos)f(do)h(servidor)-5
b(.)50 b(O)32 b(cliente)f(ser)6 b(\264)-39 b(a)32 b(atendido)f(caso)h
(ele)109 2169 y(tenha)f(banda)h(o)f(su\002ciente)h(para)g(se)g
(sobressair)f(mediante)g(o)h(tr)6 b(\264)-39 b(afe)o(go)31
b(dos)g(atacantes.)52 b(Um)31 b(tanto)109 2289 y(curiosa,)24
b(esta)h(proposta)e(ocasiona)i(di)n(v)o(ersos)d(problemas)i(como)g(o)g
(encorajamento)h(a)g(recebimento)109 2409 y(de)31 b(ainda)f(mais)h(tr)6
b(\264)-39 b(afe)o(go)30 b(em)h(cen)6 b(\264)-39 b(arios)31
b(de)g(ataque.)49 b(Di\002cilmente)30 b(um)g(servic)-38
b(\270)5 b(o)31 b(conse)o(guir)6 b(\264)-39 b(a)30 b(aten-)109
2528 y(der)23 b(a)g(tantas)g(requisic)-38 b(\270)12 b(\230)-41
b(oes)23 b(e)g(clientes)f(le)o(g)m(\264)-30 b(\021timos)21
b(n)6 b(\230)-39 b(ao)23 b(necessariamente)g(dominar)6
b(\230)-39 b(ao)22 b(o)g(tr)6 b(\264)-39 b(afe)o(go)23
b(que)109 2648 y(che)o(ga)h(ao)h(servidor)-5 b(.)409
2817 y(Ob)o(viamente,)40 b(a)g(e\002c)6 b(\264)-39 b(acia)40
b(de)f(todos)e(os)i(esquemas)f(depende)h(criticamente)f(da)h(capaci-)
109 2937 y(dade)23 b(de)g(se)h(identi\002car)f(ou)g(\002ltrar)g(os)g
(clientes)g(le)o(g)m(\264)-30 b(\021timos.)28 b(W)-8
b(ebSoS)24 b([Sta)n(vrou)h(et)f(al.)31 b(2005)o(])e(\264)-38
b(e)23 b(uma)109 3056 y(adaptac)-38 b(\270)10 b(\230)-38
b(ao)33 b(de)h Fj(Secur)l(e)g(Overlay)f(Services)h Fn(\(SOS\))g([K)n
(eromytis)23 b(et)i(al.)31 b(2002)o(])j(que)f(mitiga)f(DDoS)109
3176 y(em)39 b(servidores)g(web,)j(reati)n(v)n(amente)c(ap)8
b(\264)-41 b(os)39 b(a)h(detecc)-38 b(\270)11 b(\230)-39
b(ao)40 b(do)f(ataque.)74 b(Com)39 b(uma)g(\002ltragem)g(ro-)109
3295 y(b)n(usta)31 b(de)h(tr)6 b(\264)-39 b(afe)o(go)32
b(e)h(bloqueio)e(de)h(requisic)-38 b(\270)13 b(\230)-42
b(oes)32 b(n)6 b(\230)-39 b(ao)32 b(apro)o(v)n(adas,)h(forma-se)f(um)g
Fj(o)o(verlay)g Fn(se)o(guro.)109 3415 y(O)26 b(servidor)g(utiliza)f
(mecanismos)g(de)h(autenticac)-38 b(\270)11 b(\230)-39
b(ao)27 b(criptogr)6 b(\264)-39 b(a\002ca)27 b(e)f(um)g(teste)g(gr)6
b(\264)-39 b(a\002co)27 b(de)f(T)l(uring)109 3534 y([Dietrich)e(et)h
(al.)31 b(2000)o(])23 b(para)f(diferenciar)h(clientes)f(humanos)f(de)h
Fj(scripts)f Fn(de)i(ataque.)30 b(Estes)22 b(proce-)109
3654 y(dimentos,)h(se)o(gundo)g(os)i(testes)f(dos)g(autores,)h(n)6
b(\230)-39 b(ao)24 b(sobrecarre)o(gam)h(o)f(funcionamento)g(do)g
(servic)-38 b(\270)5 b(o,)109 3773 y(por)h(\264)-39 b(em)21
b(e)o(xigem)g(que)h(os)f(roteadores)h(localizados)f(no)h(per)m(\264)-30
b(\021metro)21 b(do)h(servidor)f(sejam)g(con\002gurados)109
3893 y(para)k(controlar)g(o)f(tr)6 b(\264)-39 b(afe)o(go,)25
b(procedimento)f(in)l(vi)6 b(\264)-39 b(av)o(el)23 b(para)i
(arquiteturas)g(de)f Fj(cloud)p Fn(.)p Black 109 4153
a Fi(3.)p Black 49 w(Ar)n(quitetura)j(para)g(Mitigac)-42
b(\270)1427 4152 y(\230)1418 4153 y(ao)27 b(de)g(DDoS)g(em)g
Fh(Cloud)109 4341 y Fn(Uma)20 b(arquitetura)g(em)g Fj(cloud)i
Fn(en)l(v)n(olv)o(e)e(a)g(comunicac)-38 b(\270)10 b(\230)-38
b(ao)20 b(entre)h(in)8 b(\264)-41 b(umeros)19 b(componentes)g(atra)n(v)
6 b(\264)-39 b(es)21 b(de)109 4460 y(APIs)27 b(\()p Fj(Application)f
(Pr)l(o)o(gr)o(aming)f(Interface)p Fn(\))i(de)h(servic)-38
b(\270)5 b(os)27 b(web)l(.)38 b(Os)28 b(usu)6 b(\264)-39
b(arios)26 b(desta)h(arquitetura)109 4580 y(n)6 b(\230)-39
b(ao)37 b(sabem)g(e)g(n)6 b(\230)-39 b(ao)37 b(precisam)g(saber)h
(sobre)f(a)h(localizac)-38 b(\270)10 b(\230)-38 b(ao)37
b(de)g(seus)g(dados)g(ou)g(aplicac)-38 b(\270)13 b(\230)-41
b(oes)37 b(que)109 4699 y(desejem)31 b(utilizar)l(,)j(por)6
b(\264)-39 b(em)32 b(precisam)g(aceitar)h(e)f(dependem)g(dos)g(n)m
(\264)-30 b(\021v)o(eis)30 b(de)j(se)o(guranc)-38 b(\270)t(a)33
b(vigentes,)109 4819 y(que)d(s)6 b(\230)-39 b(ao)30 b(t)8
b(\264)-41 b(opicos)29 b(preocupantes)h(para)g(administradores.)46
b(A)30 b(se)o(guranc)-38 b(\270)t(a)31 b(em)f Fj(cloud)i
Fn(compreende)109 4939 y(as)e(\264)-38 b(areas)25 b(de)g(se)o(guranc)
-38 b(\270)5 b(a)25 b(de)g(dados)f(e)h(da)g(rede,)g(se)o(gundo)f
([Dhage)h(et)g(al.)31 b(2011)o(]:)409 5108 y(Enquanto)20
b(um)h(ataque)g(em)h(dados)e(afeta)j(um)d(n)8 b(\264)-41
b(umero)21 b(restrito)g(de)g(usu)6 b(\264)-39 b(arios,)22
b(um)e(ataque)i(na)109 5227 y(rede)28 b(pode)g(comprometer)g(di)n(v)o
(ersos)e(usu)6 b(\264)-39 b(arios)28 b(simultaneamente.)39
b(Como)28 b(ataques)g(de)g(DDos)g(em)109 5347 y(uma)23
b Fj(cloud)i Fn(compreendem)e(um)g(ataque)29 b(\036)-39
b(a)24 b(se)o(guranc)-38 b(\270)5 b(a)23 b(em)g(rede,)i(eles)e(s)6
b(\230)-39 b(ao)23 b(de)h(import)6 b(\210)-39 b(ancia)22
b(cr)m(\264)-30 b(\021tica.)109 5467 y(Com)33 b(a)h(no)o(v)n(a)f
(infraestrutura)g(de)h(recursos)g(criada)g(pelas)g Fj(clouds)p
Fn(,)h(e)o(xiste)d(a)i(possibilidade)e(de)i(se)109 5586
y(mo)o(v)o(er)d(\002sicamente)h(uma)g(aplicac)-38 b(\270)11
b(\230)-39 b(ao)33 b(para)g(outro)e(enderec)-38 b(\270)6
b(o)32 b(quando)g(ela)38 b(\264)-38 b(e)33 b(atacada)g(por)f(DDoS.)109
5706 y(Com)d(isso,)35 b(\264)-39 b(e)30 b(possibilitada)c(a)k(toler)6
b(\210)-39 b(ancia)35 b(\036)-39 b(a)30 b(f)o(alhas)f(e)g(a)h(conserv)n
(ac)-38 b(\270)10 b(\230)-38 b(ao)29 b(de)g(recursos)h(despendidos,)109
5825 y(pois)24 b(este)g(no)o(v)n(o)g(enderec)-38 b(\270)6
b(o)25 b(s)8 b(\264)-41 b(o)24 b(ser)6 b(\264)-39 b(a)25
b(conhecido)g(por)f(solicitantes)g(le)o(g)m(\264)-30
b(\021timos.)p Black Black eop end
%%Page: 5 5
TeXDict begin 5 4 bop Black Black 409 326 a Fn(Este)32
b(trabalho)g(prop)8 b(\230)-41 b(oe)33 b(uma)f(arquitetura)h(h)m(\264)
-30 b(\021brida)32 b(para)h(mitigar)e(ataques)i(de)f(DDoS)h(em)109
446 y Fj(clouds)25 b Fn(de)h(forma)g(aut)8 b(\210)-41
b(onoma)25 b(e)h(independente.)34 b(Ele)26 b(se)g(diferencia)g(de)h
(outras)e(propostas)g(pela)h(in-)109 566 y(depend)6 b(\210)-39
b(encia)22 b(da)g(aplicac)-38 b(\270)11 b(\230)-39 b(ao)23
b(hospedada,)f(por)g(pro)o(v)o(er)g(acur)6 b(\264)-39
b(acia)23 b(na)f(\002ltratem)g(de)g(tr)6 b(\264)-39 b(afe)o(go)22
b(le)o(g)m(\264)-30 b(\021timo,)109 685 y(por)32 b(n)6
b(\230)-39 b(ao)33 b(onerar)h(\002nanceiramente)f(o)g(uso)f(dos)h
(recursos,)h(e)g(por)e(minimizar)g(os)g(problemas)h(cau-)109
805 y(sados)c(pelo)h(ataque)g(sem)g(interv)o(enc)-38
b(\270)10 b(\230)-39 b(ao)31 b(humana.)46 b(A)30 b(arquitetura)g
(proposta)f(poder)6 b(\264)-39 b(a)30 b(ser)h(utilizada)109
924 y(por)j(qualquer)h(aplicac)-38 b(\270)10 b(\230)-38
b(ao)35 b(hospedada)f(em)h(uma)f Fj(cloud)j Fn(que,)g(ao)e(sofrer)g
(ind)m(\264)-30 b(\021cios)34 b(de)h(um)f(ataque)109
1044 y(DDoS,)41 b(\002ltra)g(o)h(tr)6 b(\264)-39 b(afe)o(go)41
b(le)o(g)m(\264)-30 b(\021timo)39 b(e)i(encaminha)g(apenas)g(este)h
(para)g(uma)e(no)o(v)n(a)g(inst)6 b(\210)-39 b(ancia)41
b(da)109 1163 y(mesma)24 b(aplicac)-38 b(\270)10 b(\230)-38
b(ao.)p Black 906 3158 a @beginspecial 0 @llx 0 @lly
300 @urx 285 @ury 2338 @rwi @setspecial
%%BeginDocument: arq.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: arq.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Fernando Gielow
%%CreationDate: 23/11/11
%%BoundingBox: 0 0 300 285
%%HiResBoundingBox: 0 0 300 285
%%CropBox: 0 0 300 285
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 124 8
%%BeginData: 23412 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD06FFA984A984A984A984A984A984A984A984A984A984A984A984
%A984A984A984A984A984A984A984A984A984A984A984A984A984A984A984
%A984A984A984A984A984A984A984A984A984A984A984A984A984A984A984
%A984A984A984A984A984A984A984A984A984A984A984A9FD15FF84CFA8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8CF84FD14FFAFA9A8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8A9A9FD14FF7EFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF84AFFD14FFA9
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A9A9FD14FF84FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8AFA8A8A8FFA8A8A8FFA8A8A8AFA8A8A8FFA8A8A8FFA8A8
%A8AFA8A8A8FFA8A8A8FFA8A8A8AFA8A8A8FFA8A8A8FFA8A8A8AFA8A8A8FF
%A8A8A8FFA8A8A8AFA8A8A8FFA8A8A8FFA8A8A8AFA8A8A8FFA8A8A8FFA8A8
%A8AFA8A8A8FF84AFFD14FFA9A8FFA8FF84AFFFA9A8FFA8AFA8AFA8FF84AF
%FFA9A8FFA8AFA8A9A8FF84AFFFA9A8FFA8AFA8A9A8FF84FFAFA9A8FFA8AF
%A8A9A8FF84FFAFA9A8FFA8AFA8A9A9FF84FFAFA9A8FF84FFA8A9A9FF84FF
%A9A9A8FF84FFA8A9A9FF84FFA9A9A8FF84FFA8A9A9FF84FFA8FFA8A9AFFD
%14FF84CFA8FFA8AFFD08FFAFFD0BFFAFFD0BFFAFFD0BFFAFFD0BFFAFFD0B
%FFAFFD0BFFAFFD0BFFAFFFFFFFA8FFA8CA84FD15FFA9A8FFA8A9A9FD60FF
%A9A8FFA8A9AFFD14FF84CFA8FFA8FD61FFA8FFA8CF84FD14FFAFA9A8FFA8
%AFA9FD61FFA8FFA8A9A9FD14FF7EFFA8CA84AFFD30FFA8A87DFD0AFFA852
%7DFD20FF84CFA8FF84AFFD14FFA9A8FFA8FD1BFFA8A87DFFFFA8A8FFA8FF
%A8FF7DFFFFFFA8A8A8FF7DA8FF527DA8FFA87DFFA8A8FFFF7DA8A87D7DFF
%A87DFD1DFFAFA8FFA8A9A9FD14FF84FFA8CFA8FD1AFF7DF852527D525252
%277D527D52F8FFFF7D27277D275252527D277D277D7D7DF8FD04527D5227
%7D525252FD1CFFA8A8A8FF84AFFD14FFA9A8FFA8A9A8FD19FF7D527D5227
%FF7D7D7D277D7D5227A8FF527D277D52FF27527D52277DFFFFFD0452A8FF
%7D7D277D27FF27A8FD1AFFAFA9A8FFA8A9AFFD14FF84CFA8FFA8FD1AFF7D
%277D277D5252A8A8F8FF2752F8FFFF52272752275252527D277D277D5227
%27527D52522752277D525252A8FD1BFF84FFA8CA84FD15FFA9A8FFA8AFA9
%FD1BFFA8FFFFA8A8FFFFA8FFFF7DA8FFFFA8A8A87D27A8FFFFA8A8FFA87D
%FFA8A8A8FF2752FFA8A8FFFFA8FD1EFFA8FFA8A9AFFD14FF84CFA8FFA8AF
%FD2CFFA8A8FD0DFF527DFD23FF84FFA8CF84FD14FFAFA9A8FFA8FD62FFA9
%A8FFA8A9A9FD14FF7EFFA8A8A8FD61FFA8A8A8FF84AFFD14FFA9A8FFA8AF
%A9FD09FFAFFD0BFFAFFD0BFFAFFD0BFFAFFD0BFFAFFD0BFFAFFD0BFFAFFD
%0BFFAFFFFFA9A8FFA8A9A9FD14FF84FFA8A8A8FFA8A8A8A9A8FF84A9A8A8
%84FF84A8A8A9A8FF84A9A8A952FD04A8A9A8FF84A9A8A8A8FF84A8A8A9A8
%FF84A9A8A8A8FF84A8A8A9A8FF84A9A8A8A8FF84A9A8A9A8AF84AFA8A8A8
%FF84A9A8A9A8AF84AFA8A8A8FF84A9A8A9A8FF84AFA8A8A8AFA8CFA8FF84
%AFFD14FFA9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA1F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A9AFFD14FF84CFA8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A827F8F87DFFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8CA84FD15FFA9A8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A82752277DFFFFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8A9AFFD14FF84CFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8FFA8A8277DA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8CF84FD14FFAFA9CAFF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8527DFFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFCAA9A9FD14FF7EA884A884A884A884A884A8
%84A884A884A884A884A884A884A884A8277D84A884A884A884A884A884A8
%84A884A884A884A884A884A884A884A884A884A884A884A884A884A884A8
%84A884A884A884A884A884A884A884A884A884A884A884A884A884A884A8
%84A884A87EFD16FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAF5284FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%27A8FFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD32FF27A8FD16
%FF52F827FD65FF52A8FD15FFA8F8F8F87DFD64FF27A8FD15FFA85252527D
%FD64FF52A8FD17FF27FD4CFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFAFFF27A8FFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFA827A8FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD15FF
%A984A984A984A984A984A984A984A984A984A984A984A984A984A9842E7D
%A984A984A984A984A984A984A984A984A984A984A984A8278484A984A984
%A984A984A984A984A984A984A984A984A984A984A984A984A984A984A984
%A984A984A984A984A984A984A984A984A8A9FD14FF7EFFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CF27A8A8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CAA8FFA8FFA827A8FFA8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FF84AFFD14FFA9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8527DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FF27A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A9A9
%FD14FF84FFA8A8A8FFA8A8A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%FF27A8CACFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA827A8FFA8
%FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8A8A8FFA8A8A8FF84AFFD14FFA9A8FFA8FFA8
%FFA8FF84A984A984A984A984A984A984A984A984A984527DA984A984A984
%A984A984A984A984A984A984FFA8FFA8A827A8A8FFA8FF84A984A984A984
%A984A984A984A984A984A984A984A984A984A984A984A984A984A984A984
%A984FFA8FFA8FFA8FFA8A9AFFD14FF84CFA8FFA8A8A8FFA88484A984A984
%A984A984A984A984A984A984A984A984A984A984A984A984A984A984A984
%A98485A8CAA8FFA8277DFFA8CF7E8584A984A984A984A984A984A984A984
%A984A984A984A984A984A984A984A984A984A984A98484A8FFA8A8A8FFA8
%CA84FD15FFA9A8FFA8FFA8FFA8FF84FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF84A9A8FFA8FF27A8
%A8FFA8A9A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA8FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FF84FFA8FFA8FFA8FFA8A9AFFD14FF84CFA8FF
%A8A8A8FFA884A884A8A9A8AFA88459AFA8AFA8AFA9A9A98484A9A8FF847D
%A8AFA9A9A8AFA98453FFA8AFA8A9A8CFA8FFA827A8FFA8CF84A9A8AFA8AF
%A9A9A8AFA8AFA8AFA8A9A9AFA97E84AFA9AF7E7DA9A9A9AFA8AFA8AFA8A9
%A8AFA884A8FFA8A8A8FFA8CF84FD14FFAFA9A8FFA8FFA8FFA8FF84AF5953
%287D525953527D527D525284527D5984527D7D52527D287D527DA97D2753
%53527EFF84A9A8FFA8FF27A8A8FFA8A984FF84522E7D287D525952527D52
%527D527D7D84287D7D522E7D527E2784AFAFA9AFA9AFA9AF84FFA8FFA8FF
%A8FFA8A9A9FD14FF7EFFA8A8A8FFA8A8A8A9A852277E527D2752527D2727
%527D277D7D52525227525952277E2752A9A9287D2827277DA98584FFA8FF
%A827A8FFA8FF84A9A97D5952272852527D272752527E277D7D5252522752
%7D272E7E2752A9AFA8A9A8AFA8A9A8A9A8A8A8FFA8A8A8FF84AFFD14FFA9
%A8FFA8FFA8FFA8FF84AF7D7D847E7D597D7D525353847EA8527D7D7D527D
%7D52597D52847DAFA97E527E7D7DA8FF84AFA8FFA8FF27A8A8FFA8A984FF
%7E52278452847DAF7D597E84847E527D7D7D527D7D52597D52847DFFA9AF
%A9FFA9AFA9FF84FFA8FFA8FFA8FFA8A9A9FD14FF84FFA8A8A8FFA8CAA8A9
%A8AFA9AFA9AFA9FFA9AFA9FFA9AFA9AFA9AFA9AFA9AFA9FFA9AFA9AFA8A9
%A9AFA9AFA8AFA9A984FFA8FFA827A8FFA8FF84A9A9A82E53A8AFA8AFA8AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA8AFA8A9A8AFA8A9A8A9A8FF
%A8FFA8A8A8FF84AFFD14FFA9A8FFA8FFA8FFA8FF84AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FF84A9
%A8FFA8A827A8A8FFA8A9A9AFA9FFAFAFA8AFA9AFA9AFA9FFA8AFA9AFA8FF
%A9AFA9AFA9AFA9FFA9AFA9AFA9AFA9AFA9AF84FFA87D52FFFFFFCFAFFD15
%FF84CFA8FFA8A8A8FFA884A8AFA9AFA8AFA9AFA8AFA8AFA8AFA8AFA8AFA9
%AFA8AFA8A9A8AFA8A9A8AFA9AFA8AFA8AFA8A9A8CAA8FFA8277DFFA8CA84
%A9A8AFA97D84AFA8AFA859A8A952A9A8AFA9AF5984A97D7DA9A9A953A9A8
%A9A8AFA9AFA8AFA9845927F852FD047D52FD047DA8FD047DA8FD0BFFA9A8
%FFA8FFA8FFA8FF84FF53527D7D527D7E847D5259FFA97D5284527D7D5253
%AFA9FFA9AFA9FFA9A984A9AFFFA8AFA9A9A8FFA8FF27A8A8FFA8A9A9FF84
%592784527EAFA9277D7D537D5984595959537D2E7E5953592EA9FFA9A984
%A884A984AF8452F8F82752275227522752275227522752F8A8FD0BFF84CF
%A8FFA8A8A8FFA884A852592E527E2752527D2727A9A82E27287D52285352
%84AFA8AFA8A9A8AF2E7D59A9A87E28A9A8CFA8FFA827A8FFA8CF84A9AF59
%5353525227FF7D53522E52522752537E272753522E7D525253FFA9A8287E
%FD047D52A9A8A82752A8FFA8FFA8FD08FF52A8FD0AFFAFA9A8FFA8FFA8FF
%A8FF84AF59A8597D2EA8527E595252FF7E525252277D525253FFA9AFA9AF
%A9FF7D527D5252527D527EAFA8FFA8FF27A8A8FFA8A984FF845252592E59
%A97E287D537D52527D527D7D7D59527D5259597DA9FF7D59595352535952
%84FFCAFF7DFFA8FFA8A9A9FD07FF27A8FD0BFF7EFFA8A8A8FFA8A8A8A9A8
%AFA8AFA8A9A8AFA9AFA8AFA8AFA8AF52A8A87DA8AFA8AFA8A9A8AFA97E28
%7D5252F8AF277EA8FFA8FFA827A8FFA8FF84A9A8AFA8AFA8AFA9A9A8AFA8
%AFA8AFA8AFA8AFA9AFA8AFA9A9A8AFA8A9A97D527D275228592884A8A8A8
%FFA8A8A8FF84AFFD07FF277DFD0BFFA9A8FFA8FFA8FFA8FF84AFA9FFA9AF
%A9FFA9AFA9FFA9AFA9FFA9FFA9FFA9AFA9FFA9AFA9FFA9FFA8527EA9A8A8
%A85284AFA8FFA8FF27A8A8FFA8A984FFA9AFA9FFA9AFA9FFA9AFA9FFA9AF
%A9FFA9AFA9FFA9AFA9FFA9AFA9FFA85284A884A87D5284FFA8FFA8FFA8FF
%A8A9A9FD07FF27A8FD0BFF84FFA8A8A8FFA8CAA885A8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8A9A9AFA8A9A8AFA8A9A8AFA8AF7DA9A9AFA9A87EA984
%FFA8FFA827A8FFA8FF84A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA9
%A9A8AFA8A9A8AFA8A9A8AF7DA9A9AFA9A87EA9A8CAA8FFA8A8A8FF84AFFD
%07FF527DFD0BFFA9A8FFA8FFA8FFA8FF84A984A984A984A984A984A984A9
%84A984A9847E7EA984A984A984A984A984A984A984A984A984A9A8FFA8A8
%27A8A8FFA8AF84A984A984A984A984A984A984A984A984A97E8484A984A9
%84A984A984A984AF84A984A984A984FFA8FFA8FFA8FFA8A9AFFD07FF27A8
%FD0BFF84CFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD04A8
%F87DA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8277DFFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA852F8FD04A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8CA84FD08FF527DFD0BFFA9A8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF27F8F8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF27A8A8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFFFA8F8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8A9AFFD07FF527DFD0BFF84CFA8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FF7D27272752FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA827A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FF27F82727A8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8CF84FD08FF527DFD0AFFAFA9A8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87D527DA8A8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FF27A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8A852527DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8A9A9FD07FF52A8FD0BFF7EFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8F8FD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8FFA827A8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%7D27FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF84
%AFFD07FF527DFD0BFFA9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA827A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FF27A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D52A8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A9A9FD07FF
%52A8FD0BFF84FFA8A8A8FFA8A8A8FFA8CFA8FFA8CAA8FFA8A8A8FFA8CFA8
%FFA8A827FD04A8FFA8CFA8FFA8CAA8FFA8A8A8FFA8CFA8FFA8FFA827A8FF
%A8FFA8CFA8FFA8A8A8FFA8A8A8FFA8CFA8FFA8A8A87D27FFA8FFA8CFA8FF
%A8A8A8FFA8A8A8FFA8CFA8FFA8A8A8FFA8A8A8FF84AFFD07FF527DFD0BFF
%A9A8FFA8FFA8FFA8A9A8FFA8AFA8AFA8FFA8FFA8A9A8FFA8AFA8AFA8277E
%FFA8A9A8FFA8AFA8AFA8FFA8FFA8A9A8FFA8AFA8AFA8A8F8A8A8A9A8FFA8
%FFA8AFA8FFA8FFA8A9A8FFA8FFA8AFA8FF5952FFA9A8FFA8FFA8AFA8FFA8
%FFA8A9A8FFA8FFA8AFA8FFA8FFA8FFA8A9AFFD07FF527DFD0BFF84CFA8FF
%8484A8FF84A9A8A9A8FF84AFA8A9A8FF84AFA8A9A8FF84A82784A8FF84AF
%A8A9A8FF84AFA8A9A8FF84AFA8A9A8FF84FFA87DA8FF84AFA8A9A8FF84FF
%A8A9A8FF84AFA8A9A8FF84FF7D5252A87EFFA8A9A8AF84FFA8A9A8FF84FF
%A8A9A8AF84FFA8A9A8FFA8CA84FD08FF527DFD0BFFA9A8FFA8A9FD17FF27
%FD2FFF52F85227FD17FFA8FFA8A9AFFD07FF527DFD0BFF84CFA8FFA8FD17
%FF27FD2FFFA8F8F87DFD16FF7EFFA8CF84FD08FF5252FD0AFFAFA9A8FFA8
%A9AFFD15FFA827FD30FF5205FD17FFAFA8FFA8A9A9FD07FF527DFD0BFF7E
%FFA8CA84FFFFFFA8A984A984A984A984A984A984A984A984A984842EA984
%A984A984A984A984A984A984A984A984A9A8FD09FFA88484A984A984A984
%A984A984A984A984A984847EA984A984A984A984A984A984A984A984A97E
%A9FD04FFA8A8A8FF84AFFD06FF7D5252A8FD0AFFA9A8FFA8FD05FF84AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AF84FD0AFFAF84FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF84FD04FFA9A8FFA8A9A9FD06
%FF27F82727FD0AFF84FFA8CF84FFFFFFA8A9A9AFA8AFA9AFA8AFA9AFA8A9
%A8AFA8AFA9AFA8AFA8AFA8AFA9AFA8AFA8AFA8AFA8AFA8AFA985A8FD09FF
%A8A9A8AFA9AFA8AFA9AFA8AFA9AFA8AFA8AFA8AFA9AFA8AFA9AFA8AFA8AF
%A8AFA9AFA8AFA8AF84A9FD04FFA8CAA8FF84AFFD06FF7DF8F8A8FD0AFFA9
%A8FFA8A9A9FFFFFF84FFA9A9A9FFA8AFA8AFA87D7DA9A9AFA8AFAFAF52A9
%A9AFA9AFA9FFA87DA8AFA9AFA9AFA9FF84FD0AFFAFA8AFA8AFA9AFA9FF59
%7D84AFA9A9A9FFA9A97EFFA8FFA8AFA9A9A8FFA87DA8AFA9AFA8AFA9AF84
%FD05FFA8FFA8A9AFFD07FF5252FD0BFF84CFA8FFA8FFFFFFA984A9A82759
%522E597E277D527D53275359277E52275352535327AF7D522759277DA8AF
%A8A9A8A9A9FD09FFA8A9A8525252277D52525253287D27595352527D5252
%535228A852525952277D27592E59A8AF84A9FD04FF7EFFA8CA84FD07FF7D
%7D7DA8A8FD09FFA9A8FFA8A9AFFFFFFF84FF7D5227537E525352287D527D
%5284522E277E52527D5927A8FF595953275252FFA9AFA9FF84FD0BFFA9AF
%52A827522E7D59522884522E52527E53277D7D2E7D7E525927527D5327A8
%2E52A8FFA9AF84FD05FFA8FFA8A9AFFFFFFF7D524B4B204B274B52CAFD07
%FF84CFA8FFA8FFFFFFAF85A97D527D59A87D592E7D7D7D28525952528452
%527D52597D7EFF7E52527E5284A8AFA8A9A8A9AFFD09FFA8A9A87DA87D52
%A85253597D7EA852847D52537E52537D847D7D52537D52527E287D7DA9A8
%AFA8A9FD04FFA8FFA8CF84FFFFFF526F444B444B444B2020207DFD05FFAF
%A9A8FFA8FD05FF84AFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFAFA8FFAFFFA9FFA9AFA9AFA9AF84FD04FFA827FD04FFAF84FFAFAFA9
%FFA9FFA9FFAFAFA9FFAFFFA9FFAFFFA9FFA9AFA9FFAFFFA9FFAFFFA9FFA9
%AFA9AFA8FD04FFA8A8FFA8A9A9FFFF766F6F6F4B454B4B4B202076FD06FF
%7EFFA8CA84FFFFFFA8A9A8AFA8AFA9847EAFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA984537D7D7D5227F852A8FFA8A9
%A8AFA8AFA8AFA8A9A8AFA8AF7DA8A9A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A984A9FFFF527DA9FFA8FFA8FFFFFF526F6F936F6F444B204B
%F87DFD06FFA9A8FFFFAFAFFFFFFF84FF7DA8AFFF59A97E59A9FFAFAFA9FF
%A9FFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFAFFF7E5252522752F8F8
%27FFFFAF84FFAFA859FFA9FFA98484FFA97DA87E53FFA9FFA9FFAFAFA9FF
%A9AFA9FFA9AFA9FFA9AFA9FFA8A827277DA87DA87D7D7DA8A85244FD054B
%274B20207DFD06FFA85227A8A8FFFFFFA8A9A95228527D59535228535284
%52527D5252A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA9A87EA884A9FD04FF7D
%277DFFFFFFA8A9A87D275259527EAF2752527E527D275252597D52527E28
%7DA8AFA8A9A8AFA98453847E7D53A927F8F852FD07275227934B4B202720
%272027F87D5227522752272E27F8F852AFFFFFFF84FF595952A8522E5352
%2752287E52527D5284AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF527D7D5284FD
%05FFA8FD04FFAFA9A9527E5228277DFF7D2E7E7D52277D2E2852527D5327
%8452A9A9AFA9AFA9FF527D597D7D5284FF7D277DFFFFFFA8AFFFFFFF766F
%9A6F9A6F6F4B4B272076FD067D5352F82753FFFFFFA984A97E527D7D5252
%7D5953537D2727595252AFA8A9A8AFA8A9A8AFA8A9A8AFA8AF7D52527D2E
%59FD0AFFA8A9A97D277D53527EFF53527E7D2759537E527D532E277D277D
%A8A9A8AFA8A9A85259522859287EFFFFA8A8A8FFA8CA84FFFFFF4B45204B
%204B204B2027F87DFD06FFAF527DA8FD05FF84FFA9FFA9FFA9FFA9FFA9AF
%845252FFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9A8527D597D59FD0BFF
%A9FFA9FFAFFFA8FFA9FFA9FFA9AFA9FFAFAFA9A8287DA9FFAFAFA9FFA9AF
%A9FF527D597D7D5284FD04FFA9CAFFA8A9AFFFFF769394FD044B204B2720
%52FD06FF84FFA8FFA8FFFFFFAF85A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF
%A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8527EA82884AFFD09FFA8A9A9AF
%A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA9AFA9AFA8AFA9AFA8AFA9AFA984
%59FFA9A852A9FD04FFA8FFA8CF84FFFFFF52FD056F4B4B2045207DFD05FF
%AFA9A8FFA8A9AFFFFFFF84A984A984A984A984A984A984A984A984A984A9
%84A984A984A984A984A984A984A97DA9848484FD0AFFAF84A984A984A984
%A984A984A984A984A984A984A984A984A984A984A984A984A984AF84A984
%A984FD05FFA8FFA8A9A9FFFFFF7D52FD064B52FD08FF7EFFA8A8A8FFFFFF
%A9AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8AFA8AFA9A9AFFD09FFA9A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A984FD05FF84CFA8FF
%84AFFD06FFA8A8A8FD0BFFA9A8FFA8AFFD61FFAFA8FFA8A9A9FD14FF84FF
%A8CF84FD25FFA8FD0DFFA8FD08FFA8A8FFA8FD21FFA8A8A8FF84AFFD14FF
%A9A8FFA8FD17FFA8FFA8FFFFA8A8FFFFFFA8FFA8A8A8FFA8FFFFA852FFA8
%FFA8A8FFFF7D7DFFA8FFFF7D7DA8FF7DFF7D52A8FFFFA8A8FFA8FD19FFAF
%A9A8FFA8A9AFFD14FF84CFA8FFA8FD14FFA8FD045227525252277D525252
%7D527D7D7D277DFD06527DFFFD0452277DFF5252527D7DFD0452277D5252
%527D52FD19FF84FFA8CA84FD15FFA9A8FFA8A9A9FD13FFA87D7D52277D52
%A852527D7DA8527DA8527D5252527D52527D5252FFFF7D7D5252527DFF7D
%7D7DA852527D7D277D52A852527D52A8FD19FFA8FFA8A9AFFD14FF84CFA8
%FFA8FD15FF27277DA87DA8A8FF7DA8A8FFA8A87DA87D7D7DA87DA8A87D7D
%A8FFFFA87DA8A87DFFFFA87DA8A87D7DA8A8A87DA82727A87D7DFD19FF84
%FFA8CF84FD14FFAFA9A8FFA8AFFD15FFA87DFD2BFFA87DA8FD1CFFA9A8FF
%A8A9A9FD14FF7EFFA8CA84FD61FFA8A8A8FF84AFFD14FFA9A8FFA8FD62FF
%A9A8FFA8A9A9FD14FF84FFA8CAA8FFFFFFA9FFAFFFFFFFAFFFA9FFFFFFA9
%FFAFFFFFFFAFFFA9FFFFFFA9FFAFFD05FFA9FFFFFFA9FFAFFD05FFA9FFFF
%FFA9FFAFFD05FFA9FFFFFFAFFFAFFD05FFA9FFFFFFAFFFAFFD05FFA9FFFF
%FFAFFFA9FD05FFA9FF84CFA8FF84AFFD14FFA9A8FFA8A984FFA8A9A8A9A8
%FF84A9A8A984FFA8A9A8A9A8FF84AFA8A9A8FF84A9A8A9A8FF84AFA8A9A8
%FF84A9A8A9A8FF84AFA8A852FF84A9A8A9A8FF84AFA8A9A8FF84A9A8A9A8
%FF84AFA8A9A8FF84A9A8A9A8FF84FFA8A8A8FF84AFA8A9A8FF84FFA8A8A8
%FFA8FFA8A9AFFD14FF84CFA8FFA8CAA8FFA8A8A8FFA8CAA8FFA8CAA8FFA8
%A8A8FFA8CAA8FFA8CAA8FFA8A8A8FFA8CAA8FFA8CAA8FFA8A8A8FFA8CAA8
%FFA8277DFFA8A8A8FFA8CAA8FFA8A8A8FFA8A8A8FFA8CFA8FFA8A8A8FFA8
%A8A8FFA8CFA8FFA8A8A8FFA8A8A8FFA8CFA8FFA8A8A8FFA8CA84FD15FFA9
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF27A8FFFFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A9AFFD14FF84CFA8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA827A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8CF84FD14FFAFA9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FF7D52275252FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A9A9FD
%14FF7EFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8F8F8F87DA8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF84AFFD14FFA9A8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7DF852FFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8A9A9FD14FF84FFA8A8A8A9A8A884A9A8A8A8FFFD06
%A884A9A8A8A8FFFD06A884A9A8A8A8FF84FD05A884A9A8A8A8FF84A9A827
%7DFF84AFA8A8A8FF84FD05A884AFA8A8A8FF84FD05A884AFA8A8A8AF84FD
%05A884FFA8A8A8AF84FD04A8CAA8FF84AFFD14FFA9A8FFA8AFA8FFFFAFA9
%FFA9FFFFFFAFFFA8FFFFAFA9FFA9FFFFFFAFFFA8FFFFAFA9FFA9FFFFFFAF
%FFA8FFFFAFA9FFA9FD05FFA8FFFFAFAFFFA9FD05FFA8FFFFAFAFFFA9FD05
%FFA8FFFFAFAFFFA9FFAFFFFFFFA8FFFFAFFFFFA9FFAFFFFFFFA8FFA8FFA8
%A9AFFD14FF84CFA8FF84FD61FFA8FFA8CA84FD15FFA9A8FFA8FD61FFAFA9
%CAFFA8A9AFFD14FF84CFA8FFA8FD61FFA8FFA8CF84FD14FFAFA9A8FFA8A9
%A9FD37FFA8A8FD27FFA9A8FFA8A9A9FD14FF7EFFA8A8A8FD2AFF7D7DA8A8
%FD09FFA87D52FD27FF84CFA8FF84AFFD14FFA9A8FFA8FD24FFA8527D7D52
%52A8527D7DFF5252A8A852A8A85252A87D7DFFA852A8FD24FFA8FFA8A9A9
%FD14FF84FFA8CF84FD23FF7D52275227A827527D525252A8FF522727527D
%FF7D52F85227FF27A8FD22FFA8CAA8FF84AFFD14FFA9A8FFA8AFAFFD22FF
%FD0552A852527D275252FFA827525227A8FFFD0552A827A8FD21FFAFA9A8
%FFA8A9AFFD14FF84CFA8FFA8FD23FF7D525252F8527D7D7D52A87D27A852
%5252A827527D5227A87D527DFD23FFA8FFA8CA84FD15FFA9A8FFA8A9A9FD
%25FF7D7DFD0DFF5252FD2BFFA8FFA8A9AFFD14FF84CFA8FFA8FD35FF7DFD
%2BFF7EFFA8CF84FD14FFAFA9A8FFA8FD63FFA8FFA8A9A9FD14FF7EFFA8CA
%84FD61FFA8A8A8FF84AFFD14FFA9A8FFA8FFAFAFA8FFA8AFFFAFA8FFA8AF
%FFA9A8FFA8AFFFAFA9FF84FFFFA9A8FFA8AFFFAFA9FF84FFFFA9A8FFA8FF
%FFAFA9FF84FFFFA9A8FFA8FFAFAFA9FF84FFFFA9A8FFA8FFAFAFA9FF84FF
%FFA9A9FFA8FFA9A9A9FF84FFAFA9A9FF84FFA9A9A9FF84FFA9A9A8FFA8A9
%A9FD14FF84FFA8A8A8FFA8A8A8AFA8A8A8AFA8A8A8FFA8A8A8A9A8A8A8AF
%A8A8A8FFA8A8A8A9A8A8A8AFA8A8A8FFA8A8A8A9A8A8A8FFA8A8A8FFA8A8
%A8A9A8A8A8FFA8A8A8FFA8A8A8A9A8A8A8FFA8A8A8FFA8A8A8A9A8A8A8FF
%A8A8A8FFA8A8A8A9A8A8A8FFA8A8A8FFA8A8A8FF84AFFD14FFA9A8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A9AFFD14FF84CFA8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8CA84FD15FFA9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A9AFFD14FF84FFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8FF84FD14FFAFA9A8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A8A9FD14FF84A984A984A984A984A984A984A984A984A984A984
%A984A984A984A984A984A984A984A984A984A984A984A984A984A984A984
%A984A984A984A984A984A984A984A984A984A984A984A984A984A984A984
%A984A984A984A984A984A984A984A984A984A984A984A984A984FD0EFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2011-11-21T14:27:39-02:00</xmp:CreateDate>
         <xmp:ModifyDate>2011-11-21T14:27:40-02:00</xmp:ModifyDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:MetadataDate>2011-11-21T14:27:40-02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>244</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA9AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qx3zNFHNqVhHIOSej&#xA;ctxqaVDQgH8TlsZERNd4/S1SAMhfcf0Jf+jbH/fQ/H+uDxZd7Lwo9zv0bY/76H4/1x8WXevhR7nf&#xA;o2x/30Px/rj4su9fCj3O/Rtj/vofj/XHxZd6+FHud+jbH/fQ/H+uPiy718KPc79G2P8Avofj/XHx&#xA;Zd6+FHud+jbH/fQ/H+uPiy718KPc79G2P++h+P8AXHxZd6+FHud+jbH/AH0Px/rj4su9fCj3O/Rt&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Mac OS X 10.7.2 Quartz PDFContext</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>300.000000</stDim:w>
            <stDim:h>285.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Arial-ItalicMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial Italic.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Arial-BoldMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial Bold.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:F77F1174072068118C14AB0813BDBC9E</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F77F1174072068118C14AB0813BDBC9E</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:F77F1174072068118C14AB0813BDBC9E</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F1174072068118C14AB0813BDBC9E</stEvt:instanceID>
                  <stEvt:when>2011-11-21T14:27:40-02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -285 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 285 li
300 285 li
300 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 285 mo
300 285 li
300 0 li
0 0 li
0 285 li
clp
300 285 mo
0 285 li
0 0 li
300 0 li
300 285 li
272.414 191.644 mo
299.38 191.644 li
299.38 164.678 li
272.414 164.678 li
272.414 191.644 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
14.4478 79.3599 mo
264.789 79.3599 li
264.789 284.418 li
14.4478 284.418 li
14.4478 79.3599 li
cp
.878431 .878431 .878431 rgb
ef
14.4478 79.3599 mo
14.4478 79.8599 li
264.289 79.8599 li
264.289 283.918 li
14.9478 283.918 li
14.9478 79.3599 li
14.4478 79.3599 li
14.4478 79.8599 li
14.4478 79.3599 li
13.9478 79.3599 li
13.9478 284.418 li
13.9478 284.55 14.0011 284.678 14.0942 284.772 cv
14.1873 284.865 14.3161 284.918 14.4478 284.918 cv
264.789 284.918 li
264.921 284.918 265.049 284.865 265.143 284.772 cv
265.236 284.678 265.289 284.55 265.289 284.418 cv
265.289 79.3599 li
265.289 79.2282 265.236 79.0994 265.143 79.0063 cv
265.049 78.9132 264.921 78.8599 264.789 78.8599 cv
14.4478 78.8599 li
14.3161 78.8599 14.1873 78.9132 14.0942 79.0063 cv
14.0011 79.0994 13.9478 79.2282 13.9478 79.3599 cv
14.4478 79.3599 li
cp
.356863 .572549 .780392 rgb
f
25.7275 146.146 mo
253.631 146.146 li
253.631 217.364 li
25.7275 217.364 li
25.7275 146.146 li
cp
1 1 1 rgb
ef
32.7275 146.646 mo
36.7275 146.646 li
36.7275 145.646 li
32.7275 145.646 li
cp
39.7275 146.646 mo
43.7275 146.646 li
43.7275 145.646 li
39.7275 145.646 li
cp
46.7275 146.646 mo
50.7275 146.646 li
50.7275 145.646 li
46.7275 145.646 li
cp
53.7275 146.646 mo
57.7275 146.646 li
57.7275 145.646 li
53.7275 145.646 li
cp
60.7275 146.646 mo
64.7275 146.646 li
64.7275 145.646 li
60.7275 145.646 li
cp
67.7275 146.646 mo
71.7275 146.646 li
71.7275 145.646 li
67.7275 145.646 li
cp
74.7275 146.646 mo
78.7275 146.646 li
78.7275 145.646 li
74.7275 145.646 li
cp
81.7275 146.646 mo
85.7275 146.646 li
85.7275 145.646 li
81.7275 145.646 li
cp
88.7275 146.646 mo
92.7275 146.646 li
92.7275 145.646 li
88.7275 145.646 li
cp
95.7275 146.646 mo
99.7275 146.646 li
99.7275 145.646 li
95.7275 145.646 li
cp
102.728 146.646 mo
106.728 146.646 li
106.728 145.646 li
102.728 145.646 li
cp
109.728 146.646 mo
113.728 146.646 li
113.728 145.646 li
109.728 145.646 li
cp
116.728 146.646 mo
120.728 146.646 li
120.728 145.646 li
116.728 145.646 li
cp
123.728 146.646 mo
127.728 146.646 li
127.728 145.646 li
123.728 145.646 li
cp
130.728 146.646 mo
134.728 146.646 li
134.728 145.646 li
130.728 145.646 li
cp
137.728 146.646 mo
141.728 146.646 li
141.728 145.646 li
137.728 145.646 li
cp
144.728 146.646 mo
148.728 146.646 li
148.728 145.646 li
144.728 145.646 li
cp
151.728 146.646 mo
155.728 146.646 li
155.728 145.646 li
151.728 145.646 li
cp
158.728 146.646 mo
162.728 146.646 li
162.728 145.646 li
158.728 145.646 li
cp
165.728 146.646 mo
169.728 146.646 li
169.728 145.646 li
165.728 145.646 li
cp
172.728 146.646 mo
176.728 146.646 li
176.728 145.646 li
172.728 145.646 li
cp
179.727 146.646 mo
183.727 146.646 li
183.727 145.646 li
179.727 145.646 li
cp
186.727 146.646 mo
190.727 146.646 li
190.727 145.646 li
186.727 145.646 li
cp
193.727 146.646 mo
197.727 146.646 li
197.727 145.646 li
193.727 145.646 li
cp
200.727 146.646 mo
204.727 146.646 li
204.727 145.646 li
200.727 145.646 li
cp
207.727 146.646 mo
211.727 146.646 li
211.727 145.646 li
207.727 145.646 li
cp
214.727 146.646 mo
218.727 146.646 li
218.727 145.646 li
214.727 145.646 li
cp
221.727 146.646 mo
225.727 146.646 li
225.727 145.646 li
221.727 145.646 li
cp
228.727 146.646 mo
232.727 146.646 li
232.727 145.646 li
228.727 145.646 li
cp
235.727 146.646 mo
239.727 146.646 li
239.727 145.646 li
235.727 145.646 li
cp
242.727 146.646 mo
246.727 146.646 li
246.727 145.646 li
242.727 145.646 li
cp
249.727 146.646 mo
253.631 146.646 li
253.631 146.146 li
253.131 146.146 li
253.131 146.242 li
254.131 146.242 li
254.131 146.146 li
254.131 146.014 254.078 145.885 253.984 145.792 cv
253.891 145.699 253.763 145.645 253.631 145.645 cv
249.727 145.645 li
249.727 146.646 li
cp
253.131 149.242 mo
253.131 153.242 li
254.131 153.242 li
254.131 149.242 li
cp
253.131 156.242 mo
253.131 160.242 li
254.131 160.242 li
254.131 156.242 li
cp
253.131 163.242 mo
253.131 167.242 li
254.131 167.242 li
254.131 163.242 li
cp
253.131 170.242 mo
253.131 174.242 li
254.131 174.242 li
254.131 170.242 li
cp
253.131 177.242 mo
253.131 181.242 li
254.131 181.242 li
254.131 177.242 li
cp
253.131 184.242 mo
253.131 188.242 li
254.131 188.242 li
254.131 184.242 li
cp
253.131 191.242 mo
253.131 195.242 li
254.131 195.242 li
254.131 191.242 li
cp
253.131 198.242 mo
253.131 202.242 li
254.131 202.242 li
254.131 198.242 li
cp
253.131 205.242 mo
253.131 209.242 li
254.131 209.242 li
254.131 205.242 li
cp
253.131 212.242 mo
253.131 216.242 li
254.131 216.242 li
254.131 212.242 li
cp
251.753 216.864 mo
247.753 216.864 li
247.753 217.864 li
251.753 217.864 li
cp
244.753 216.864 mo
240.753 216.864 li
240.753 217.864 li
244.753 217.864 li
cp
237.753 216.864 mo
233.753 216.864 li
233.753 217.864 li
237.753 217.864 li
cp
230.753 216.864 mo
226.753 216.864 li
226.753 217.864 li
230.753 217.864 li
cp
223.753 216.864 mo
219.753 216.864 li
219.753 217.864 li
223.753 217.864 li
cp
216.753 216.864 mo
212.753 216.864 li
212.753 217.864 li
216.753 217.864 li
cp
209.753 216.864 mo
205.753 216.864 li
205.753 217.864 li
209.753 217.864 li
cp
202.753 216.864 mo
198.753 216.864 li
198.753 217.864 li
202.753 217.864 li
cp
195.753 216.864 mo
191.753 216.864 li
191.753 217.864 li
195.753 217.864 li
cp
188.753 216.864 mo
184.753 216.864 li
184.753 217.864 li
188.753 217.864 li
cp
181.753 216.864 mo
177.753 216.864 li
177.753 217.864 li
181.753 217.864 li
cp
174.753 216.864 mo
170.753 216.864 li
170.753 217.864 li
174.753 217.864 li
cp
167.753 216.864 mo
163.753 216.864 li
163.753 217.864 li
167.753 217.864 li
cp
160.753 216.864 mo
156.753 216.864 li
156.753 217.864 li
160.753 217.864 li
cp
153.753 216.864 mo
149.753 216.864 li
149.753 217.864 li
153.753 217.864 li
cp
146.753 216.864 mo
142.753 216.864 li
142.753 217.864 li
146.753 217.864 li
cp
139.753 216.864 mo
135.753 216.864 li
135.753 217.864 li
139.753 217.864 li
cp
132.753 216.864 mo
128.753 216.864 li
128.753 217.864 li
132.753 217.864 li
cp
125.753 216.864 mo
121.753 216.864 li
121.753 217.864 li
125.753 217.864 li
cp
118.753 216.864 mo
114.753 216.864 li
114.753 217.864 li
118.753 217.864 li
cp
111.753 216.864 mo
107.753 216.864 li
107.753 217.864 li
111.753 217.864 li
cp
104.753 216.864 mo
100.753 216.864 li
100.753 217.864 li
104.753 217.864 li
cp
97.7531 216.864 mo
93.7531 216.864 li
93.7531 217.864 li
97.7531 217.864 li
cp
90.7531 216.864 mo
86.7531 216.864 li
86.7531 217.864 li
90.7531 217.864 li
cp
83.7531 216.864 mo
79.7531 216.864 li
79.7531 217.864 li
83.7531 217.864 li
cp
76.7531 216.864 mo
72.7531 216.864 li
72.7531 217.864 li
76.7531 217.864 li
cp
69.7531 216.864 mo
65.7531 216.864 li
65.7531 217.864 li
69.7531 217.864 li
cp
62.7531 216.864 mo
58.7531 216.864 li
58.7531 217.864 li
62.7531 217.864 li
cp
55.7531 216.864 mo
51.7531 216.864 li
51.7531 217.864 li
55.7531 217.864 li
cp
48.7531 216.864 mo
44.7531 216.864 li
44.7531 217.864 li
48.7531 217.864 li
cp
41.7531 216.864 mo
37.7531 216.864 li
37.7531 217.864 li
41.7531 217.864 li
cp
34.7531 216.864 mo
30.7531 216.864 li
30.7531 217.864 li
34.7531 217.864 li
cp
27.7531 216.864 mo
26.2275 216.864 li
26.2275 215.39 li
25.2275 215.39 li
25.2275 217.364 li
25.2275 217.496 25.2809 217.625 25.374 217.718 cv
25.4671 217.811 25.5959 217.864 25.7275 217.864 cv
27.7531 217.864 li
27.7531 216.864 li
cp
26.2275 212.39 mo
26.2275 208.39 li
25.2275 208.39 li
25.2275 212.39 li
cp
26.2275 205.39 mo
26.2275 201.39 li
25.2275 201.39 li
25.2275 205.39 li
cp
26.2275 198.39 mo
26.2275 194.39 li
25.2275 194.39 li
25.2275 198.39 li
cp
26.2275 191.39 mo
26.2275 187.39 li
25.2275 187.39 li
25.2275 191.39 li
cp
26.2275 184.39 mo
26.2275 180.39 li
25.2275 180.39 li
25.2275 184.39 li
cp
26.2275 177.39 mo
26.2275 173.39 li
25.2275 173.39 li
25.2275 177.39 li
cp
26.2275 170.39 mo
26.2275 166.39 li
25.2275 166.39 li
25.2275 170.39 li
cp
26.2275 163.39 mo
26.2275 159.39 li
25.2275 159.39 li
25.2275 163.39 li
cp
26.2275 156.39 mo
26.2275 152.39 li
25.2275 152.39 li
25.2275 156.39 li
cp
26.2275 149.39 mo
26.2275 146.646 li
29.7275 146.646 li
29.7275 145.646 li
25.7275 145.645 li
25.5959 145.645 25.4671 145.699 25.374 145.792 cv
25.2809 145.885 25.2275 146.014 25.2275 146.146 cv
25.2275 149.39 li
26.2275 149.39 li
cp
.356863 .572549 .780392 rgb
f
144.204 174.54 mo
115.563 174.54 li
115.563 176.54 li
144.204 176.54 li
0 0 0 rgb
f
146.188 175.54 mo
138.708 179.904 li
138.23 180.183 137.618 180.021 137.34 179.544 cv
137.062 179.067 137.223 178.455 137.7 178.177 cv
142.219 175.54 li
137.7 172.904 li
137.223 172.626 137.062 172.014 137.34 171.536 cv
137.618 171.06 138.23 170.898 138.708 171.177 cv
146.188 175.54 li
cp
ef
grestore
gsave
272.414 164.678 mo
299.38 164.678 li
299.38 191.644 li
272.414 191.644 li
272.414 164.678 li
clp
gsave
272.414 191.644 mo
299.38 191.644 li
299.38 164.678 li
272.414 164.678 li
272.414 191.644 li
clp
gsave
272.414 191.644 mo
299.38 191.644 li
299.38 164.678 li
272.414 164.678 li
272.414 191.644 li
clp
299.38 191.644 mo
272.414 191.644 li
272.414 164.678 li
299.38 164.678 li
299.38 191.644 li
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 285 ]ct
[28.9634 0 0 28.9634 271.415 92.3576 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 29 
/H 29 
/M[29 0 0 -29 0 29 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 29 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 29 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 29 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img

qu76*kg-`$@R)Ll/O3d.\'O:9p&>U$jiXf_;_An!(bSaCYfc)*p&>U$jiXc^;CiXr(bAR@YKGu)p&>U$
kg-`$@R)Ll/O3d.\'O:9p&>0mjiXf_$WAYp&K!-!Lp5%`r:U($r8l))LJfZ?&/ZrrLp+t_r:p:-pqM8O
0Hqek.P*2(/Lr7u-6k9?J%tdUrs8A0E]bET&/#WR'*o3`&J-$IF1M&Brs8A/E]bES&/#WS'E/UG&.foc
4`e.-r;RVE:*V>V=DrYFNfT3XL44;^?Vs*G.O@j$rVm_?3tN&D+t5-"1c$sD0eP"*,Tdp?&eI44rVm//
3tN&D+Xo$!r\H2_0J4k(,Tdp?&eI.2s8TL7-oZ7F]Y:hTTU1[pJq&/pH?sjZD-TI\.(?[gXqMT[.m-0e
5s74d1bg[;0)[@</1;_^',7[TY-&BQ.m$'b5Wq+c1GLO9r@KrZ.juV]',7XR0ek8Vb-IChG].8+?X$T2
;G^(_:/P)#A5Xj31*%AK4%DLo0eFh%-6sf[+<Vd**YohA,UOWH+!2LD'0AZI2_Zd3-RC#^+TW]-r>p2*
+XJEV&fhu=,r<cZIr]C@BP(a]>Zk**:J=;J5sIS9=t1jG&.fRI6n^#<-mp>g,U4KV+<MUE)]BS3+sR^4
&J,Kh7mepZ-n$Gi,pX]Z+WhaH*#fe7)'L1:&.g-61==[WTot(SEGK,o?!13-;G^(\84-N`IOZZk&.fRK
90YEo0J+b&-7'l\+WqmL*ZZ7?+sR^4&J,Kg8P;6-1b^I1-mg2a+sA'N*Zc=A)Bp@<&.g-61=4OXYH"@e
PDk0DG]IV6@U3&4912od.OHJR&/@c05X.Cm3&NKG/hJP$-RBu]*uu:E,8(S#&.fRJ8j>L%IQBGG1GCF4
.OZYi,9\-L)^6I=&.g081Xk!bXeqbZP)P-FH#mh9@Tuf-8Ocrh.OHJS&J[r35s@Ck2`3BG0.e\&-RBu[
*uu=G,8(S#&.fUL9L(d'3B&cN0J=t--mp8a+<DLB,9da4&O/K2ZKg5e\>u9hNeW%.F)>W&*+E>cAnl$V
-pg6O//(6G9h.N53Ar]K0.e\&-RSg=)($aZ*tg4[/1_Gu;+sGF4ZPDV0J=t--mpA@,XEb*-QWmP/Ri08
/8hT7f@8$_]!/*+S<oG$NJN()><aM_@q/G9&/-KV85)ZI77'4$3B8uT1c-p?.O,fD&QD_-ISp^j-pC0p
8k2985!1ha2Dm<H0eY"#)A3W]<$iqC7O''5:MG37P*_JtN.Z@k>td=4,pk>p-70<:'-%Po(*=nV1Gq'K
2)?s=-mK`L'+b`j&eP]e&/-#p%i-36/M].@2Dd3C/1;_a(D@>k'G:ui,pb:hY%C'S,Tn3R!$qOj!%%Uh
'dY:^2,IC(-7098'hCP9)\Wbn%hK<O&c<1R&el*'+qbJ"&.fOG4sh3^&.T0\p^f1n',DW4&eGU#,r!Qs
]<IreH>?he:eXJQ8k_uU:/",\==GRD&.fOH9L:s(1G("#+WpV&"!/O**>]Y>+qbJ"&.fOG90tg&1G("#
+W_[F*$+qu@2pI7&eGU#,r!NnZ`^:&SX5IsKRJ&`CLgaQ;+a/X==GRD&.fOH90YX'3]T)T1GCF4.4?Mg
+s.gD+sIX3&J,Kf7nZ'14?>J\1bpa;.k)km,U"6M)Bp=;&.g-60@8^-`3ZG7R$!;[IX#mLAmeeA;GgG(
=Xb[E&.fOI:IRK13]AlO0J4q,-mg2a+<VaL-6a'7&J,Ke8PVZ<4?,8V1,(=3.OZVi+s7sL+XJ<F&.i;[
->^ibh9WmCVOWj/KR\>mF`_bLG&^hN-=^Oa;\:EJ:JFDL5<Lq`1GCHa/M&G'r[\g7,T%+m<)QU+-q6s*
845[(2`3BF0.m&O=t1d7&QD^p5URX)=b`og`5TX.\$E$0S<A_TBMpo@,:>fE/hRbH'-].n6UaF36pX%#
4#o/R/LMYX&eG[/0.\Xd%ML$?4@2G)770@)4?>DX1+ajq(D78k:bOIK-8:<T-QaN`3(-M?<E)jh76<7S
,pO`o7O]Z2&J5^4+;,.q',MT/+<_jM*?,h1&eGTd()mku&J,Kf1*7)<%hf`u*ZuUK*uu::'b^KW&Jc?!
&J6<80[eXJIpkr21+OdP-5@mW/MK%D5<rCU.4-AQ&/7`13A2[!!uMad')iJe&eYil()Ro-,9mg5&J,Kf
8PD,t,TR[9&eYcf&J5Wh'G_K')Bp@<&.g-60[&%U['$6pO+_n'De`lo?sHf39LN#c.4-AQ&/7Z.5sRXr
3&<6@/1Dto-6sf[+<;CF+qbJ"&.fOG90b^*4#f#M/Lr7u-7'r_IN]gT)^6F<&.g-61!S=XXJVYZP)Y6I
H?=%=@U)o/8OZid.4-AQ&/@`05X%:j3&NNI0.e\'-RBu\*uu:F+qbJ"&.fOH90bX%3B&cM0eY+/-mp8b
+W_UB+sIX2&2>mj\Ehbb[&9IYN.cY(EboE!?X6uHB5(6l1,9jjIM5%G9LV3/3AiTH/hAJ#-RL)`,UFcb
+;,b<*?>eZ;+j;A4?58T0J4k*-mp;d,:"N^-Q`sA*OW:'2h&?fg!e'X[&]pjQ][;eMM?Y(?puXq\$rNC
'GiAg92%uK6pNmr3&WTM1GU[</0l/J'X4gEXqMU(5tXgC7RTI(.QKIH1c$pC0J=q&)\WphYQ+X6:*M5U
??_<oTqS'HQ&L<:AlM,R.O@m&rVm_@4:i/E,V1`03B9,[2D[$;-6O6B&eI76rVm_@4:`)D,V(W.3B9&X
2)?m9-6O3B&eI76r;RK+^jo-4+XAEa.kN>(.Oc_k,;MuD!PnL-rs8A0F$1TU&/#WS'E/UK&.fpHF1M&B
rsAG1F$1TU&.oNfrY#SN&ePZd+$F\Up\=b"r92M9P@Hj0,q_GmPd\p%r:U($r8l,*M,Z&D&/d'!MQb1a
r:U($r8l,*M,Z&D&/ZuuM6G(`r:U($r92M9P@Hj0,q_GmPd\p%r:U($r8l,*M,Z&D&/d'!MQb1ar:U($
r8l,*M,Z&D&/ZuuM6G(`r;6ME~>

%%EndBinary
grestore
np
grestore
grestore
grestore
gsave
0 285 mo
300 285 li
300 0 li
0 0 li
0 285 li
clp
false sop
0 0 0 rgb
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 135 /aacute put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
14 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/space <1C60D8A8C9B854D00D> |-
/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7D
C8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA
6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA
48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD
710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CE
C10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53
463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2
879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177
B5D88A> |-
/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE
9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7
BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C
344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D3654
8FE63FC8465B1B685766E782F0> |-
/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D96214
58876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD
52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612
941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13
CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-
/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0
D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B
6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA
03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C3729
5284C077711C162623860AACA404F650F8D516970257> |-
/f <1C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28AE872907C56
63BFD2A0F535ED0EB011F2C2A875E053FAF73E8AA16B1F99510A6812F90D61CF
3F1DA5EF558899A9AE12AAF6AF4568E0F6003B0A2FF6F33293> |-
/g <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A0
65D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D55
9B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C2
47BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667DC
9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD8
8F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF57
5C72F67F4BEBB98F8AFA57505EC9> |-
/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B17
1C8A80AB> |-
/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C
0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDAD
E9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A520
3A8015DD09B7CE> |-
/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A98
7875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C
7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79
F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F
518C54BB58C51D6FB6D0C8> |-
/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE11285789
4FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619AD
D420F549AB7C795751D32E8EE6> |-
/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D06
5152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CF
AD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F
5C42C88FB43C> |-
/aacute <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D
1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D
883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A8
7DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2
405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B96
4D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864
B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8
307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E02
4D177B5D87F20DD5D8D284EFA1399D3A178B980121C66> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/EYYGUW+ArialMT /ArialMT findfont ct_VMDictPut
/EYYGUW+ArialMT*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a /.notdef /c /d /e 
/f /g /.notdef /i 4{/.notdef}rp /n /o 2{/.notdef}rp 
/r /.notdef /t 18{/.notdef}rp /aacute 120{/.notdef}rp]
EYYGUW+ArialMT nf
EYYGUW+ArialMT*1 [12 0 0 -12 0 0 ]msf
74.3428 206.155 mo
(gerenciador)sh
137.718 206.155 mo
( de )sh
157.733 206.155 mo
(tr\207fego)sh
195.093 206.155 mo
( )sh
.317871 182.755 mo
23.7705 182.755 li
23.7705 180.755 li
.317871 180.755 li
f
25.7554 181.755 mo
18.2744 186.119 li
17.7974 186.397 17.1851 186.236 16.9067 185.759 cv
16.6284 185.282 16.7896 184.67 17.2666 184.392 cv
21.7856 181.755 li
17.2666 179.119 li
16.7896 178.841 16.6284 178.229 16.9067 177.751 cv
17.1851 177.274 17.7974 177.113 18.2744 177.392 cv
25.7554 181.755 li
cp
ef
196.406 127.629 mo
196.348 153.841 li
198.348 153.845 li
198.406 127.633 li
f
197.41 125.646 mo
193.03 133.117 li
192.751 133.594 192.91 134.207 193.387 134.486 cv
193.863 134.765 194.476 134.605 194.755 134.129 cv
197.401 129.615 li
200.027 134.141 li
200.305 134.618 200.917 134.781 201.395 134.503 cv
201.872 134.226 202.035 133.614 201.758 133.137 cv
197.41 125.646 li
cp
ef
197.344 155.828 mo
201.724 148.356 li
202.003 147.88 201.844 147.268 201.367 146.988 cv
200.891 146.709 200.278 146.868 199.999 147.345 cv
197.353 151.858 li
194.727 147.333 li
194.449 146.855 193.837 146.693 193.359 146.971 cv
192.882 147.248 192.719 147.859 192.996 148.337 cv
197.344 155.828 li
cp
ef
285.079 110.16 mo
245.738 110.16 li
245.738 112.16 li
285.079 112.16 li
f
243.754 111.16 mo
251.234 115.524 li
251.711 115.802 252.324 115.641 252.602 115.164 cv
252.88 114.687 252.719 114.075 252.242 113.796 cv
247.723 111.16 li
252.242 108.524 li
252.719 108.246 252.88 107.633 252.602 107.156 cv
252.323 106.679 251.711 106.518 251.234 106.796 cv
243.754 111.16 li
cp
ef
284.079 109.726 mo
284.861 162.679 li
286.861 162.649 li
286.079 109.696 li
f
285.892 164.648 mo
281.417 157.232 li
281.132 156.76 281.284 156.146 281.757 155.86 cv
282.229 155.574 282.845 155.727 283.13 156.199 cv
285.832 160.68 li
288.401 156.122 li
288.673 155.641 289.283 155.471 289.764 155.741 cv
290.245 156.013 290.415 156.623 290.144 157.104 cv
285.892 164.648 li
cp
ef
152.231 89.646 mo
242.588 89.646 li
242.588 125.646 li
152.231 125.646 li
152.231 89.646 li
cp
.815686 .882353 .956863 rgb
ef
152.231 89.646 mo
152.231 90.146 li
242.088 90.146 li
242.088 125.146 li
152.731 125.146 li
152.731 89.646 li
152.231 89.646 li
152.231 90.146 li
152.231 89.646 li
151.731 89.646 li
151.731 125.646 li
151.731 125.778 151.785 125.906 151.878 126 cv
151.971 126.093 152.1 126.146 152.231 126.146 cv
242.588 126.146 li
242.72 126.146 242.848 126.093 242.941 126 cv
243.035 125.906 243.088 125.778 243.088 125.646 cv
243.088 89.646 li
243.088 89.5143 243.035 89.3856 242.941 89.2924 cv
242.848 89.1993 242.72 89.146 242.588 89.146 cv
152.231 89.146 li
152.1 89.146 151.971 89.1993 151.878 89.2924 cv
151.785 89.3855 151.731 89.5143 151.731 89.646 cv
152.231 89.646 li
cp
.356863 .572549 .780392 rgb
f
0 0 0 rgb
EYYGUW+ArialMT*1 [12 0 0 -12 0 0 ]msf
158.065 102.779 mo
(gerenciador)sh
221.44 102.779 mo
( )sh
158.065 116.779 mo
(da )sh
%ADOBeginSubsetFont: Arial-ItalicMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Arial-ItalicMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 115 /s put
dup 116 /t put
def
/FontBBox {-517 -325 1379 998} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/a <1C60D8A8C9B7EF32246D06B518BA4ACD5E2F5CE92BF7E283045A6D96E8CF
B0FEA52B488A698D810ABDC3FDF8913508690996A9753D0E68C237D49060B14B
F13C72F11025F71CD98E412DD72630CE12274384CAF60E6672FEE3DB4C05451B
B1F11E9537D6E11AEEF863437FAAD8D7D9B27BF25AF2AA7C1E5FE178F507F3FB
5C2A1B81B8A8BBE388250F940D0460822669BDB4183A291FEA65813C7FAF5EFE
3C66D4AE7221A08F96419F4B2AE6EDA929DF3B3065279707077151FABC9D3ADD
870AE6863DD5B21F955293E44D86C22BC6E7D9812BB55E780EF52E8EC84E6C1C
C0B08B0B0F939125796F0326EF4445F89EB731EC0CF70696449DD1ADF4> |-
/b <1C60D8A8C9B7EF322B110F2247696C5EE2103D3E56C7DE9EEA51A6BC0D65
6AA8269EBEC13840908D6CCD416F4A572B911CBFC583F49C006ABB67C57D3F4D
0F9CFBD0A305FD33B556499B304BBD5D820C76FE7BDF74E745419C3136E56CC3
A6D12B8578A93D9231826B2153DE165990DF7CE0E1FFA68E43BEDA35CB5550F7
8186C4F395AD525D5F24CFF09711962B0A620FFC5A79BBBED4D61731C2FAA64E
813AE74ACCEE7408EC9EA38E4A504080DB6796BF9E5DF44D> |-
/c <1C60D8A8C9B7A73DB9F806B466F4DE0E80D3949A4CB212923095B7EB53BA
8BD8BE514BFC9B9FE2517F643753D380BC9042DDEFBB34113CA27E4632D522D9
F7946AEB654A5438B8AA454B3E237CFEA90B45FC2F09A8AF5B81C774567BD54B
835CCCF111FB21FF33B167AF7A3B8BA0E5CBA4F5B7C02F39F25E5D068690034C
742E2B69306D91775443B23D7510541CDB9D4D9F> |-
/i <1C60D8A8C9B88C08728B0370662B41BF7360BFB368B19277E353234DFA12
683E94C5380F6C591694> |-
/k <1C60D8A8C9B7A73DB9283C187BAAC88A9C2617E69D79F8154FE17704FF67
135779A856A64ACA084AEA6A253BA1B15BA9AD0CA151D9E92604> |-
/l <1C60D8A8C9B88C087201A3A4037FE2433C2D197C1932074E1B> |-
/s <1C60D8A8C9B7A73DBF501F5488FDBD4A20EF6D7B0506483C2B880D982703
5485646843C9D459AE9CB8D1BBD974889E6F89F2D43D89F327D894D864B1BFA5
AB890D16098D93759AFB3CA432904A4865393C68EE760D6EBDF0A6F29C5D9765
B45C6CB22C66996E91DD921F7292E259ABFB6A982338F25D286D28A8990FBB12
3263F9C6EECFEC70EFF44E9EDC10ED0720F2476C4461C9BB9EE4E441F51AC84A
1D9D4FF1983E0181C07DB489AADBC8B35A6747E61D103ACF8A6C8CBA20FE1440
6BA91F13E4D8F3CBD8B7409F7F58C0A1B26D> |-
/t <1C60D8A8C9B854D0F47C238C0374D9401BE88F4E827DBF6ACD1493D30155
5AE9FDB97705B5DEB246C70D14D40A9195312074E63C52F6E3D89F7577AB6EB9
D86C962D4AACF9757FAC6B7871A41A5812D02B983576BB62D7A8BC6D6B98DD85
59487E3FB838CA3E0A199191> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/EYYGUX+Arial-ItalicMT /Arial-ItalicMT findfont ct_VMDictPut
/EYYGUX+Arial-ItalicMT*1 
[97{/.notdef}rp /a /b /c 5{/.notdef}rp /i /.notdef /k 
/l 6{/.notdef}rp /s /t 139{/.notdef}rp]
EYYGUX+Arial-ItalicMT nf
EYYGUX+Arial-ItalicMT*1 [12 0 0 -12 0 0 ]msf
174.747 116.779 mo
(blacklist)sh
EYYGUW+ArialMT*1 [12 0 0 -12 0 0 ]msf
217.427 116.779 mo
( )sh
36.084 89.646 mo
126.44 89.646 li
126.44 125.646 li
36.084 125.646 li
36.084 89.646 li
cp
.815686 .882353 .956863 rgb
ef
36.084 89.646 mo
36.084 90.146 li
125.94 90.146 li
125.94 125.146 li
36.584 125.146 li
36.584 89.646 li
36.084 89.646 li
36.084 90.146 li
36.084 89.646 li
35.584 89.646 li
35.584 125.646 li
35.584 125.778 35.6373 125.906 35.7304 126 cv
35.8235 126.093 35.9523 126.146 36.084 126.146 cv
126.44 126.146 li
126.572 126.146 126.701 126.093 126.794 126 cv
126.887 125.906 126.94 125.778 126.94 125.646 cv
126.94 89.646 li
126.94 89.5143 126.887 89.3856 126.794 89.2924 cv
126.701 89.1993 126.572 89.146 126.44 89.146 cv
36.084 89.146 li
35.9523 89.146 35.8235 89.1993 35.7304 89.2924 cv
35.6373 89.3855 35.584 89.5143 35.584 89.646 cv
36.084 89.646 li
cp
.356863 .572549 .780392 rgb
f
0 0 0 rgb
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
EYYGUW+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F
80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2
BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD9
6538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1
B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB32
87CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B843
5558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F41
72D53C8FCAF4D28F2B78D3A4BF03> |-
/v <1C60D8A8C9B7A73DB99D94C9412F55B03E92C174A4755E69F97C27D9162B
37724F74F272B140D258652D102C2EAC46833C73F9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
EYYGUW+ArialMT /Encoding get
dup 115 /s put
dup 118 /v put
pop
%ADOEndSubsetFont
/EYYGUW+ArialMT*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a /.notdef /c /d /e 
/f /g /.notdef /i 4{/.notdef}rp /n /o 2{/.notdef}rp 
/r /s /t /.notdef /v 16{/.notdef}rp /aacute 120{/.notdef}rp]
EYYGUW+ArialMT nf
EYYGUW+ArialMT*1 [12 0 0 -12 0 0 ]msf
39.8237 103.359 mo
(instanciador)sh
104.529 103.359 mo
( de )sh
39.8237 117.359 mo
(nova)sh
%ADOBeginSubsetFont: Arial-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
EYYGUX+Arial-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/p <1C60D8A8C9B7EF3207F567BA45A9A2DC24C214D7FDAE273F6013EDBDEFB2
A033C3801A6B61EAA75EDEAD0C555E2B5C3A37DB1C932F175B45A14E1911D964
9FFCB7AC780E805193AFABE5F4C9B852C424AA59CD2841E403D67D40DB694EAC
0B3807BE83D89FED4BF01101B078C9EA9E888093645A0B16678A33385205DA92
D0E76615F71912977046A0D237F5EB4107C5ECC7D425356A6CBD5C6AA72F27B9
3049AA39305145B394B3AF74AEB76849> |-
systemdict /gcheck known {setglobal} if end {end} if
end
EYYGUX+Arial-ItalicMT /Encoding get
dup 32 /space put
dup 112 /p put
pop
%ADOEndSubsetFont
/EYYGUX+Arial-ItalicMT*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a /b /c 5{/.notdef}rp /i 
/.notdef /k /l 3{/.notdef}rp /p 2{/.notdef}rp /s /t 
139{/.notdef}rp]
EYYGUX+Arial-ItalicMT nf
EYYGUX+Arial-ItalicMT*1 [12 0 0 -12 0 0 ]msf
65.8452 117.359 mo
( app)sh
EYYGUW+ArialMT*1 [12 0 0 -12 0 0 ]msf
89.2007 117.359 mo
( )sh
35.5107 155.827 mo
125.867 155.827 li
125.867 191.827 li
35.5107 191.827 li
35.5107 155.827 li
cp
.815686 .882353 .956863 rgb
ef
35.5107 155.827 mo
35.5107 156.327 li
125.367 156.327 li
125.367 191.327 li
36.0107 191.327 li
36.0107 155.827 li
35.5107 155.827 li
35.5107 156.327 li
35.5107 155.827 li
35.0107 155.827 li
35.0107 191.827 li
35.0107 191.959 35.0641 192.088 35.1572 192.181 cv
35.2503 192.274 35.3791 192.327 35.5107 192.327 cv
125.867 192.327 li
125.999 192.327 126.128 192.274 126.221 192.181 cv
126.314 192.088 126.367 191.959 126.367 191.827 cv
126.367 155.827 li
126.367 155.695 126.314 155.567 126.221 155.474 cv
126.128 155.38 125.999 155.327 125.867 155.327 cv
35.5107 155.327 li
35.3791 155.327 35.2503 155.38 35.1572 155.474 cv
35.0641 155.567 35.0107 155.695 35.0107 155.827 cv
35.5107 155.827 li
cp
.356863 .572549 .780392 rgb
f
81.6888 155.846 mo
82.2142 127.643 li
80.2145 127.606 li
79.6891 155.809 li
0 0 0 rgb
f
81.2515 125.64 mo
76.749 133.038 li
76.4619 133.51 76.6118 134.125 77.0835 134.412 cv
77.5552 134.699 78.1704 134.55 78.4575 134.078 cv
81.1777 129.608 li
83.729 134.176 li
83.9985 134.658 84.6079 134.831 85.0898 134.562 cv
85.5723 134.292 85.7446 133.683 85.4751 133.201 cv
81.2515 125.64 li
cp
ef
0 0 0 rgb
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
EYYGUW+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
/z <1C60D8A8C9B7A73DB6C93834605F1D90D79F2E671A4623D994B1E45F8ED5
E64C2946ED425A1EC23463E621AF43221A3EAC2BEEDD9B1D3783E2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
EYYGUW+ArialMT /Encoding get
dup 108 /l put
dup 122 /z put
pop
%ADOEndSubsetFont
/EYYGUW+ArialMT*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a /.notdef /c /d /e 
/f /g /.notdef /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t /.notdef /v 3{/.notdef}rp 
/z 12{/.notdef}rp /aacute 120{/.notdef}rp]
EYYGUW+ArialMT nf
EYYGUW+ArialMT*1 [12 0 0 -12 0 0 ]msf
40.5049 169.472 mo
(analizador)sh
95.876 169.472 mo
( de )sh
40.5049 183.472 mo
(tr\207fego)sh
77.8643 183.472 mo
( )sh
152.231 155.827 mo
242.455 155.827 li
242.455 191.828 li
152.231 191.828 li
152.231 155.827 li
cp
.815686 .882353 .956863 rgb
ef
152.231 155.827 mo
152.231 156.327 li
241.955 156.327 li
241.955 191.327 li
152.731 191.327 li
152.731 155.827 li
152.231 155.827 li
152.231 156.327 li
152.231 155.827 li
151.731 155.827 li
151.731 191.827 li
151.731 191.959 151.785 192.088 151.878 192.181 cv
151.971 192.274 152.1 192.327 152.231 192.327 cv
242.455 192.327 li
242.587 192.327 242.716 192.274 242.809 192.181 cv
242.902 192.088 242.955 191.959 242.955 191.827 cv
242.955 155.827 li
242.955 155.695 242.902 155.567 242.809 155.474 cv
242.716 155.38 242.587 155.327 242.455 155.327 cv
152.231 155.327 li
152.1 155.327 151.971 155.38 151.878 155.474 cv
151.785 155.567 151.731 155.695 151.731 155.827 cv
152.231 155.827 li
cp
.356863 .572549 .780392 rgb
f
0 0 0 rgb
EYYGUW+ArialMT*1 [12 0 0 -12 0 0 ]msf
157.064 170.055 mo
(redirecionador)sh
233.775 170.055 mo
( )sh
157.064 184.055 mo
(de )sh
173.746 184.055 mo
(tr\207fego)sh
211.105 184.055 mo
( )sh
272.414 177.161 mo
245.165 177.161 li
245.165 179.161 li
272.414 179.161 li
f
243.181 178.161 mo
250.661 182.524 li
251.138 182.803 251.75 182.642 252.028 182.165 cv
252.307 181.688 252.146 181.075 251.669 180.797 cv
247.149 178.161 li
251.669 175.524 li
252.146 175.246 252.307 174.634 252.028 174.157 cv
251.75 173.68 251.138 173.519 250.661 173.797 cv
243.181 178.161 li
cp
ef
25.7275 235.401 mo
253.631 235.401 li
253.631 269.202 li
25.7275 269.202 li
25.7275 235.401 li
cp
1 1 1 rgb
ef
32.7275 235.901 mo
36.7275 235.901 li
36.7275 234.901 li
32.7275 234.901 li
cp
39.7275 235.901 mo
43.7275 235.901 li
43.7275 234.901 li
39.7275 234.901 li
cp
46.7275 235.901 mo
50.7275 235.901 li
50.7275 234.901 li
46.7275 234.901 li
cp
53.7275 235.901 mo
57.7275 235.901 li
57.7275 234.901 li
53.7275 234.901 li
cp
60.7275 235.901 mo
64.7275 235.901 li
64.7275 234.901 li
60.7275 234.901 li
cp
67.7275 235.901 mo
71.7275 235.901 li
71.7275 234.901 li
67.7275 234.901 li
cp
74.7275 235.901 mo
78.7275 235.901 li
78.7275 234.901 li
74.7275 234.901 li
cp
81.7275 235.901 mo
85.7275 235.901 li
85.7275 234.901 li
81.7275 234.901 li
cp
88.7275 235.901 mo
92.7275 235.901 li
92.7275 234.901 li
88.7275 234.901 li
cp
95.7275 235.901 mo
99.7275 235.901 li
99.7275 234.901 li
95.7275 234.901 li
cp
102.728 235.901 mo
106.728 235.901 li
106.728 234.901 li
102.728 234.901 li
cp
109.728 235.901 mo
113.728 235.901 li
113.728 234.901 li
109.728 234.901 li
cp
116.728 235.901 mo
120.728 235.901 li
120.728 234.901 li
116.728 234.901 li
cp
123.728 235.901 mo
127.728 235.901 li
127.728 234.901 li
123.728 234.901 li
cp
130.728 235.901 mo
134.728 235.901 li
134.728 234.901 li
130.728 234.901 li
cp
137.728 235.901 mo
141.728 235.901 li
141.728 234.901 li
137.728 234.901 li
cp
144.728 235.901 mo
148.728 235.901 li
148.728 234.901 li
144.728 234.901 li
cp
151.728 235.901 mo
155.728 235.901 li
155.728 234.901 li
151.728 234.901 li
cp
158.728 235.901 mo
162.728 235.901 li
162.728 234.901 li
158.728 234.901 li
cp
165.728 235.901 mo
169.728 235.901 li
169.728 234.901 li
165.728 234.901 li
cp
172.728 235.901 mo
176.728 235.901 li
176.728 234.901 li
172.728 234.901 li
cp
179.727 235.901 mo
183.727 235.901 li
183.727 234.901 li
179.727 234.901 li
cp
186.727 235.901 mo
190.727 235.901 li
190.727 234.901 li
186.727 234.901 li
cp
193.727 235.901 mo
197.727 235.901 li
197.727 234.901 li
193.727 234.901 li
cp
200.727 235.901 mo
204.727 235.901 li
204.727 234.901 li
200.727 234.901 li
cp
207.727 235.901 mo
211.727 235.901 li
211.727 234.901 li
207.727 234.901 li
cp
214.727 235.901 mo
218.727 235.901 li
218.727 234.901 li
214.727 234.901 li
cp
221.727 235.901 mo
225.727 235.901 li
225.727 234.901 li
221.727 234.901 li
cp
228.727 235.901 mo
232.727 235.901 li
232.727 234.901 li
228.727 234.901 li
cp
235.727 235.901 mo
239.727 235.901 li
239.727 234.901 li
235.727 234.901 li
cp
242.727 235.901 mo
246.727 235.901 li
246.727 234.901 li
242.727 234.901 li
cp
249.727 235.901 mo
253.631 235.901 li
253.631 235.401 li
253.131 235.401 li
253.131 235.498 li
254.131 235.498 li
254.131 235.401 li
254.131 235.27 254.078 235.141 253.984 235.048 cv
253.891 234.955 253.763 234.901 253.631 234.901 cv
249.727 234.901 li
249.727 235.901 li
cp
253.131 238.498 mo
253.131 242.498 li
254.131 242.498 li
254.131 238.498 li
cp
253.131 245.498 mo
253.131 249.498 li
254.131 249.498 li
254.131 245.498 li
cp
253.131 252.498 mo
253.131 256.498 li
254.131 256.498 li
254.131 252.498 li
cp
253.131 259.498 mo
253.131 263.498 li
254.131 263.498 li
254.131 259.498 li
cp
253.131 266.498 mo
253.131 268.702 li
252.335 268.702 li
252.335 269.702 li
253.631 269.702 li
253.763 269.702 253.891 269.649 253.984 269.556 cv
254.078 269.463 254.131 269.334 254.131 269.202 cv
254.131 266.498 li
253.131 266.498 li
cp
249.335 268.702 mo
245.335 268.702 li
245.335 269.702 li
249.335 269.702 li
cp
242.335 268.702 mo
238.335 268.702 li
238.335 269.702 li
242.335 269.702 li
cp
235.335 268.702 mo
231.335 268.702 li
231.335 269.702 li
235.335 269.702 li
cp
228.335 268.702 mo
224.335 268.702 li
224.335 269.702 li
228.335 269.702 li
cp
221.335 268.702 mo
217.335 268.702 li
217.335 269.702 li
221.335 269.702 li
cp
214.335 268.702 mo
210.335 268.702 li
210.335 269.702 li
214.335 269.702 li
cp
207.335 268.702 mo
203.335 268.702 li
203.335 269.702 li
207.335 269.702 li
cp
200.335 268.702 mo
196.335 268.702 li
196.335 269.702 li
200.335 269.702 li
cp
193.335 268.702 mo
189.335 268.702 li
189.335 269.702 li
193.335 269.702 li
cp
186.335 268.702 mo
182.335 268.702 li
182.335 269.702 li
186.335 269.702 li
cp
179.335 268.702 mo
175.335 268.702 li
175.335 269.702 li
179.335 269.702 li
cp
172.335 268.702 mo
168.335 268.702 li
168.335 269.702 li
172.335 269.702 li
cp
165.335 268.702 mo
161.335 268.702 li
161.335 269.702 li
165.335 269.702 li
cp
158.335 268.702 mo
154.335 268.702 li
154.335 269.702 li
158.335 269.702 li
cp
151.335 268.702 mo
147.335 268.702 li
147.335 269.702 li
151.335 269.702 li
cp
144.335 268.702 mo
140.335 268.702 li
140.335 269.702 li
144.335 269.702 li
cp
137.335 268.702 mo
133.335 268.702 li
133.335 269.702 li
137.335 269.702 li
cp
130.335 268.702 mo
126.335 268.702 li
126.335 269.702 li
130.335 269.702 li
cp
123.335 268.702 mo
119.335 268.702 li
119.335 269.702 li
123.335 269.702 li
cp
116.335 268.702 mo
112.335 268.702 li
112.335 269.702 li
116.335 269.702 li
cp
109.335 268.702 mo
105.335 268.702 li
105.335 269.702 li
109.335 269.702 li
cp
102.335 268.702 mo
98.3351 268.702 li
98.3351 269.702 li
102.335 269.702 li
cp
95.3351 268.702 mo
91.3351 268.702 li
91.3351 269.702 li
95.3351 269.702 li
cp
88.3351 268.702 mo
84.3351 268.702 li
84.3351 269.702 li
88.3351 269.702 li
cp
81.3351 268.702 mo
77.3351 268.702 li
77.3351 269.702 li
81.3351 269.702 li
cp
74.3351 268.702 mo
70.3351 268.702 li
70.3351 269.702 li
74.3351 269.702 li
cp
67.3351 268.702 mo
63.3351 268.702 li
63.3351 269.702 li
67.3351 269.702 li
cp
60.3351 268.702 mo
56.3351 268.702 li
56.3351 269.702 li
60.3351 269.702 li
cp
53.3351 268.702 mo
49.3351 268.702 li
49.3351 269.702 li
53.3351 269.702 li
cp
46.3351 268.702 mo
42.3351 268.702 li
42.3351 269.702 li
46.3351 269.702 li
cp
39.3351 268.702 mo
35.3351 268.702 li
35.3351 269.702 li
39.3351 269.702 li
cp
32.3351 268.702 mo
28.3351 268.702 li
28.3351 269.702 li
32.3351 269.702 li
cp
26.2275 268.81 mo
26.2275 264.81 li
25.2275 264.81 li
25.2275 268.81 li
cp
26.2275 261.81 mo
26.2275 257.81 li
25.2275 257.81 li
25.2275 261.81 li
cp
26.2275 254.81 mo
26.2275 250.81 li
25.2275 250.81 li
25.2275 254.81 li
cp
26.2275 247.81 mo
26.2275 243.81 li
25.2275 243.81 li
25.2275 247.81 li
cp
26.2275 240.81 mo
26.2275 236.81 li
25.2275 236.81 li
25.2275 240.81 li
cp
25.7275 235.901 mo
29.7275 235.901 li
29.7275 234.901 li
25.7275 234.901 li
cp
.356863 .572549 .780392 rgb
f
0 0 0 rgb
%ADOBeginSubsetFont: Arial-BoldMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Arial-BoldMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 97 /a put
dup 99 /c put
dup 105 /i put
dup 108 /l put
dup 111 /o put
dup 112 /p put
dup 139 /atilde put
dup 141 /ccedilla put
def
/FontBBox {-628 -376 2000 1010} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
10 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/space <1C60D8A8C9B854D00D> |-
/a <1C60D8A8C9B7EF322B767253CD3BE18E6883E9BFEE680E471A3E543E6B62
9FFE599C78BF6E9BC360B4FD3F4193BE88F8A133134BAA650EBC31A9DBCA73D4
43463241F1A95A036612031AED6950283B0D14D29C497685C55C7946BF118B40
E370FC30C35C6DDC0B89863AEC8E7000DED8B394346462262BD43999923C02BB
76E45D38F5FACA7247DBA2EBA6371EEFDE7DB20E4C849532AD601D5FE565E2F9
524F3166F0EDA1C9CBD6F2D9FAE6CBD991E5FC9CACD3E5ACCC612FA46CAB6837
78C9E93119C2E309BBBA2FB6B108D4ACC24630A4E27912F2F48E37DD6F256C92
0ECC30772CD6DD1CCCB84D330E3FAA> |-
/c <1C60D8A8C9B7EF32242001ABD2AFBBD336641D8D7284783472C96CFCC434
DFC100FC24422711A9090DEA4D32109037578992AFF27835B7F260887A799CBA
44C497ED942D76A3A4BD63536DE6F757481EB22D2DEF055F331ED9622202739A
C583596554B76ADC212E19C7FBCE810B4022B5DAB3AF3C114AF2730DCBE9D35C
B6B42E872730D77BAB> |-
/i <1C60D8A8C9B854D0F456B21D2F64F910BA7B8B592C84A4B1CA21D58F6678
BEC800D8864E53D53A> |-
/l <1C60D8A8C9B854D0F4565C5D96D196F316A2594284F4> |-
/o <1C60D8A8C9B7D8BE34A30C11766266259B98A0BA89715D82F7092153A622
8252D7594BDD75B2A7C57DC89088F8B1FFC43993725AE434A67B356F5F6B64D5
28A1696640F00DD016EBC232B8C863EA85B4B724E805002B9447A61792050E5F
2AB51B8800BF6303526C74FB360B7027D54FFCEDAF13BF8EA7CB1A81691C0A4F
B25E1EA64C0904433C6A5F35BBF9DD5C4CBFC1A5> |-
/p <1C60D8A8C9B7D8BE2E8563B32C07DCC3804272870E069E443B687857C9AC
B5C7CA1CF4F6A17C25172CC3E3E31B65AB87A5F695EADCB9429C1CB7981C750B
5DB31D41989E5AF25C22D1AF173045FD1E2E798D136DAECB194448D399145071
5E7374AE8B43D8B50AD9D750A67743A1F2A35DFF73BE71D039D15D8530023A7D
A074A0D1B66504E092406A88A86DBDD558> |-
/atilde <1C60D8A8C9B7EF322B767253CD3BE18E6883E9BFEE680E471A3E543
E6B629FFE599C78BF6E9BC360B4FD3F4193BE88F8A133134BAA650EBC31A9DBC
A73D443463241F1A95A036612031AED6950283B0D14D29C497685C55C7946BF1
18B40E370FC30C35C6DDC0B89863AEC8E7000DED8B394346462262BD43999923
C02BB76E45D38F5FACA7247DBA2EBA6371EEFDE7DB20E4C849532AD601D5FE56
5E2F9524F3166F0EDA1C9CBD6F2D9FAE6CBD991E5FC9CACD3E5ACCC612FA46CA
B683778C9E93119C2E309BBBA2FB6B108D4ACC24630A4E27912F2F48E37DD6F2
56C920ECC30772CD6DD1CCCB84D330E3F5FB9F3A352B85CB3C4B1CBD4950D2E7
0735CBDE6A0316033993F0B9CB1F5D6A461D536E1826919D8B255D548043E64C
A60BB3EF756A89DA5C2082D6EB8EC448F0C23838CDF30E1582B97CDC7FC380F1
732879189172E15B8509A538BB83EB8395FA4A46C7C1020116AD635E2BCAD59C
55CE0CC6B> |-
/ccedilla <1C60D8A8C9B7EF322B97DDF76687E778693CCA0259087F6C10CCB
0FF3CB66DEE1C558460B85545782CE2650B8AA21FEF8639E76320E9758882E14
E8666008E345F949C381FC17666FA78E9DE3A80BE782A14C724D47912DDE54C9
541393BF76B71674E6480DF5E9B150071A5033127FDE16FBDA546784C80B7841
2F9C2504EC5A5755C9460C545CCD07D1FF5E9A38854CB4B913183192844EDE4D
DBEF3D7B563402CEBC3498148258C3FCCB0B51A7457912E9F9E04253EA0700F0
6B1601730F19CFE47535D6296D2CCC2D3C6456648C287D362E04C0F22C212D72
0EDA0BE1192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/EYYGUY+Arial-BoldMT /Arial-BoldMT findfont ct_VMDictPut
/EYYGUY+Arial-BoldMT*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a /.notdef /c 5{/.notdef}rp /i 
2{/.notdef}rp /l 2{/.notdef}rp /o /p 26{/.notdef}rp /atilde /.notdef 
/ccedilla 114{/.notdef}rp]
EYYGUY+Arial-BoldMT nf
EYYGUY+Arial-BoldMT*1 [14 0 0 -14 0 0 ]msf
108.021 257.901 mo
(aplica\215\213o)sh
171.834 257.901 mo
( )sh
138.679 218.089 mo
138.679 233.416 li
140.679 233.416 li
140.679 218.089 li
f
139.679 235.401 mo
135.315 227.92 li
135.037 227.443 135.198 226.831 135.675 226.553 cv
136.152 226.274 136.765 226.436 137.043 226.912 cv
139.679 231.432 li
142.315 226.912 li
142.594 226.436 143.206 226.274 143.683 226.553 cv
144.16 226.831 144.321 227.443 144.043 227.92 cv
139.679 235.401 li
cp
ef
14.6021 1.06543 mo
264.789 1.06543 li
264.789 64.1733 li
14.6021 64.1733 li
14.6021 1.06543 li
cp
.878431 .878431 .878431 rgb
ef
14.6021 1.06543 mo
14.6021 1.56543 li
264.289 1.56543 li
264.289 63.6733 li
15.1021 63.6733 li
15.1021 1.06543 li
14.6021 1.06543 li
14.6021 1.56543 li
14.6021 1.06543 li
14.102 1.06543 li
14.102 64.1733 li
14.102 64.305 14.1554 64.4338 14.2485 64.5269 cv
14.3416 64.62 14.4704 64.6733 14.6021 64.6733 cv
264.789 64.6733 li
264.921 64.6733 265.049 64.62 265.143 64.5269 cv
265.236 64.4338 265.289 64.305 265.289 64.1733 cv
265.289 1.06543 li
265.289 .933762 265.236 .804979 265.143 .711876 cv
265.049 .618773 264.921 .56543 264.789 .56543 cv
14.6021 .56543 li
14.4704 .56543 14.3416 .618773 14.2485 .711876 cv
14.1554 .804979 14.102 .933762 14.102 1.06543 cv
14.6021 1.06543 li
cp
.356863 .572549 .780392 rgb
f
25.8882 15.1567 mo
253.792 15.1567 li
253.792 48.957 li
25.8882 48.957 li
25.8882 15.1567 li
cp
1 1 1 rgb
ef
32.8882 15.6567 mo
36.8882 15.6567 li
36.8882 14.6567 li
32.8882 14.6567 li
cp
39.8882 15.6567 mo
43.8882 15.6567 li
43.8882 14.6567 li
39.8882 14.6567 li
cp
46.8882 15.6567 mo
50.8882 15.6567 li
50.8882 14.6567 li
46.8882 14.6567 li
cp
53.8882 15.6567 mo
57.8882 15.6567 li
57.8882 14.6567 li
53.8882 14.6567 li
cp
60.8882 15.6567 mo
64.8882 15.6567 li
64.8882 14.6567 li
60.8882 14.6567 li
cp
67.8882 15.6567 mo
71.8882 15.6567 li
71.8882 14.6567 li
67.8882 14.6567 li
cp
74.8882 15.6567 mo
78.8882 15.6567 li
78.8882 14.6567 li
74.8882 14.6567 li
cp
81.8882 15.6567 mo
85.8882 15.6567 li
85.8882 14.6567 li
81.8882 14.6567 li
cp
88.8882 15.6567 mo
92.8882 15.6567 li
92.8882 14.6567 li
88.8882 14.6567 li
cp
95.8882 15.6567 mo
99.8882 15.6567 li
99.8882 14.6567 li
95.8882 14.6567 li
cp
102.888 15.6567 mo
106.888 15.6567 li
106.888 14.6567 li
102.888 14.6567 li
cp
109.888 15.6567 mo
113.888 15.6567 li
113.888 14.6567 li
109.888 14.6567 li
cp
116.888 15.6567 mo
120.888 15.6567 li
120.888 14.6567 li
116.888 14.6567 li
cp
123.888 15.6567 mo
127.888 15.6567 li
127.888 14.6567 li
123.888 14.6567 li
cp
130.888 15.6567 mo
134.888 15.6567 li
134.888 14.6567 li
130.888 14.6567 li
cp
137.888 15.6567 mo
141.888 15.6567 li
141.888 14.6567 li
137.888 14.6567 li
cp
144.888 15.6567 mo
148.888 15.6567 li
148.888 14.6567 li
144.888 14.6567 li
cp
151.888 15.6567 mo
155.888 15.6567 li
155.888 14.6567 li
151.888 14.6567 li
cp
158.888 15.6567 mo
162.888 15.6567 li
162.888 14.6567 li
158.888 14.6567 li
cp
165.888 15.6567 mo
169.888 15.6567 li
169.888 14.6567 li
165.888 14.6567 li
cp
172.888 15.6567 mo
176.888 15.6567 li
176.888 14.6567 li
172.888 14.6567 li
cp
179.888 15.6567 mo
183.888 15.6567 li
183.888 14.6567 li
179.888 14.6567 li
cp
186.888 15.6567 mo
190.888 15.6567 li
190.888 14.6567 li
186.888 14.6567 li
cp
193.888 15.6567 mo
197.888 15.6567 li
197.888 14.6567 li
193.888 14.6567 li
cp
200.888 15.6567 mo
204.888 15.6567 li
204.888 14.6567 li
200.888 14.6567 li
cp
207.888 15.6567 mo
211.888 15.6567 li
211.888 14.6567 li
207.888 14.6567 li
cp
214.888 15.6567 mo
218.888 15.6567 li
218.888 14.6567 li
214.888 14.6567 li
cp
221.888 15.6567 mo
225.888 15.6567 li
225.888 14.6567 li
221.888 14.6567 li
cp
228.888 15.6567 mo
232.888 15.6567 li
232.888 14.6567 li
228.888 14.6567 li
cp
235.888 15.6567 mo
239.888 15.6567 li
239.888 14.6567 li
235.888 14.6567 li
cp
242.888 15.6567 mo
246.888 15.6567 li
246.888 14.6567 li
242.888 14.6567 li
cp
249.888 15.6567 mo
253.792 15.6567 li
253.792 15.1567 li
253.292 15.1567 li
253.292 15.2528 li
254.292 15.2528 li
254.292 15.1567 li
254.292 15.0251 254.239 14.8963 254.146 14.8032 cv
254.052 14.7101 253.924 14.6567 253.792 14.6567 cv
249.888 14.6567 li
249.888 15.6567 li
cp
253.292 18.2528 mo
253.292 22.2528 li
254.292 22.2528 li
254.292 18.2528 li
cp
253.292 25.2528 mo
253.292 29.2528 li
254.292 29.2528 li
254.292 25.2528 li
cp
253.292 32.2528 mo
253.292 36.2528 li
254.292 36.2528 li
254.292 32.2528 li
cp
253.292 39.2528 mo
253.292 43.2528 li
254.292 43.2528 li
254.292 39.2528 li
cp
253.292 46.2528 mo
253.292 48.457 li
252.496 48.457 li
252.496 49.457 li
253.792 49.457 li
253.924 49.457 254.052 49.4037 254.146 49.3106 cv
254.239 49.2175 254.292 49.0887 254.292 48.957 cv
254.292 46.2528 li
253.292 46.2528 li
cp
249.496 48.457 mo
245.496 48.457 li
245.496 49.457 li
249.496 49.457 li
cp
242.496 48.457 mo
238.496 48.457 li
238.496 49.457 li
242.496 49.457 li
cp
235.496 48.457 mo
231.496 48.457 li
231.496 49.457 li
235.496 49.457 li
cp
228.496 48.457 mo
224.496 48.457 li
224.496 49.457 li
228.496 49.457 li
cp
221.496 48.457 mo
217.496 48.457 li
217.496 49.457 li
221.496 49.457 li
cp
214.496 48.457 mo
210.496 48.457 li
210.496 49.457 li
214.496 49.457 li
cp
207.496 48.457 mo
203.496 48.457 li
203.496 49.457 li
207.496 49.457 li
cp
200.496 48.457 mo
196.496 48.457 li
196.496 49.457 li
200.496 49.457 li
cp
193.496 48.457 mo
189.496 48.457 li
189.496 49.457 li
193.496 49.457 li
cp
186.496 48.457 mo
182.496 48.457 li
182.496 49.457 li
186.496 49.457 li
cp
179.496 48.457 mo
175.496 48.457 li
175.496 49.457 li
179.496 49.457 li
cp
172.496 48.457 mo
168.496 48.457 li
168.496 49.457 li
172.496 49.457 li
cp
165.496 48.457 mo
161.496 48.457 li
161.496 49.457 li
165.496 49.457 li
cp
158.496 48.457 mo
154.496 48.457 li
154.496 49.457 li
158.496 49.457 li
cp
151.496 48.457 mo
147.496 48.457 li
147.496 49.457 li
151.496 49.457 li
cp
144.496 48.457 mo
140.496 48.457 li
140.496 49.457 li
144.496 49.457 li
cp
137.496 48.457 mo
133.496 48.457 li
133.496 49.457 li
137.496 49.457 li
cp
130.496 48.457 mo
126.496 48.457 li
126.496 49.457 li
130.496 49.457 li
cp
123.496 48.457 mo
119.496 48.457 li
119.496 49.457 li
123.496 49.457 li
cp
116.496 48.457 mo
112.496 48.457 li
112.496 49.457 li
116.496 49.457 li
cp
109.496 48.457 mo
105.496 48.457 li
105.496 49.457 li
109.496 49.457 li
cp
102.496 48.457 mo
98.4963 48.457 li
98.4963 49.457 li
102.496 49.457 li
cp
95.4963 48.457 mo
91.4963 48.457 li
91.4963 49.457 li
95.4963 49.457 li
cp
88.4963 48.457 mo
84.4963 48.457 li
84.4963 49.457 li
88.4963 49.457 li
cp
81.4963 48.457 mo
77.4963 48.457 li
77.4963 49.457 li
81.4963 49.457 li
cp
74.4963 48.457 mo
70.4963 48.457 li
70.4963 49.457 li
74.4963 49.457 li
cp
67.4963 48.457 mo
63.4963 48.457 li
63.4963 49.457 li
67.4963 49.457 li
cp
60.4963 48.457 mo
56.4963 48.457 li
56.4963 49.457 li
60.4963 49.457 li
cp
53.4963 48.457 mo
49.4963 48.457 li
49.4963 49.457 li
53.4963 49.457 li
cp
46.4963 48.457 mo
42.4963 48.457 li
42.4963 49.457 li
46.4963 49.457 li
cp
39.4963 48.457 mo
35.4964 48.457 li
35.4964 49.457 li
39.4963 49.457 li
cp
32.4964 48.457 mo
28.4964 48.457 li
28.4964 49.457 li
32.4964 49.457 li
cp
26.3882 48.5652 mo
26.3882 44.5652 li
25.3882 44.5652 li
25.3882 48.5652 li
cp
26.3882 41.5652 mo
26.3882 37.5652 li
25.3882 37.5652 li
25.3882 41.5652 li
cp
26.3882 34.5652 mo
26.3882 30.5652 li
25.3882 30.5652 li
25.3882 34.5652 li
cp
26.3882 27.5652 mo
26.3882 23.5652 li
25.3882 23.5652 li
25.3882 27.5652 li
cp
26.3882 20.5652 mo
26.3882 16.5652 li
25.3882 16.5652 li
25.3882 20.5652 li
cp
25.8882 15.6567 mo
29.8882 15.6567 li
29.8882 14.6567 li
25.8882 14.6567 li
cp
.356863 .572549 .780392 rgb
f
0 0 0 rgb
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
EYYGUY+Arial-BoldMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B7D8BE193B13518E6892DBA9B266D0A17D5C8CBB8FCA3DEC31
FFDE21FB19188C5C709BB859EE16635D8123C09E9F6380448F624FEDEAFC78CB
8E4436A865BB0CB81152FE1F90E6EB1DE7D9B62F15D5F2855507D6B695B1CC6A
FD11F003818163793142F6A0F46BD84EFADF> |-
/v <1C60D8A8C9B7EF322BF34066C52D57BCC44B5A90A4FC7E0180FB67572BDB
310F0242B864A0AE1AC2B2D513C4B2167B53904E1D55E8A8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
EYYGUY+Arial-BoldMT /Encoding get
dup 110 /n put
dup 118 /v put
pop
%ADOEndSubsetFont
/EYYGUY+Arial-BoldMT*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a /.notdef /c 5{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o /p 5{/.notdef}rp /v 
20{/.notdef}rp /atilde /.notdef /ccedilla 114{/.notdef}rp]
EYYGUY+Arial-BoldMT nf
EYYGUY+Arial-BoldMT*1 [14 0 0 -14 0 0 ]msf
87.6816 37.4072 mo
(nova aplica)sh
163.936 37.4072 mo
(\215\213o)
[7.78711 7.78516 0 ]xsh
171.995 37.6572 mo
( )sh
82.2622 89.646 mo
82.2622 50.9434 li
80.2622 50.9434 li
80.2622 89.646 li
f
81.2622 48.9585 mo
76.8984 56.4395 li
76.6201 56.9165 76.7813 57.5288 77.2583 57.8071 cv
77.7354 58.0854 78.3477 57.9243 78.626 57.4473 cv
81.2622 52.9282 li
83.8984 57.4473 li
84.1768 57.9243 84.7891 58.0854 85.2661 57.8071 cv
85.7432 57.5288 85.9043 56.9165 85.626 56.4395 cv
81.2622 48.9585 li
cp
ef
140.679 146.146 mo
140.679 66.1304 li
138.679 66.1304 li
138.679 146.146 li
f
139.679 64.146 mo
135.315 71.6265 li
135.037 72.1035 135.198 72.7158 135.675 72.9941 cv
136.152 73.2725 136.765 73.1113 137.043 72.6343 cv
139.679 68.1152 li
142.315 72.6343 li
142.594 73.1113 143.206 73.2725 143.683 72.9941 cv
144.16 72.7158 144.321 72.1035 144.043 71.6265 cv
139.679 64.146 li
cp
ef
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
EYYGUY+Arial-BoldMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C3A38FE2380A125A3D62A2B0F4BC8C0A26967
56F8DA43B0889958C87C94E22D1A3213B46963E9329DE74757B6B3A525736D1B
5EF52A1F5DA4AB3530EF8C585FE2B823D2C3202FD1D141> |-
/parenright <1C60D8A8C9B81F2C3AAF50C85EC663E0CCB811D457CFC013664
AB412D10018FBA420C16D8F84D8F6E7BA7121948DF6CD1C73671ADC1920E6D6F
F996F7B703AB39EFF7B605E03487B46179AEA4BBEE9CF34960D70C11D2E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
EYYGUY+Arial-BoldMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
pop
%ADOEndSubsetFont
/EYYGUY+Arial-BoldMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /.notdef 
/c 5{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
/p 5{/.notdef}rp /v 20{/.notdef}rp /atilde /.notdef /ccedilla 114{/.notdef}rp]
EYYGUY+Arial-BoldMT nf
EYYGUY+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf
223.911 120.268 mo
(\(iii\) )sh
106.922 120.239 mo
(\(iv\) )sh
227.534 186.793 mo
(\(ii\) )sh
113.863 186.921 mo
(\()sh
117.859 186.921 mo
(i)sh
121.193 186.921 mo
(\) )
[3.99609 0 ]xsh
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/EYYGUW+ArialMT*1 uf
/EYYGUW+ArialMT uf
/ArialMT uf
/EYYGUX+Arial-ItalicMT*1 uf
/EYYGUX+Arial-ItalicMT uf
/Arial-ItalicMT uf
/EYYGUY+Arial-BoldMT*1 uf
/EYYGUY+Arial-BoldMT uf
/Arial-BoldMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 15.0
%%AI8_CreatorVersion: 15.0.0
%%For: (Fernando Gielow) ()
%%Title: (arq.eps)
%%CreationDate: 23/11/11 11:24
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6LO/O&Z2f2XJ9M8j80Ba!H5`IpdX//C3!fll6<SZ=oCQ*/=ghRGbJ:m<3qp8.8$ccd1a>`DN"cV!qNG6te,-*9s1>ufU&VJF
%/]`W^+;AR6cIA!"rEB5<ntYou-c>qQ3Z;#qh>VB#^/4d?eQY"LI@r[(Kj1t>mJggmdVZ[G1QNs_hA?tZ%m-o]i<?e)-/[apj&WY\
%B"Ct+GMDloIJA1F(j%iSH^[RL]@ghndoD\4n>A-M8>Qq3>YN8cPt@n.5+;D^Wl+L`FKl+<e'GO&QQt!!e1p_n0(8Mj\s'RKK"@ee
%GCS!,&_tGlj6u0rG`5IRg6P'"3,;Jq$kY$_$fUt=oqO;]%pS'h^\8Smi!oR9T@WLYA3i-/]23t]h:>]IUe#'SM(Et>n[nd+.uAS.
%9>tJQYRjTAZKQa<at7/P&hRTi:]7>hrb$Z<Ue5r[Z)]8U;<?d3]^n?;!6_$ii-05)Csl==Qb<me56mO4jOqG">OCEfCX4Nef#NSi
%3G#je!Z.utLH7o"XP]QK(=j9/'EY#I60iH337;Ol4s(<bhF7GO[l'c!TcRcCkd?MpAr6sbe2]OElRrqg;X',M11e+^R\:e$KiXg9
%1cdp%4!&Q/3kb3NPZfKr#W3R=:>6n'?=#%A2r'*TJU&!pMmO4AHTY>U>2.HgWZE)O85eI:S,g(o6j'UDl2]*@V,D>GTn&S15pN.+
%CQ2Qa$Z\:lOr'SPIhsSaO("8EkV&K]pKS3bMa_lo<pA.V)EuVa\=672h/o+@"gZRSE]GP5bJCAe%SGi':b%f1'O#.S#\Al^-rV\6
%N.=\P<@gHcp]g1`W`k*SeLE[aXhpWD(!7p3gf9SD%\?]8\?@=A):E!B?IBkrOkbX<l2>]b&;#*S"atuH-j>$n4XKiq8+7""TL\J]
%rMGr)cU+8^*I^;8i#QPVGTo"4O5M&T%A.SSq?/JY2@4aZ"oX$s.&/20NRA&8:2in28?`6cj@Rd@dX'>bdP_.I>#&d"99;@d"oX't
%W/4?4oU=P['SB10"oY21-<MG;6N>saIR3E.rSa<S*3R(=P_/nN4/!i9,m:CS5!YoR!*W.<&#C.X+2L"&,']l-+[%3TLR+-I&\+WK
%8hX(or]qFc*?CQp4*[4dRbWVr_)ml*iu@hbE'g.MG:3R,$\[`bVK7N#N^+_^RuUo<<p44LQBRFt`WD\IPbnTPUich+">7M0[%($I
%p5QF"8l=fJG4Ic+:]<o.ail$*RF%J^L=DmS5;I\IfhS+FK]m50Aer@L1%r`QVW6MMJ+0g"L?M;iW(aI4ciI<<0aUVpfV!)XmA4bn
%^#[:79#?)I8[r5%qibT3a7pp0+MQd[p`t??:c:tL(n]kBT-qC5:\%R8OPb`nKjE()b%5V6p`t?S$MeOdP.s8\<[1\):\%SjPMaA-
%q31G8_U!dVn4r1>Ia_Zb'D5/H<&7[R-6We`MhR+^(D9\2TD7;j>,e@(MGhMpQ#ZmU0a7>BI@fF3St>Al56nfXqM+j66/N7paYisR
%5!@`fhs`Jf>ESP6?iT$'q4E7u`iGi]ZM8@Rq4DrdTO]5+NO:MH>L(jje%VD]YKmk?92!u_HqjWHem@Du83>:k,3K:"]#)\c124;Z
%*=^o'lPeXQlbHGimr5I/8tnKR6A1Y)H50_Li#@&E]KU>Mm<A%AWNTLF*%oFm!KWnDUpZ_,Mn(.49M2M-JPW#<'jO[pl&ghG!,SSm
%/J/oaCT)qupn!`Q+o!?V#"/]bf2<@^8VMP%B*l+`N2(b0hQo!5,YsOaj;qQWC[a/G:XsE6*9U=e^b91GW4c"X]L0m(4FDpNU=CjY
%iL68a-/]_f@<e^l.7;8$H0@19KkdePF"b3qd"3IkD`eKDi1JL/f4^dJWtY_@61/F]_9`M>k`^$.b0_8r(&)]5YX&%ZTKmqh:4YYT
%=9+0HbDlbSEnW-DK%>QYL?Yeuh*,."5Gr#-(^K[LTf0k85\*O('g,,G4QH.@2:PNHo8L'%7t<1,PX;m]&T"4XBk+5(BG%Wl^aZie
%?u>=N7f]-S#\Hqu+.,9T2QQEOoB^[e+$/")&rp54V/1@50Qs:O[Cl3=.h+I^^14c],hL3V"6;N7[,hdE?"'n&l'tbXQ>;[*i\*Dt
%;D@;45,gd6q^MP@4,m5aJZVo5I3K__Ah`>/'XjVPfM@"$Xe3nCmC^71`RC6JNs6]uqm>!kp88qANY(Ue%3,0-([M*kIW";/eadfa
%_d(e@cE$&VNo&;AbN$bLi-<fhn5SR4oECK?h=H*Lm5;)FOo25U_!dtQ^G&1/IV!)b:&B3>Qg%G]=P,sD>$BLbUE"5"cu9Q*XQ?bW
%*FI-%RMRdj>0CLL-aI9a&e,+g#IpZpKs`P0Q2tisW53QNe6608>%b^)7h&RE:gc]M&M!:'$Z,?/N.L6,<,s"`k3FJG_a<K-oT0fh
%<fY2]b#FD+<uaFZ*UVG\+l3k@*P"$8_WH5L@67WMr0ObH@W6/RV[6s'SoTT<ncF9"/IRRtKkckM:Oim+Y*QanZ7egAF3D73Yf#VZ
%1&&PQOqb@WXM?a%cn*Ra>@8oEH]EBs:^:0E[A\@lLI0RZ2ak7\gun!Wm**+rGlagOHN>peY7D:r'E=n#"2S%^@mC#TR]KW[)@E4C
%7Hhg-RT'M8<Zuk:(9&[c9`/`1F..6-AI6&&5LC-YKg&?jjp[fE<GGn#1=WeR^q_p[RLm.g\7S-SQlXn'VB#8C=t/^Ml2\5(MqKr8
%H4&:pK"_oE$1XCEfpL<%-+T>FOg<=Dm"[o'j/;0c>#IHrlQ4_LFo!qHV"qQ/Ko=Fcg8J9'Hqea2XUap19\QYa=A"IP3^B1=D,r$U
%,3gla:D*7?;%F8Q>9p'(44FXTOpf4sLAI(0n,]s@.<47'J1^,Y.Mu"O\%3:]Gf\7f\dh4b`gZ=Ti,Vo2D#ebd%Uk<,M]/sE2@W`D
%KI#/WU_4T]4,dE"`h8SnK%@r:,^R$3I/o.fV_PhFbQ`Z/$HEPYo+HJ+QMIl8d;&ki:`nlsBM^7Pee`Cu4Dk!oa:,LL8kMZsV4LDf
%o9"=Pm8\,",\o^;-)En!CTW2m*Vp;[@BFa+Q9'a7*?PL:kjO+4KC+V5Jk=r<L;,4HDc0`t?aIpI"+ghtk#W.Arp:Q15#HE`P%>g@
%8SN#*C8J8*B@3Y,Mrc'&qj=i:\mrLL"W$UD,5AI"<tb6BJ!LJdB8+^^W[e."#^=h]7_Om,o0^@]UYM0Z>&D62`AhaF=j^sDaCtt"
%&RR&Oq2&]I.]`*2[)U:Ip`KG9mXoe6;6Cj7@'jUY!Tr*DGuARmdn;.:IKQ.C^)iq(oMVh*/nj`C1<4oH@ZFdqlsST*6uaaaE,X.Q
%DK6Fg&PJiTiNRPY,7Tf(kNci4%hafC(Uur5L"]?.rL?]Ln6X>*%1;+&11FN^VNhQj&eTs-@goT"\SdtZ3fm%"qjUtL>g\YGRS9gS
%\M-iL_^jkbJ/sWhZ6<)%4OPKm&]Qba;C%DH-r4eWr)\U^7C]RtYMB2$SL(=RL0E^p=hhdg@[;&]@_,%*!2]90V`=V,`"hKS#.Bq\
%(n)/$adV!T@gks#!a-U!H%H>e-N1o!LD<!cG*6@TVdc4+N38$eWi^N]0/k?G/Do5kQZY8eHR4'Yg^D@?Cnn1>hLbE/iO]:qAFJ0Y
%(JG'nT.4CF'&MV??h_m@,A[TEL,<;;)[J`Zabh"'^0E/pF!g8jdZ`s*[M<W_nLJ@hKIgQ+:YB/T^?fA:1UC.;W/LIT`P9`kXLt7)
%$[t8<<!J8-riq^(nCXeu.m:gG-(NX\=23T1Z:[Q8Ma$Op7H-Iih[<a@IXKcPAW?[mkpiuF66ceq2/6WsHI:=2^)]+>'h`nK&)=Tr
%@2%slTrs%''u:ff;mTXJW9*`[R$Z0E\u]%`I`<H#[*G!q9uBirMGhZ4:0Bf@3Q=tK*MW'qXB7\_(nYpCgl!]S?</#4D7f#\IXT"6
%4*6!)nhOkdIYY5(e29_0p0"h2Vg8`Pmni;\PrI`Y[[\]Qf]t)*q/Nr_^0ia6N@6Ib-fe3QnZIL^W:aBa#oNWN/LG2ioRq3)ZsiP3
%Uufk*XYjhe\==Gt2t>++\dfZViq+7p1XYN)bTQ?\BE@G00s:,>-=[q5TuLHHkSM5.C%E?h\VpDF=SKW$9F=qQ`&8LImZ"D*?GRm;
%*i+Or^A\H)_:iW@,9=!7DNYLJCI)#nTcT"!bfWgaCP?V+)XX2-%JQ%*r<`;IjgqDb*RB5:Xg;dIr26e9:I&^Fij]i.U<UWH6#d?8
%HMj.pV7$j'41KX%q"NF=0l8U5$u<kr?83N<Y1FZ*#lW"^UBTs%">UWFVpga4&D9k8Ir;`&D85c0?l]gt)RG)q^V)Pf3oe]=XoKas
%%G<U:6:7TBH!E$4c0H\FVoJm<59>:<hC\:;7n8q/U.*3lbZ$=\B^.r^_>Y4pY=>4:[;EiA10uH-h?'Mu[S*o$quG&T1I'51$d$UY
%=tBAo^pd5fSosD[87UOPOa-_ZT*P9[8F@oP1)/WHkr:?]USgY.S&IaIT#]^f]]Llp]JF*;6e6?BD7oq9Jejb'BZ)9^h@]4gVM>f*
%Cdb@"6*8+?lnuZ,W:-=&$GgdQ4A+PXd:.1%?\eF/'Jfn!J(?FeljKe.CD@"N)d0"fVfCcMX9@%XIjn05MlkXCjqFLGd7ccY7*0'&
%9I3W"-1o>m.Ts;cL;'-?_&>b)@%\PZ^`;c8?&LcscugOG+^HJ4.iWWr9nRZ7QV?YCYk/&\P>rr'X#,*jGY!XgQ/EI^RqTN;c%B&`
%l("Gr-@JXXq+=]5.@CV0Z1a>,prBZCYet3=%&[).UKg@F]dBlF*@H<7l%;%;<QarJl@2\kE/VBp3^587&r#F)q-6[GJ(3p<:n7/@
%T-Kj5eqr`kPi85Pinr7hR6DL[b4Q"U$7fD!,(=gk5),]aI8WHC\C>>LNT[UA7JkOkkCQ"sS5N$j/7chh-QWqiYt%EP(%^48\m`>4
%FgiPf*HhUum/Eug5%W`O#="D1YK.P/AG+YALO`/_-gJYIC`XHn)E>OLp'0KIj@+>2Rd6=O5ega9lXM#_?Q`JRqJ=3>a*q,Qh[*YB
%GJ%O]o2dTV@kV2?iNZS+!'A?1Q/3_TU=3+E@g/7$99OQ1*8*N][$B-_\O\hM==S$1#K=&.g@MTQYi2'Ld!3"m!Y.qr@qh!L[#?_<
%-S$7V1Tg7hfkLDGIF2%=R/);p`dtOc:[j;(TB:hPX#r43"1<ttR&!#4#L6L*Q5OsD.&0.+aSNE,=j#dPbR]AaAMj,()@*2@(<G8Y
%.kc.t.*YA%\iNMqW&=_*g+#,FoIa)rPSH=_TaiSX1rBQ6*@1MLMaJVZ<,NAJW5!JD-">sfRLI6;"7Wss41!]M\/^po=L(MOrleWF
%q*5jbBBC!dUC#5&I.j#hjT;7_mVTq]*>FJH=h05u"+g)"EIE8k^d;I(S$#XoC@j*TMte?Yj"SdK%*4i<m<'lGVYq9I>-?m5SuW%-
%6GlE8Z)<MmlXW.XdI>8Ei]oG>,XWK60#9CoB[bAI<WHsMHaCCd,CGoeQDT`'ZE=^OnS;_gX_;B^5Y]VOL_\22)<"AT#$t207"uW2
%!2Z_L$1.=VqoJV<W4f#"aR#Ts[!X8;.sfDG^a?c!RI\ptp/s(k+EZ3iUPdUq$uZC4.?on!*/7]AIX(/4,8?kYAF^bT&WTWY*4@Gu
%U05qjR'pSXAZ2[aEp!j8LTJH53IcQDilS&njD2[p,Gg@"RS?3@'QI?e)0Q/33%g6VD2`orPC=-.C0h:Gmh?`5%Vnqh)G$Fk[h]RZ
%CMm2.B\msg:0,CYpb(l=9ig^;E]f3W:&75[R=C>pnsc_5&DX+h8.D*t=ebNsh\FE:XO'#9>g?fh^olaq/=*/[[NEU.1lW8l7V^V\
%\.r:jV07F,fHj::n8H0b\CYi7`*-%N\OL";?ERSqkP!==;U%B^Ac.tbfK?5Ff?O,C7U@3r9Gd0#))__SR:c0YVKF*;r3lG#D/o<_
%4!N8_Ch%&.\YO]1_W)KcMV&Rnn+\:%k)>heBqG#+gPLppB)Z&lSGOf(Hsqs#Hnmk(S=c[eR,?]QBjhYr9(lBVZh):T32_%1?M'g*
%C^4,6a(G_7(P/-BIhoIm*o_\-dfk_<@pG*q#Q$CM'r%1$Y@.eJn'Jj^QCCLY>U*Q>Yl3O\@_)ms_S!O]ZA)0+1T3rKrJnsA.Z'NS
%\s8t&hCedbe'h>LUHg!WYEP<eZBo!r^1e)iHhIfspL0+A_p\4g%gcAl;/5@.2Z(Sl\4qljpK`m(<.!4@Z*\Whd$3L'[lm;n9O$d<
%+hi:tpK$M')"\iPjD#G4d<K5Grte?%R:b?P%6b(2_:U]!=;Z.P%C3/@fnG*terlst=XMe`N])TU+Y,^17W.^,nkG=Y=rFI1'ZI`!
%p?k1!g&hsTC?-G_h)PblkaDb4`Iul(jD!J,U&5mH5gA#^dBtF6_I1rg<GD@>IThfiiU#?^Anbf,j)J>,QR6XP%2=Vi9Y[(k.AHEu
%GWWR@;[qLG:0HMd#+Je$g?P?FZP!.B[!XgW1![KVQ;9;\/lU)IiuR=KAdH!*_*RpC?g#8652f2WIo=JgB:a:uDHWJkh\#\^-aXpR
%fV1H_fO+[.r[kH@c-k!ag2@b3G;c_IkF[@.=ST4d[umfqg[BrGntOaT53E-^?uT1EJ+Ah1kl8W"OgM8):Jn(ICVt>NjBK%l!un/!
%kXOAU_g])p614!pnXX`D4;e:i"6j:cGL@S6UJC9QX"G*-acBlr0,=3Y:6sWTFboIEP3!juSZKQ)m7t.F9%I3bPHgQ=)L&c020hlR
%"d55K'.m+XKkj>ihE&Q`aj5<8rGSuQPTeA^E92#FEYUeV8?1`JQ$H?Z+750T4/>Q*.FZ\foPjJSA=o+RPHoV6CgSjM-V^"jU(^FH
%@MB7s-[OHhlf1>Q-JPJMWg\<&peHjhlECZ0(o_GX>C?!add='pjIe@5$k,=`k_Yp4YPm0D=;p2TohfSnjBI-'pTX8Z3DPTiXgST6
%lR,7CFE!(CJ)")^PN@,]GgpSi4p1YX6$G*\l1?;l+o;#Dg.VE=XHs$tEqH\&Cqm$LW_Q?Dmm!r%gS>3ABRpr1Y!N)YW$CM:]DnL0
%;Z6&g\+PBgU=%M:CN\#,qGZk=4sI/C)'9M[CA"Jhm],_citoObg?j%fd.>YXoqj(ZKG\9;Y\>3PA08f^YDo!8<.FBB*lnW+\5N0U
%e;8Ymf?)!TkH>@(&05IGc>WAon&#p7BRMZ&j-J\mU:2*A_USgQmiBndD0R2EaT7"BDo2RkZo7("CMTa2%E(J-dICk!1.">RO=W1T
%[*F%PPEA_o)cnDcfd56og#9NC(YU0hN_,pSVEW`&@oD<LPdk8)\KnZ<5cN/0P@U73K_T8p%:Qm[<DopkL*m+ldUYfPP+Rrp7r(*[
%l*_pK1_9IHofN!#6I,ff+J<d7S)&G*(eoJ/on=W41Or8P^hg%-HgAQe+6s<\g0korTc3YsH7;F(Ob4B$mRRM;kL%<d/qt&4ipVH`
%&"7rPL\:9L$<t9.[$7209?8P*js*7c<fl31;b;NUgo#0ANK#Nco'%D<%dNMYeO;]Ca\M:FZ%MT(%$Q5cJ.!J;Tse?*_iI'_O9/a@
%Ghj4QDg1'qPGh8Aq!aC+@+]Bnh@M($TGkkddo#dl@e0:arFdbc;T3Gb0g=M7$`RT!fc$Lgri<H$=@h#mm^TYIV_Zt:782ineD>tl
%+D2rJgdT]dq>B]Rf7*HS8Noj3cOt=`,P7S#0aYm*"HE\*Vso)^SY02H@=L&bmCi5riGuR1WZq'XBnaoUr;),7H"8)">qj!`:HDuC
%dHV,aXq`DAekfWp2poP<-iN[d\u*49LHif=jD)C&QeLg;Qtl:ELik7R[tY"RW_^4.?>I'$YNn%fFHG!:Bd"H6FW8p8.TM8!!D'u?
%B]CWD>RE0o"9>jLT*po:@f7ObDXu93E,s48^@O9C&7r@J),<Yn$Q&bj=0L2&9<VX5N3>SDIg:oGr'9_\7hB3dU_U+#.M'T"3[gp`
%*s0%LDm$e-6M_'jqDrOi!$(FmON9RL!t2HJcKN:c:X#(;@**=mp&&a(DZ7/r#1u3=^5W=@k&*Y(q`b0BB5?K(ZSbR!S`<KLQTWkM
%b^t4NH#,V2c?t%):aC8CfVe8s8.Gfdq`U`riZAQo#TLH@_I)l4oqO.X!m1&Z%h]?DY-`-fO:qAj,c;ER6nVij("2jbSA,(P,>"jS
%4dG9/'qhHjTc\cZ++*4p(V972Kp8r`\8_Hr/[WpeRkn==#3foVCMj7jOLTU,T9cqAUT:LgGPp[P5^_o0[#k0=r8T,qM>*r"hP1d_
%8!j@6A-W#rM0RH8"q\*#!:%\,E,2RgO5V=hDZ2"k4-T$l/T=V8RmEbD)+4_.3gMh8?K)%8N7O4]DNVI8ebhYcAQ4fR,,]I`Xn4"u
%@cBU"l#/Cli)^0<-EZ7ajS-pX_,7tLiZI-U[T4.Q]CRa*j9srHrZLg6XiB>%LPB7@NQ'8NoDQF-h2,1*\<,K70MT$sIh/ou8FIP,
%S6GEWNa$AMnC\bBR]Z[@[?*lUg4`Jo7fS34r3*TgT>\U$;<I6Zfnr/)Vj4Lq>G`Ok*JU+dA;-%7d1,Ys\M*9D(,/OO')sXoKtCl5
%0g+LPbj\5Co_^TbNVbpZSAIshjaWR)Zk%>#i#D!3M00>g_pQ6,F3o]0aDdYi'Qj4jheLmb:Ip[Hs*Z;iX`p.nXWa-f8%8Y-I=(A>
%'3eE8^AbCNplhJg#;>j2:DQ5ARJT0os3L_6"<;PGDuZF@J%-`drQ4P'`<ROc/,Njpnp`^fnY^"UiBZA_RG-s*CIYndDEA:k<H._[
%p.-fHs(+?f%C^QGDpR;<gSj_QUGh[mXrIC`lGdUhN7>WFomKMoIeN+CR_k>=s529UHO'Nr65@V8s5PkWIY)-+NFs4?VP.,K9r/V#
%L?_;MrhV5PW;dkkeD$O6la>4/N4%?.b,#J[%GBiKlJ8DIH@N=lE59(kW`tnrcIpfuCY2qnV=LqDGse^0e31+`O51Cr5kFjmR08Vk
%*DZI%hY9e3?M)Rbp]WAj53\+h!#sg\onj&;3@US_.g7@H0;,cu;\aa$T1mR+#>+6+XYUl;>CRa'L>VWX/ij,=P-WH!Fq>nC%&l;S
%&'@8I<Q8f+=q;l!s+k!mK*_d=/0)$C+-Y92\o?(>^etVj5aQ60\db0"s'/R9h'u;p[#pH8GQfg3(pr/lEPO0*FSl$qnb`2SeLJgT
%ZZNuBeTs]EP\d$q8@]G9(m@*1V_TkN)aflcN3o,$jZ,bL9+CA34^pMA=f]s$9X^&G[1sKh)Oi<tgMd@35lJH-IF>]k"Ve10,n>/V
%pN-n,ZAs?KiUaNZ=6iaJT0i,q<D4^E?;EjcY$/NakS$[/>YLW-W?S>dP7aktej#;f$keGsK\%mUM6"q#6[75Y\2@;)d.sChcklY3
%!*i2m5%*5W%%#Z7[FP:,S`.WlP4arYor[-#`c8_[7ArqYE^'=)Ck*N\Kj7rK_K]J687GhZ1Q?h4!iVt9ei0Rf-CAM<iD6e\NqsjI
%AL%Z'XkoO2h;)\>dX"j8&@Ub%(cTK5RQDAYVE5:"1q*QPF[K]_Hj86i%m0g?mkkte7-6>g6J&bMX[639n%pPq:E;(#FZY50[lud)
%s188^Fa^8\V'JO7Z&];t&:>;o$c2'<(LC<O"5a^r8q/UNBXicDGhE%nWfL6?1"(=%)aC"<;?&:l3.UZDXm/5"/NW2+H<I-dT*"d*
%Mu8QI--6gdMOKQS@+OBq90kOMh$0/t+5LHK0$+ASf:cs#`c*DsO:i2$h1(c8PtAGXFdaiQ4;o=*Y._7)h;UbZWfh<!/fGV,Kb$Y?
%ar.b*0.S]glKr!!7<)b_)B_A-3^8f\jsPbB*G\%-)-+'\^3fgfD`#m=)uESh$f<&+mEXd*iCk9b]+]#^eZ'<FWHj@b,dG'I?8/`q
%c__1pQ,a8$H:aMR2'02PUHo:@*cHP'c?.bG=oVu*H;8>&FpccY:_BftSq:\f3XH0\>M[TG1-\9]rn(-6V_uo0noTo;Va7B>f$0iX
%mQu1SmOt)=[\C7e'-#0R@U*8:oQW,4+Ni+>n[N"@9!rWe1Pb8Ze)Lb[8EujGLqTQ,VdegOm22l$XZpX&D*+a6P"5JUl*ap-9oOPp
%s3p>Am63_`#^HI0mJp?8"Pl?@)E&46HV,>o5g1?-*ZcM2[lfo$Z;s]ujBP&Inqs[M$BOS<_T*Q*^Mr8mjtc,$:e4a**a;aY\Mp=C
%GB_[TArYJjdeU*#74<Z+Oc$#Jg'H)A%;^0X\,K89OV-A7iffgj,<Gr]c3<`nbIXIp<5aYWF/^XFpSoRscWK^T*_HQrhIDD[+rT6n
%_7K-R'[,<ZI7&*0FF%%$!Rk:ri(s&<6cVgIE2k/g+$\Wh1_nPas8>)8)6&GC(&2Jk*O]V;IM,VDk`7sY@>%iH;tB>=mr(!@[M4C6
%?!X[i0,*N*Kkp>r&HabGp;02lr;-3L+gUU(C_nfaOT"oK=*8B2:S71`K,SQg@='t+OO\?nfc<pECaY<jM<7:N1jSEk]>K:s]%:ic
%mG#<*ZA;?A0aJ%D8t_>::VuOeq<G^A9R^\[F\i,uYVgaoN.73$bV.,3>+Zr8!B)cVE.QHtr]mtEA4Z3ZMp#R$pt?Xt+;C.]16Gp1
%R)O]Sea)l;k$r<^/jsjPO\6Wa_+F+?UPRWV&=^*M?&YoG^B9PEJ-toRm>4>aO\6-#RtK8sRb."V0B*E;0#Pr,[8nUtB=VNHXhFn<
%B9q"k,FFG\Tp9?(,7_UV:QITtY1UrC*Q61?1g?J)qUXhN/lVg%;"k#0lbJ+t'p_m`0c[NiOrm^EV'SmYTs^[KfI[8$L9T]s)3F[R
%5$Li,,V[L)(g1]-qUoUNSs!l;h%[r\Q5_n'!UdreElPN2%h,V'X(4KWHKn#DE0,,J]llZDo0k&a>l@=_ngf"SN>&)/X49@G/^j%s
%L@9OXJ`IS&,YsF^(Ep\8"T4[hcj:M$"GK*T>u1fk2$jUCWPZ*4bEk[0]^&G7`2js[@oWS)a)5[Spe.i]$[[M8j%`Z7YT3<Y<+bdr
%etXH6<H,mt@$p0U+>.Q)frLcsj*X_d'kN""E[bl\L5e8EYc(*^/?QH-A+V\C^<pLWB*LYZ[CRh6J7lDg01$+4]SVKfB_=?i8glIA
%f&,80LnrncZTn@0Q_B4s`@A8:EbdN"C;gF12P1+K9I#*p:7u2u(-"jO=YU_;#]rgakR_*0_M2X[KPTj7dKnP7YCA4TL5=:g4TmZh
%g]3J_EX*s0mOX^G(,PB4LNYV`ULO2%79d=e05Yj]q<3*l*WR.k]t?&mfk2'a>nAMeN1Jj4_hM!QWj5;"MjpQpmrh;!].&\:$NgA:
%\P*AaJ76[nX70tTDsNtDi,68u]GaiFN/,M-@+%nB+!U30LM[85ZRtBD$UJCtE25f>>V(4M3Vr.PO=Ar]FtZ<9b&5hUgrAI&lsMm5
%<F*f75;H/dYQ"rdAdmKSm)V'TN6Guh:_--Q!M9k8(J)Dcp'MA4HsYXb/S&WHO9fT\DJ*>IdF-Q\;G'ChA'r`f3"=d+bi\/9>/,'W
%J&=3'd\VkAV=n53HoID;[T^(_l#p:G.n@(oEhC1u_<"iS-7e1C-l>%Y<eKAmq_7kidg/FkNLrW8TGWW*2hEQJ;0r$P6dCpV?acfn
%b?bM/<JYPUes:(9YVN1J%hGgYqn'[cHFNU=8<1"#D"i(V<d?\f78U"Fc"4<0h!AQpP2iqg\p@X6^7<6eW;,51e6]\f@49f:20)A/
%ML-X<Q4$S_\fFi/)\9dUn^GIRZ<>M$d68Y2L-p79$HA:1B;dK2mI/aKHVf+#BPc5&/*be_EqHWIrciHc%"rA>[F45-.9/o<,!RU@
%e]6K`Xa^9_D5Gh+q&]1d<!,/b>qUSYZ-TU#o]7ZUM"BE9#==sd_p)$eIbngFgDY`Wl.X/<j!o]XZD>K`lbeKdU"mlbcV^mK$FQ`(
%Ug>RRm:SBGp(+d)U#^,,F`"h<FKHHg43NTDK,eeHOq'c^QdJ@4'`ts`N%ThqGHkF&R5keah0;u$UOk88P+VU..qiapHH`UDC57ku
%BG8p%QtRb27u)?'i6E&URDSF4(])hKC*SW?qCm:ZHoQ6Qg;lKif6<i"N^05&Nt)47$WmLEY-[!k3<S(GL52O'B]ols,k[7%Ph4Lq
%TRi1*G-i/LN,sM]5JsVRgU]2fbjCCc88F!@5So]//eD43T1+d1qC3p1f/4&bgf!@s]NjS"I?>F@GF&M1e/&=*,JLLqqjP$77.A)q
%/#ND2=^AG.2n^s6[P:T8(16B>Rbe68_af"@#f&pr<)).\[LT?8">nT:%AfssKaT`l4^K*I5`Ln"^p\tn/"nI':us:\>KrubJW@m6
%Bc^)-pG;dFgV.`92]'B,ebmS:$0Z@!OpXXpV>Eb1TTW3SD]:qR'JiaUc``'Bc9O1pO-9(d4EKlRU,(F.I4)5DSU^o2;Bn([iq,+;
%[&STA*-6EE9FaRFP@Xa*Ajc$dZ<#-:":l*kr#cQVp@TP8\^c5e`krRb\atIB.g!*Wn?&((HFG+>gt/l-5Qd_-@e4f.s'@b2@B`e*
%LMOd;([00=F1'3mH689pf@:H;$=h;3i;NGgITqek*J'eHQSu?=Nuja:'doYf^*'X[l"]mgi/$=1K;H]ca(r<F#k[C)e`R"ICa9s*
%$oAN9kj,s)2+[1TJ<hB\:Y.728"eJ1f/4qKLaN;WkNDF2RY0ORN:_@B&TJ#$FStZO;qkPu"St)QS78-6?gN4>3Jjoon:3":oBG_@
%1XP0QaRHo+W`jos-l?e!/"YcD\BkXj+%Z\?BPVVC0Me.cE,pB!!ME<EUcDc8LceC\T$aWUYA=ZMI=56[>Ln=R(Y:4$AjnaCb$q%7
%l?9[O#+?Bh55(9BB\WTFTP+bn+;'!'asdV[cH+!4+8SD-ZkT[`/EdP/Q/bjGoPqOXB0pOt1:klgg-\[JfVG&Q?Dc`XK9\(m<1-j>
%%QgMC#'Bf#@I@k$Z4^?o`'DeJbC]m*'VLQ%0&;SoYP0CE<3d\BW49-X1HsV`5\1mY*gU/[QdJWUe+mmXJ9^YPjh\j+j8DP"\1-f/
%7)th0X4sW)k[_g"/u!k/$\g.S27Vtj@@FC5>[CQ._0t(B=_rNsW$l_ugDf:9+.HEV?(Li:n[O\7^<8T&]t4p43PMYgEperHp367s
%7a?5PV8kjb+<&L"3;7L?7m#Ih<R0G!pQP:J<S[+^iTMm_-)hl*^t=4FXOAqB^RJH<Cu*^P3HmF"=4PR]*Qq_/@gA:,lfDQQ_Ki^1
%H`lK`*h;[?QBeYU835aXpZN#WjKHsP4j(<boC\:g-"YBXTAP+q>:hhl]mW#bS[IJ<=U0mKY2/E=g]$j:mhOr>%X2,9o%%8$YOF6C
%hAe!)`FIHol$)C^F7j<mdID,<qQtYc%N^n*mLG"Vc_l=jHKR+)LAM;SICZY1Hs-Oa<jj`V@JT_3'RX/f3Sp=>XG>CoS&#ngf7l#%
%Ik.h5F1p-[T&(MV2@$ge4MXX*]@^Bf_V>NeGUHMI1s7tKAuoPU>he.,"_4sHlX9)Eko>Z*MdZ<D14a?k?qXRRnbm*r$f-3na^a(0
%rGU2So,S7cJ=J_QoN%gLf$+=:44m/OhpfIp,s,>7&Z"A;erdM,2"SuNU:e'['%`)5jZY2H\!PODfL%o_S_)u0DcZ;4?o*oM50ua[
%.F&)H.@&[C#A@u]=\6=!`j5]s"SDE0"_]-JjTB?VL:94j1h[[6fKsZD2`H#T5T<ubJfe-gRIau*]r*r)%++^jb)uc>6.tI.*Z8?;
%#_p_bE!DcA^#]?%<'DSVX>GRK[K?a_Z6k_$nB(jeiW9:#]HOCuqhd6D/l9nb/pZZ?)*j%%@IEILMM8(0(t(8qGl18\`6kA4<:5!&
%[EO%oai3;BTKp'HjS:mUE!tm9c7Q"+Lg_4hPup"Ll&UkGkXXO1T`=Cg`)+\C1VRjVL2_MWe)!\0j1`A/+g<IQYqpPeSZEt-\9_N4
%g>+fj@!C&m+Pa]8HArL29(Go_L#?f>#I%e?@(e_%4nlA6>3/D.6>=GZLtUYYG!3dV+jOcbgD1me.5^X_(=B^oq^t^/V7g[nK\p/k
%QjaG1h\,UT(>XF62]2`RG]-iYTV!_W\L))/*hG%_7ZAsYZ8=#`=^$mF2hFgqT-l+ICpCD=_8I;Wq!F$JaW:4Z9'm][oe-kcH\gQ_
%2`2ri)Y?[hXtC3tkSH>1`XCEd!P@Z]%'#:EG@ZQZYArDdIIW"BQccK+K09bY)"%U6V"`Es)psdZN%5oYm)\Ii>0Es@?^U$84_]l9
%R5+_&ElWOB%9XItEuXFJ=\o!i3a`!P]f39h5ff--:\@]cER`@9838'#Z+m"^AWF+&rbsuCD%Gdr0mL<CSZXm+e\QjoG@K>)=W-1A
%/\Sg%J)IACAgp2GrNP@Bl4l(0GR]ebf(5`c.s?l>H50T!]lI_[\$:Ke9R(Z8_dVg@[=jCSkgRm8c6`-/Z!u;7=YahQ*e#hIFFWk'
%Lj<><hsmN7WBP!)bXdc*<)u`K$WQ7n'q07l+7/^%gpbS@f&FNL^q=`\Fa,1@'YP'5QEbap]P4`F3A&FFJs9S`+t%%rAqImh`W`U\
%gL4p*((X@!Z'"tN8%1&:_BX@)Qd[_c=0C<npRF;_X+VM#0Io^gCJ!:<Kn4q'kip9a/$B\!4UocY:0&*i@.M_`9k1Ha0QU5`/-S@(
%l2+bRpt)+-k<<YYCX=))d(cAhPDY8NZI3EIJ4bUTI4k&Y[%klo;$q>D3fV6F:KCbDIM2mu<'#$q%<YO5VB^APb1`nu\pM$j+jnHF
%ljgLJRF];rA\9bd^QXCQ2[>;03UMbB1NPD1(t1TOg-CiP2n*e5iS&sa;YR@8)f<QCIV@&PgOjQ$$EZ*+qe1$#lTiOg?p!Z]9rfR(
%_lWcLb)_b/^(3Rkds%\M\.g];UKQUUYp4/[+l$bBV%#MGP93X\!iI^+,D.H7k)05-ge9h'6\qW#fG#tk+OUh%DE/G,]V[i/#doeW
%-5CM7;3dX6N'Ef%/8=B%DGptcb;rrT5@\!RiS)p+!00ufQ`T[7I'=.,"@6YP,.C-pOKV,JaT1rf`_<qHh)R1ie@ua5p-,s8V=i;)
%GE`=8O^8tG\q6#._kbD\^-;@4oU2/oTL'=_Q>nhpq;Ui.jOrU$]@)%@nQ'%F#.uBe)iII2Y1]RQ8V!o/%*0?S+rIf/Q3e%K/@@DK
%Ye%N]97,4rcL[.-q%Ad\]^4JnY5W>1OJJ5p_,9-%'FVE]pC."kNb&0-&l_;%e@bmQhcU6Pfu3FqmZ!i%8KE4d#=9E&KP6/7-3?BB
%J;9ID]j1K[La%S3((B;Mkf3qFo@G,OnGG0+Oj*;hPGc6u8jd9tA6,Q$XfA`Gq14WX19Jr3rH)aGgeiKY["lCCjeW9QE&ZE.MnudR
%(@rgXf2(Q`?hUTWE/JYLIN$.Kaa3'UhWT(G16`R<:r%LTmotJ%<"*0=O.]V9h/nHmG8:DLU5l"l!d=/6jH-Of&q.tTl6>2c3IV)'
%lK6lMhRUrno12>EGinZ*E5'@EIC?88MYaBHZD>Qh+_/aPh[5W?Zh!0,k$pK:)945(RZ#6sf(coD0cQ9>>%=Xjj*G=/J[h!NX3[Br
%aaWOF.JF[+hk;gs$DB*rC0D^t')B1Q2(@M<]N,m=3jM349^R(U[dk2^phP7>-0"&R&=&4N)$i7Uk;l+;F5U_ur](nC6\=I?*&u[9
%gU^Q?Y/*2!`aAA3Z;PWF#qD-Of9@CZl[3^'\UWk^dAE<.Qi9"6POAS)1HS+=SBon>Y324bFLEEnj3&\h4oqg!le"V0%>ejdS!FPT
%FVJ,je=*\#%,gM192Lsgi.F;=e]ei\O;;2d8*"c$ZFU:t+.G]aq-gRRmW7(JmD+5DK68raYPr,8TpZW0#W[]uE>[#JXGWOOetBb(
%H=dY<^pQ.:K(bIRc[,@BLT?S"XsW)LI!YbHA781'?'qJIodosQBokOV@Tb[[`<R0ELB,g!R("n?Q&1lh>ZkaG/5Tn6qcp.W6L+..
%;XE,P9?U1i?-f8&Rqg>]iCm/9g.B&'W[/5IX@Gf"]$!F_@9SSEngr59+q#P>4D)Z$%>lb2AZB\pkl$L)/2Ul`)a%\b@;p>ie?11%
%3GLl,SsA^b$SW>Y1eIdCQh"ZdRF$U$cu`,b=YHt1/$Cg?X;;MG,iP%oMs*WLT"D+rU8\.lZ-i;'LWb%"doi1$4A!Xc(78DD_3AmM
%9=J02`:YL!"k2eY`CT#WY4:oX>AGcQ&![3[$X)JSRr<N*82TD0MQ6N\MACq!^/f0FZE`mAp;E>S5FJu9@&>3.A5i9*CLnJ#URF`b
%"Q,pc!>2?cQq.Q@b0;O)1:_L`XSIATKn0A\42>A#AdP(]k@&:pF3';%#f[8BB;Z0L5\N>AFRC#g[Z$n/F6MC8k_SmmHOcTn#+\u,
%TV!2bpC'*([c$d<FRC#gJ^AdbkhIuX/D5VRkKpbPcilc-ae<e%TYo.tF3(%r08Hm+k)_snSjCDCiF^3*F3gN.oJ,eS3cdPA5Jq<q
%Ui!``_"0@5G(+isM<F+d=W)MhDK!4C"nJK,X`)5#g6384Ler(e0>c1pT3-.5)W/Xd5LRalT'TT<p.2MI_.9dKJ.oo7`og6&D!(_*
%%G!U^::u&_YPBB$FN\-RGE_fiNui0mQR:Bak.j(D1MKUCfA+B5Bl/apnWuN&,8>gTI9nVK;ggiFF!PqY0q$*if3D="4mL$Cg!(KC
%l-D(Tjia_HA")cH]PM)cP!"raV@!J]F%_0'QZZTb2"`[mTIN*oJ]N83Q'k"DONlL8RTF;>MbWW$q'a=j>)P?-+V'IY)_gYfBHsIm
%9euC,@]JP[M5DtQg\-NR=uN.:=^>[sNl.gO:"!o=,nNe[@eF$b-h]W5J`0]7DB@I/fNk';PK2k#Fb+M%?+[q40P4gt%&Xh)2/R\F
%g>b$37?r&e^nXBhA)MLX$.5rdlkKWk,EK%k^=U/`O$#VPS/D650]he=Q(@[31U;t)%t8,JT?>AUAO_VAGZZQ30ZIH,n_HcrUJ6Y$
%Zf<u/ZirLM[mq3^Ce=fhUZn2^W(hE;hpNfXcH7_`'c7@7S,%;k,&\O/HX'_i0Ob)-`h(G_lXK4#p5"e\[u2cC;up]8N`HO']c*-t
%i.OgiS!$,3PnCaT_bY:DT)7C.i%HfgL-6=jbe=Ejk]#!URdOCOke!CAl&kPskVZf",Bpi,@S+S$CT\2mo]c0k>M)UqW[YJ*a>n2[
%IR]P8"fB_g:m45?D@9_lj5Obm(7hVrBm-NXO%+ucah!@>*We19:1soXA]A_ZAB@>rF>dJI)4)\HrCJ`Q$p-2)N)t,45Z4+FPH9+T
%PYuiQMao,->TA"@F<Vco;JL]$p*d=3!KW2R`ogbgr9V\fOYNIcOP4'4]k\*!)'c^[4:TQM8&c]VYkU:sJ1sVH>=Rn"q0@EO1)rMC
%+N>q[?8+AEi?fp/P/X.@FsaXcoC^S*GMK]aZ96d37o!OX1?BQ3+C]!q0AQPSS3"/q:6DkpM(FgE[MA<S,\N5mK70H?"jcfq9BZF1
%>L4n(c<i,t@ta-]BY9p`?C`8">Vh)I"%7*K*Ij8&FsN!"l645AX-Tu4F=li#O[TCY^iP"OH/ul*GSgt#prrPQe*K<]59J02$@:S)
%E&0q]$Ko<P7&\B[*tIo'R:i0o5+LYnT\T=XC%L;bd84r\Dnc$d%f;8QATQ.P'A+U=%f(&P?.b7Q3Tn:?fOC@^*Uoju]0L#N(K9)o
%ODmmhAW(!2DCH23BoA.ADXLlWSmDq$82(\)ZQ?Ts@,Vi,W5i@0qe;%mO5YCsc*8Y(f^3;6(jKtZG3S9'Zc5(BF5M*Y3\9AY$CcAd
%NbK-kVuJ_hHHd`\l?F;9?(n0]?1DP;LQ?GQ@K#/.MKDaS2NI8iLM:upR*0B_\/r+n-t^0PH=iP!Cb9<5cFDI8WJA6[m_##)2p<0i
%1N,#.[2U#gQ#4!"k[E!#_h)ZqWjJ6]c"*VVcQa\-iHL;"WMm,uAY_Nfc64Di[@!LT7VZ`/0]l]"=@Od?B-t@7jGO?3.cT,"8+Xi@
%7]Q5Ad&]h**7ornLs)ZpIY3Se8"K<lbVfp^_]FIBo4r'>E*PRbf2O`Va#kSmbak7J'okeNq52$RjL5guL%AqY:7DT'fn8L6pd\6@
%*5)]#:PIj)`rtcc,X4_"JS"jlQc(7mJ:tZXiN;t/mG'U!K7l&G5'Gh1:r%VjQ'jQTT0\6X*LSi(p:%P>c:4uaP!Vf$/tiZ7j_+24
%YttRdRk7>I*"e-Re3Q31*hZGPC7O='2Otk[J%pKZfC"m(o:=sPE_miAD*;fCe@nk4:plJA]<3`bHfqe7o_`1!rt<SMDiGE0Ej_q&
%4=G&lFaLA_F@,?^Ac0YO%`rTY,rQPI&pEb:,#*5b]"1%5h,gHfYjM,Kr@K\Um=q*Q"t0#=>Vb[8Z.^1j\Ks47qiR63k)j(28FqDL
%Z.`HUE2`I80,H-JcEOW#]:EJD#,jNc$m.@/"19Jf_#]s0?A;`4if[`ZW3d1BTTZUqH,9RhkOF6]8$s.>ZJ2]iZJ0D[&%$>fFCtT]
%S];O-mMrZ[5gN]^HaJ:A"cE(W]mcrJWObb]/>1n-e*JDs>=kN/l)J8C8*5`;V"Ct$?5BIo]&"O\%FL%/I%.AjU5"r?l6&p(DDCmW
%+h(J](83T)0s;2>"9P+3;L>i']5#Q1ka20IijP4)I\WnanYGSm*kM#*\!,mCcB32';e;hijEu:4Cn%"jSIO6_KHuV,`6E:MY(t)D
%`:_C>&34Y.39S!^`p.k.an)S7@AF9a;O[;WS,W=FnbLW-g+V>4gf<\@3\O:4s(o8\r@n5Vl(%)?_[AE,Cc\J!3p6HMB$$oknd.A$
%QPm-oS9!k+aF*WbN6R?hT/rIeJei->opi>PS>u/8+iJR_SWco(-B\7;dlFPZ0X>^oflU!"FI&2S3FpT!q,tr=_Ta<pcH4[U=Kh>=
%VK:GRC6$th::YK/f[4tTdl@_O9`;M6dlB;-]!LqnflU!]$\Wo,VZPOn:@rUdL70Q\c<ce!RDMm5e+%S(H"PP$_V!AkFS;_B0=?(<
%dnP`TJ(\p=(04i2flTt(i8!V.B%&b?&=@f&S^V>1/I$[dCc\J!3ihp7HT%EnqNuP>A00EG::YIIq(d:TSJ*bPVe++!Rnb)iCC]$>
%::YI!kOHf7!1(L0+Z9<PkDOb5W#1*m@R1CY*R<dY97.B7(.>d%pN^mV9lec:VE1p+<P&g[PNU&rVEq4ladOTk/"g"#%>!6c85S5V
%4ZbUFhBX7F+EY2bYOU]',SJq</!*O[MC5;e$9&ITJgXQ?p6mbIbSH>Yg@NX^=X5t[=hAq@(b*Hhkfu]DRe&7Xk'aDN<-&#Zh!mDK
%T"t3,kV796R9X3XF@(>+]>l:7#MmYWTtLcLfW<1H!ls)QGSKoM+8<\G.(UC?-^(N0FZ\`Gk.^YJ"6Oo`d\Y.NP#J!$m;k/;T3ImU
%C&M!Zq:.Pp$$C)J4EE.$?sb;t"-$)>G18O7cJuD9n+!rl`UhD!Oj5cV2^">na:I8Abt8)VjQ7(C[a0*p=\#d=$!Wceg@L.rI^k!T
%H#G+fH4QgP-)NXu_&<c*5/1d0o6EemSI7nSGm$$tr.n*3O3GYcbY'+h(@HA(JWRWmVA"5%.gaf`lO:_>=ElbX;qO1;$WlJ]=R0u/
%]/?iohkHL+3UN(`G:>,X.j.el*W+:Spc:W=-4<7s1U;psatIn^JkCUc?<rd$d+0Dl#\nJ+H:X6T--hLD^@\85]:>*E[hB09<mE:,
%o;^,2AFMDL8)HW<%=)SMDQM*_:/pVm'Ml,?NU-,$ccJ2fb-jb/[(Wc:PN_T\*m4\+:Lrt*_@*s,ROsY1p"(uU7;s0jFMaT2?g2sX
%h,MkMG/E)-k>qI?iQak2a(O2P,P//US^U/U*n*XSUqF8!-1T9joA(q;XhARs8KnC6qEEl`j1O!2h1t*?_O]nnjq+=DQc(L.>_?t.
%MC6u`(8!a1@0>MG[B7DL8!edW&SfI9S3pcQ_lm!^]AJ%>83MF8=\a<3TR,a^=:;O`5UUb[be"qq^2Rn%%C7E-2i[(U=+7d!N#n?f
%7:.6YLM:uhZX8VNpPlqmN(FHi87Hld>&5ds'_>".Z=S]GRI(Dg\;'n*be[E*XLo-c;i;nU4V'-Qqt,%X,^P=p1$N<XgDLgEkS9^E
%qbdho7VY7HNCcYqX<upB`=S\A'-=GI:bfWE.Y]qN_JbHMjlVc=;hO,%ojii$DFU"K=X:Rf6SN+8UN&m210!B!S=E'(Z,LX+/hXZ*
%/NEWIO09cZnq=<?]fFfKlOHjZXCo!^=(Cqr8`_u#"HTFJWR]t3PR<Ne]o,ef2@unE.CU,$]D?KEgrs'j<@`p8C:05[LG7$F!>R_j
%Y.8hHGKFk8gZ>)Tn!">!#XNLb]ur]cVs>_s:bq.M75s(`GtE86caD,3Yg;lNF2A\WpM[F;[$+afP&aD[FTNHeO`T1-/28[%(UmoB
%i^F'M3D40J>*"[\hhC`r]?JO__$2:]D_]I19cHi6;N==n#\+^fRi=T9R<+ZN4Nlu8k+:GAAcDYL-6K<HpTK'd_$.DjTRO=p5ZK2)
%o\?pmdHM)V_,C6q^;0hRBUTDaZiWD05T,EkKVt]u!;oPa_HaQIhmqMH\""4L9jp7+#h><!S<.c[QorGM.%PJ>.[.%&lmGk!nW&g?
%EsnIrP254NVjOUY7H;GDAFk5o]WN@bGY%TY8\^uo+rLqENUdek_b4eI4uT=cWr!\nYfc<b(%<K>XBJ!<"A%]t1<Y*j?YG]t!gn,n
%am$.[]HT2?3*;mEe@,k3Bk)L)IR5s+RUdJ.%eE++l/GQDfUqMr$HVrTqj];lEEYH"4ndN11V69OD2[#T1$6,Bk=dK_G4efN?+tFN
%_;]n'k-Ac-*N23#Co"!***.>]f,ePuO$2%VY\tb\\^Q_Lc[DpnoIO3V8*fd!KGJS.7J"J\XVRjo+/L:C+0u*0]ZPY<enf-l^qJ'g
%*9L7mbf`HkE!Hb3K,&:J**GuI3PNdlX@)u!=&(A0N%qeOAamtVV>u4&pT=m)I=uBm[i6s:d9e)#@I/DSMJscmPBEK"K=\d<XLscV
%P;edcae&O<\tsHA3=sQWfd>D3P\*Gi2"Q(7<)1V#=8Z%5RHS;+ZWQ%pMU-,n>U:qAJ#:AO!pqaUf=FrDH2+QbN-V#`,Ml";Set,H
%'4VntA[Z\h]67l3QYE`*7<8I2&`$A2L^BH?FB8oX'qT-[690Q]rTUWgXn:Z8!&>.d;e,p?kA]))`MUi\Zj[\PKkZU#j\]]W'D2XN
%VTf0!Oi/ONd$A1\7E6r,l7k3f'Nota-CK9.QM!ku*a>g!g6:tmq0\aS2YEbkk0pX8e=h7b?A81sb3+0sgH5u-,<#,XI.5';PRjrC
%qE"^rMF730]Q!I,PgB#MjLH;R-[L7'%#=DA]F*#aK?OFq;9,"iWPP*'rT:@D'V+JJQV=Qmm0tr-\UN\D=VI:%LphFgf?`8'jH*k/
%e[^-p;/&&@Dq_muXQTGjH\Jtq\Bf6p3#'e9p#GEKjnE"ETohJ/\UNt/+cPT!VK;\=1:cOdXrkdHijj,Qq(h!@IdULJT3jV7\UNtE
%qFu)6Lr6cPmN$>.;"]=@T-KcZG;Z#P>X.t=1X9=RB'b>N+*!L*(p._RF8akt*F@iq_mt6aVu$5EJVnfWT=_)GM1YGLY+JYBP]<_\
%bieN@+m3//>X.sd0_OUJY+PTC$5:fMe%'qqM6d[0WDfARkIdHS:\D&ac7nq%IeGHTp/F6pV_iOBMKZ.p4#77HACn3OqDk_-kUH_?
%P%Hr1cTU4?S<5l2\ULFR/_d7R[XG<U4P.n"Jb2@==jQb^SSOQGP36hfTDRoXO7W-YfYtaU*oH=0&'h*Lq9S2B51e,/M3oB%lgJ(C
%G>4[i][)&0TDPU:o>sVrMU)Q]k&[\tqg,S+MI>.ZrS13AS)HIn+$gf_kOHg0R>u`rhd"Ieo<b=tG&OUWlf[FZ4q!.6m9Dk[ZA%OB
%5<WLi`cM+NiT5<ah_\JMrm`"V)"W$UT:;;@n;HZ3\X_tEO1\Q_F8a&J?=uFQ:Tm4VD"Qu;p%&u@j`%B[oZ?V!WIC`9OkE_\h`4JM
%Vu!sjEou[m57Sdae,YsPS+9fKpHU*q:MIsmrHRRH))$r*k<,l%`Fe5UkPG"\/#PP^cc!>0Vu"XN4ij5\k<:'kJkfXUF8al/6[^8#
%`cM+6'4ME-4PRDqm\fnAk[RP^lfY,J&KPI)kPC&#0XI>9B;VKt<'T"$=s)r(\I/Y'/5G/FrS3*ZVCB>ZA\oc8%PfY2-??pDnR:*P
%._T*b:(k+`\9@Bl-?hM_#Mts!(+jnb'0A"RhQ3*AIJAS?H""^o*sdJI"DA-AJTZ-?,D[He//Z*^9S2fql<tlb:gBlO%S"@04=UTf
%5),uWG\DLOI=7J7B62JJkAIRiBrs;D6?0,L^O3L-g`8n:A`YJRGl*_0?Tu6iQUBZDo7L'9EtAk8Ep!\Bch[&'_8jjqbL,LeH<r-D
%4Z%Ylc;TAop[c_[:A;&V4IfY>2^75Dk@ujEFdr=jr],gQ]FU`\46'c54M3]pVO)pnIC5[U8^!_FOh67TX(X56(uG6tr],M>+6qC2
%_p\BQE:'oM(mHPkh<;j_Ak,apd^GrV>Ur]^WIH0NNfQAZ_bMXES:#4XN`KX[YL)g4Q>*o.>E<Y:Np_HD6(IWqeZ\Pi_pQN]'$SL.
%eWD"hFM[dLgS8cU:+785>NMtGis81rNo4[6pWOLXh,NP7o5Y`5ahsZUmO3=.ZlaGU/*Z<Z-*b+k'"U)+/o5V[Tp,)fhWi;[mT-3p
%EgVdMae=Ma&+t2H@-%b*Ml8C7<-I<<@HS5^A4YW@6_`[eBV&""G5Ak)\gH;aW"YW7[:47&O?P3:9)7!;)E<.*;noL5?L9#YCUIh1
%o9uc1jlR&aG.>$QIX,p4DWY8cU;cJ"8LZ9a[B#@89242?\T/XkdkSOq,Z`qd%-oG&BIt!g.,j=VDQ<]C^)72V40<$#LsrE>IK((Z
%jNVmRIVuT(;R5s7#8t8b&J9#-)@=Wircbqq\X:0j23bR'X^Yd28nKjkr"B+el(am:;>_*rg3!%H0'qMB<`+ik%"Co'Df39;c]S*Q
%l2>>Z@qXgE3(3/jB,_bQH8#,S2>0KsoW$f!aC45^AZDli9!C6<[bgZr&p#;3]_b9=*(=gB;iQFKQ@:EC$O9"oGiL7CVVd7eoeZm=
%&mS(E+sD:Y6,M&GWgPq>_i[<+KYZM68tPCNQ%/W8U[nEWoeSK+d5;*&AIY@p+4LXp+L'N#Ak70fTgHdk38ZEE"Np0gqK\LGcQIu=
%1IaUte&fN!mkf@a+r]9Dg0B6AaSoL;r(+raK=DE``IRMWLi2DDijE<4F(P<F[sG#ieh^Y;$eI53`m#sE*)-=rF@I>d;%%_N97:J!
%cVPjW._*L>?K&7nBIGsCl:#R!]bT%-_!Oi'dA8H;(809b5n,j&I9t>+p2)=TGJ/^'N/QEBIm(fH15:mZ7t^U015YB\o^,+?]cQN0
%d'rlde]*fV:\&[K=%:\cD5HL+Fp;$AOnSY\f,2O`(]D!<&rRn.I4rud:FWt7Y=Qhtf[a6th+$*%F6b9BI`<$hIQ@<8BmogVa^KX\
%Xq]<<%J;1@?N&(sa-CONWPEaP+]T?M,gmjrNQ/gQ@W[!]d"/oFK4Xs+V&H>(0`'?md;NmT.&Tf*nQ3`]RdBfA=c7*7"@Dpbpu8"<
%EYp:3WZ%2_+T.YGiiPM&iK6//j75`n6O#jqO3D2odC7B6S`FH\_MkcYBq65*njpq9_qK4gqp?gFOH/!9)Uj&#X[Vnrg[*HD6;]97
%5*mu"q(REta_:Y<V?r'(d"9!<WA$Mm'H\6NIcf5fHYb:*B5l[7!<-^i7EeWP7L-?e%OjVD6V=Z^-BTtMQg=C+rZf?D+,C0CG_6s7
%f]m)^=C$UAJ]0A396NP"2u+%CC)=9t]8DA](nsmB/)A19P);Ea<JG(&kHC?)Qg\r6WRlc[2JO2s&Ko@B4rkR#VNA[n6QDtC)(m'.
%IN/G?N+m\4,6Ps;&J6Fjk429Q[^XqV:d)i3J<-Lm2a5BkmRnF'4/ju-T\4;%hGJBeC2TMGbmh]Y8c.g\46`#sa,T`6B'"R>_=rEJ
%n4Kf_g,3B+(k*R^Qa:P>^35Bk03o]8h;6cFkK2D@Md?Jd+=h6<I;G>Z^gk&se&0p&7.@W7Ep[bROD9.I/"6F2*Qsr"]Q!#P!:7W7
%VkW)!ZM[V8gIrYG%M4N_bp+2giF(b'857(?`uB'd/=nRW)$gPAFm;^+V)gku"'t7VjRmF[Nr5[b@X^4Z5r^2&K0S4Up/B@cGBeZM
%6L.f<fnh/cBLtt]jB<Nt7E!%q20<ZjSnjP9m#p1B]O[4un#;l-gN#J-]g&]p=h/udiFNHPNqT*WeEc%A@lARu?eZ?@QCYioG^u>3
%%%t;%JV((ddnMXFHYMpo<Kq:2_'q&GE>NM@jn@1?Acib,h,5`9OtQ/I`MjDDQ`l=,eEbRR9r+!MiT#g&2a6AJ;MS`Gk0uX:4/r*0
%\7db9P@(KepI4&_p%0RLh5O$NT_P8C<'YG^im1oA>`VtIQd*.K56B=`o5V@@q>(kh,KjFgUoUP9A;bgXAGrY\]]_Wp]Q@`HZme5K
%K?[PL_Q5SFS`;7Ui$""SLFBikQ#0BC5_GrH(2TQJ!"JG0kmOG:-[E&(nWEq(;bFabONsY^Dmn-VQ\ts9X5tra-2%/4KII5>Hfe4E
%V,9gB,!_UV6Q&Nk]57\oQS/qeSQA^-M:G;jn7$Affm.El^f%iX&==_8/acPF[c:r0f$<Z6^g'2%_-'KmPX^h2Vj$eiQK4<)3n.J'
%[XIgAp8)RK`V??_=D"UoClH%bK\i8?l7KbS'9Zhhno2@0HMtA2p+9*72#UI48FDC7ol=9jY7BiZH<<_OSZS0rBUZkT(9dHAE*G_-
%]._dbQ"9no5cUVIPECIdoL5-63qW+Z(S!.fDenV.dEt-#3"AJ4V,sfq$XB]0RRRX?9KSoQ2%)[u,7@4S2_D28pN2$Eb0D6qHDMGq
%2I!05B0>VhF<upd?%1>-DAcZnfgN\#h*;XU*'k43\;U"([]k5=>Db:5'0sYplJutTH9Vg=&^\rip=+/=&(/DkUqQ6W%Fg8P)05qc
%YnN$>IP@duR\<t@H$DNu+iQ[W/a]r0Xgt+5ghK31p;IPm[3C'=^IIu!?lS(7G4Xdb04osj7+`@sU03Y'ZqEf<&hAe>lO*7aC$k4*
%aQuR]I/sLEgo[bt(0J5+(s.(AN+W.%>2o[l7LfNU<GH3C+0?n$+#A_hDr9(+QeL&l6g-.5(FW!:2p"R=rUJq[nZd*jQ\1892_1/[
%UST45F+'ll>H]WXZ/,8!76TCN^IYK"]CNL1>fpq'%[2moa*+PIa:,95e^@X=E,jp76+V,EEZ'4M:D2==C%C%20CQ!oIim7je_5*?
%UAFLYDk;&K429lf\[MCa)(Dt2WhM):A83,amF`>B;3&$Nl^16^lB6r/"tU#Cd\n5SgjPJAY-*O!C2s#S5+_sBo=rPVK6jT+R],,O
%(I.HT"bKX>O@>^:s02pVT-V%L3OcmGaObGaOk@<IT#ZnkSW1>O1N%DFInOR4Mi6!Ma\'o8]JM9A")kBRpS2R[#g6TODO]8ZQWmWX
%3()>!4-f8Rp_6(*KZ$]H+I>!p=/LWj#]8o]f,e[d`n#A0U6bfONHA=+gno8N;*OG'2I9*gR[$l/@pYjAfr-9&;4+a7dX_1HndB4Y
%H'lMhE)tah[A0f3GHOtbIWtY5iN;YjCG(m55;j#`$8Tf4pX@M-Sr9B%,N8cHZ0`68)k]l#Bi/\^l]hmmf02[N^VcXJHTNi_\is]G
%"!M#WT5pSJIEYL=\K+0i@^'IGg`_sMBuH4#-:[:=7Q39dj3?;ReMog1o_`)E3A0]cOh;b[k#jddMg!'ci@S(P5-7%dg`?$q)r7Qa
%#N3_WHO5)MT=BX\$_M"9>=La+`]962-8mZY<\*(.]n]c8^P_fRYK8scLCrb>be,M=''QQHGL8Yp/E;QiMoj62bNH:E"`b_B7j?El
%KCN]h(GBli\J>Iqbgls[=s,XX>8NC[50"M+ir3LKT)8+\>"#4>9M13Xd<LV,U=rCe9`kiH(rFk;H9FonC"/-[baNO1Z.^,EP[*l=
%0><%5O'9:)N\O1GQOAIuOe]Nt0`%*fJ[\6*-7_UIB4S+g#NH?fEsO?Y#Y);<pX+uq0Glma3=j+R41Ig4(b`h"JrrfP3uIFW5/=K;
%'J>MU,Zn*DR9Zu;-FHq9<O/+%[WD+M&(W)fUh*G7\KFJ=>-DsoZLb$EZItT8`Ptuh[X4Y$6duApmVJ2RKH?0FCJY#tQV_T+)fZXq
%]bZBNV=%UUDs\_e>Qj@G\`6JD1(adPWtS]]9@Es-hk&GC2BG&SCPfBa@J,&LpF<,Z!)SRdiCA6Hr;@KJ7fe(!kTVFerFo'9GlATM
%/_]AJ823>tP$O$l!B`e2)Td'J+5A#TCDQo7ARG@Xrg%eJmAW1o9sZO]P3.@AGJ*84`S,hkKpo=YJ7j_^itZa3r@SO28-enL/K8SF
%p-@ZY@^S!0U^#iV_<>/AM3`$K$-&RkHgjr@`dS0E+=N>I3F1D?$$%#E]Y#&4Z)ac`PY28AHc=`(-"!NZ!2*UoL-%nHeVAO?'lq"\
%;ZGV<r?bk_orhEBDFHuE'!2&a5:U#f8@F%>LV:<X36]onNU)NHCIrRkZI*;)mqbZW1gcb8"+D\I>'jTo/:dm$MGWg9D!<pR^'gcM
%<2&s+"nKX!I%>#."'oM^K6]e<PDjl_Y:1h8PKbiVJ`b1sAf,#!h6i7tO6JN5T+Mc%dqd+JAK>8%e'$(uJe5f"?gJbO?:W!G<\"JJ
%Y$Y7JO34_YZr;E84]6$kBQgR!l`[MCmZd5d%`.%J^DLe:LQAXZ)l;%aTsiIBe8(ngH5[liKjB1ZON%#SZg5q/WsaUCm;7&FDF!BW
%YFi[uLI?N0`U;nBs&bZT5@l(cgJ?eXEFcboq?#hi6_V%TSL\^j51ljjrcW_D^OL("&J'sp?iD2,Xk'P..Ied6YYOn]K7>F0]mhTG
%I%LCGfJ3:d&[bW/Ai]?8hE4T9WoNAWr_XE#ikMu=S2h?*B<ETnLV=7D[VK\s[I?R7SZP&>0.t#2KQnI47`H;+h6#:cbmFL^OYPY`
%/a1C#o65CQ.<f!'6<4`u7^D*,-1smR.%s'&45*`QOHgToO,2(91</6VHu3G=6d$O]q-J0pU'%)R9R'KZm2mQ8-9I53plgBOAB4S,
%s%1(;ZAYpW9M'J&0RW$CT-V),288;\O3*EqUOSHrR-]CN+""Y1#4"m+U=u(WB@\mq'2KqoBk\ClRsL1[ZU5&^iZ!Xn!MYQ56H:,#
%l%RX&P`ed>`-3%I]oqb5$n-L?Z!(J`=.69ckBN-s,.I^>[p4c4lBWooe`B]bcpHi5nMY7V!+/r8gb(I_3Sn+QHOj&';,KZK-'!mV
%l=)YcWT*(&Uo[YF#r<IqGjs\!A";^^J(TRT=#TJFaR6(I+GH-J:OoVlqHYBiQNsZWNh.DFojL7P3hOGn",WO3.t=)S8!lIY_ZHJ-
%$X(`4E9#Ms#3r3(gI'6dhRQs.dA(TgA7JA)_PMTMMT[iXBAdOfP@D*sJjp)p0Jg:ITsHLp6e3fS[.\SpO4^.J)s_2TX$lZV2!M[K
%Qrs9t`:F>ae.K=8T(M^,FIA[,>)SB=k.-@eejeg`&ft.#9^[sa,ZmetN\W#m+/WBo$J&,a$EA=;-]A*P?Z:?o,iDU<gl\hLbb1V.
%rFKV?.9mh?KR=2-4!0lR`#B#-?O6cjSNm,):`rP3mc/ifp*>X.E>.[dlN@O3b3clnK^e<uf`Pk,7)B?J6^tn.@j#L>Km+7DDA<3f
%OF?*=AuS,F[n,T*#E:?R1EmI$[1.-)XIQ;JKYXr)KNu-OS@&e=b:TV2<%63lM'GujWea)kc#3F6N\NmN&=TbZff;_W`i2:h)R6fK
%!pue%/$!<p@BC^s5`PE]BfN1ocmg&?4GpCH#?=H<WW6O&\;HLN.\11+Tu4fZ>"*>NQsQQ,`dZG@._0/UK4E;)/8)Q[je>(ObcOr<
%Ip<4gbZ]^CM"i"R8a?AM@n_9i-`7e(Q8+\iB'k<tf)`K]]GpF+D(rt31@76ZR[L:qC6V[Pgs2ckD34QuLR#quR#kgaZiNg1H.G8-
%-eq4F-B[,_+c@a-(<0pg5akk#A!7;R<BE19\mjA/M-XJf7(W9:Y/DhA[8Jj7XLoOEQHQPLd9cd_F?DHtA=Q\1WIcj'^`90t-/N/6
%FqVXR3;uCupkU@]qCW%j1;YsA(H2K`NYl7SP5<0["`/-mHULEHn&5Fdqa0%u-_%t701AT>mEgi/b,<eegAZ!Z*8*V^9f/*C?4e7(
%05B&"_kYT`fPDi"Qn`,36(oJm:(OdTZbDSCT.I%&a1K1nZDs6QaHf!j7WFR=p\f?!+"'iGg.iTa/TU?0I6sFa8Est;B?H#kaPr2q
%N?-ab*YPNT28"(d`VZ5Dq-rP*qmILqqKTU$9mGI$j4pWF]T);N\T4$S)P32k;6.(#Gos+*G"t,KOQPAHa"\Ir35B(9.Y(IXRU'KS
%kr00UDFV&RC\q\a(J?>L!$-c8AYjm-l=m!?G^D$=bJQiUff%YoE<n"0d2i&Ek\^K8/>a>bRpESUXqXI+O/]a(UadT5@MR["CS_",
%mQoQo2P];J[CNF.g:>9_DR,Kt2%rm5%/C+"4@mc"c9t<GG$0:^*Ycs<X<jX<LqG:jjc<..ZQ\A@g9E-fn1E^8k+OOqd5Un[B\0&n
%gRSsfNFq87k+F9?>eb1ZnrK!*gTL\^jmD^275OEVF*D1oC<A4#dmgA-oWoc,hZq>$=]URDg7*-MFL4CJ?-@$&A%g!?f7_IfaYmUA
%K!1UlJBrXRBE291YZhRAHO:C8Nl)=_&ok:G*Lr@`ktf6+6CFV&WQX.9G*YJC<uXpRqhIHP1F=opn^`em6`o5IF#q4$3DGeG"=))2
%A8^TM_8/T/qF5EY/RLA^X6hWpkQ`l@8R+-7^L,^JYVVHo05ZcLS*qYB6+%hMllm9^AJ=uiVlX+^)Z(m,Q?+K0:=.1dokO;CA`KW`
%RGT*N0?UtDZ3sdrIdN!YJe`RCl-S7B/i(XO?aWd<hi[:e:3p8/XX5dc^J<2e?V?KW]-<Yd'XFL&_lgMn8t2*pZ`ESV24se0ohgI&
%n=5WJ9"8HOR0*J*1=s3:3P.<tr`8WM@e4b@`Au<S'1ulG@[IlQlGLgi/k_A_]X.u,,V+lHb2ET^\gi[%0:fcl^3Nr$Pu.ZrIK>".
%4Q86oE[*.>6M:YjE?<IHN1HIY\^+h-fMrqHVSt:ZWANFbqI,$jjFP58/ls#0;@YFWY8XRk?q=mQFO,:l&)$1$o#p/Z:4YWa=?,GW
%1lM".^qfKRC;P"?c00_Cgs1R!B(mc6T#@3U_co/R"lm_o"9Le<_<>G.;"GlHc@-A>U&2kKeJN!<<c@X+!Ye7qS@hq<i]8"70TP+%
%0K<Kh-;(_8XP>qu*>%7Q\rs2G<pB=3`sDugdG*?9Y*SVI_E9j5I7;$<::Ub%oD%ep_o'Z\]!#tGVL.ke,^*HA\MW$!?>^0mgR">'
%ErN<ael8c`o:VtuTU+CQqr5;n4/9J1`0bBH8N0u%&k&.f5L^n<)sjU9-qG;h&m,^)qpJa"l*c=pVSkdGnhGR1A1E#KnK)4"JP*Od
%+E5#B=1ZpRE_Z?Hl1OK0"rt+W`ZicHF"q$\.1hr22>L]T:)q9jR^U42XN:u_as1g"h#+.JbLb>b%]j@Tc4o+8R=f$t,SC5,Q%scp
%Z5-1]f@P%#\b8tT#7W%2LHg=fVf%[^Pr.@.V:4)!3%.!%R^B#RWi=WlE"@tFadUj^/;9[Of2:A7N1JM(bR45"k/FL5bfY`@)=@4^
%:Ysl`Sm4AcIhLj<J^>tG8X):?B&ZU\g^3EOmuK\%9S,Nc46\-!kkp9T].LmlbhOX^j%a9fi/(q"\V2m/HiQcX_Q9/r3h(PXp0^V7
%Ri3Xbc[XECGc5jZ@ME5co-']3)0X?IRZsSTKk[NU+XH=-XK=Yb4RX0MK43]s;e;j_nSYP*WQ+Q#OVKY<idpU5M[q#E`uG5*#%R@G
%/F=`F-bJ..L^J5+G.6bL?)<n>;sUElHYLg)%#q0[I09(amZjrKWh-52,bE-;h&=o1)RAk32VD&s0(UtGB',Q%-Z&&68qu_,,6I"r
%5$t[$SGgH#pLtV^Mr$'o8*tD@-TV%U6rR$t&MW@SOmKuUPGA*l-S=c'5ATi/R'[SYs/a<YA"r[TDq=!-0kjd)]&&&uL!:OGL"5d^
%-M0RW;eD?(MBEQ%JO:2]a!X?Q3Ea!@dHOLiQ]P_0Hitj5m[I;bpn"EBmd5Fk`V1&Xp--a\H\-&D1%3S5^*eM=fW!E>]b&QH%6:`+
%\dtfCd@#>!>@ErT:=.pHHKF7e@F;`po3^8n:G]VR>]LLP7JU_=4q;VEo;$@A+It@Tr10&iWtP`5dA^N2OZ<q^P2NYLLtC@,RXh2_
%WN]QSO`9;"qTeVZ''HM\\6K?[5//]mnnIHtRs`#YQ2L:OaZJr<5A>UW(DH<f`E;S-EsqnYf*T^lFLOnd^kU>c):($Lq_pU2*P#)k
%jMda1YT\cd\T9.F>G@G>)C#k-g\3Sbn"<n3iT:lG/2]-?NpOoQUR&;`XOjCF]W[):6bF))+[5?e=0YS;c=,K"A=1mb/F9PrBgPfg
%euPIG<8;k:7lX>%CsjQSigUp\&&8N9G*0YJ.'\kP^9=b*3Ar/L@sOi`BAOQ\V#7<r21ZFkdZn?ja/\u,iP_9%n%.J42:r3$]74&e
%NgI1./snX`FRSuu`74PqOH=fd>pYa]H6.p.lNGu[&hhQjH5GEH0%]YaVLrelG_EfSR:bVnnHg?qDY&=u\5d[>l[OJGfO>mpF>GSs
%"[W8`F>GSs+mOD-dET*bLCh^,+.j^KTmDdT:T[Xcmm+27g#?3R8Wt7EOB^A2P$p-o\&OjcF7p:8Fe+nWgZ.[.a^Z])+,1`[8eX/>
%VDR)8I<n%M2pB-O=I[3T%_p!DHFeP*Va\NT*/M,:OY0Te4-9pSR[?o*I=P!I`*n`].N2!:Sh$hG+[\CMBi"WbVes@u8r&j?nB6JM
%+7j#1dkIK8D]P!g2IP8Af^U(2/*F`n=[!P]9&_t4EIpsqU\Yg;LA>/2,E0K^*KJ35Z4copf&=j9^\k'R3,O-^]FlU#%O]T?Vh?o*
%otBU;8kGLJM,#-p(F'T,)P=L;`uA'\mPf4D54;[dI/"ua?&ZZUb7JHKKq;&K)kubi33;+M1ucLURt8!F[jriHP$Ho>fh.S`1YXTj
%_W-dVE]ARWq(9Ns$A]cdO,C%4ADp>&!e\,NW<+%LZ&M$)STB5:YT**,UI)NQCJIg&aB8mA];iiBWi4XTPe6\En9n4BYeG&&PNUp'
%G5$D`%<be@\%@R?[_LoGEA8X6AM2hXG8F1#1`u1q]8MMJYHrSj/URm7n`mj)Vq>:E]K)6f?^jD-\.bp/^^$:hngV1HBeEfr(-WJ#
%2/E7T#bGgQ=R1$2SV+&Z\&%jn0L:F&(E-(lPQ*$T_1qS.krjE^YUDfiF/>t]p!)eI-X08c,$E92p*B$,>?,B%eZNopQsf[!5NPJB
%7&ZQK0OZ&-]K=)-E\&[=rSUFWE0A>^on1:s%Ns,BTDPAa"As4]h]E1J^at@'ol#ik"C^nq[TSpm_L?IV]YTr,$-u5gdfc+-Eb7PG
%P8>2anpLDo:0ql`Oe)I/onVquN%p\M8Z_6./S=`6@@qai-$!7@1IX3!EB+.do8&2A)>mE^IT,f.F#h>KR"FB51Bk&#G!jt&NADQ8
%'ZUne^T.MuP$"k1?#G(CCC1,KVY<W<RY"L;_T(MSX`+?RUn5jnSq*mgc&#_GR?`6@cofqqQWXLSaf`.tMW&(Efi:^FUXE0USTH>X
%NH.t/`SoKMM94\!3P0-G5m;MIbeZ7"m[;LFIVg0[=a8N>26rB?PU\bi9tp.B&6A-q%UO/Z\4KgbMT)A5V.*6&)?^sLgh9B6$m`F%
%ltD/&K5IGQpu,Ie%&eqLbh1sp(_#!CeGOaI8If(`SC[".M<lah"cG-Z)ZmMA3[<rnI)XD2H6%(XZg`jCs7JFK-i75To=nTJYccWH
%;*@oA60#UjnWt3,c*JI4B7Dpfg);2R5;LB$]oJ\QiFg-Ts*>^6q0fI!d=of]5]j[LU=:/alu(eK[SR!.QEqNW5PG]q)+72&gBLYn
%d>30ZY\7?k>KOa5C<.SmI5qF*C+1YQQ[>uo$K"h=S`]r6RaNA4#l*;Z.:Lj$s0!mM@82Sj6VaC*NP6W<9o1k1p7K]rUgoqFjIn#f
%?XAcmED;8i4aC1'21Cm]8;Qu&N_oom*)R$`=u6I?R9:%T_hd:tm8q%pWFd?&il#)84B(YZF$l+![paH[kM^qbU`XaU=2NX4UdH,'
%P\UtaYA?8/TI-8^g/CT6("?bX0Biuq8Q\DJ3m=3rP-BfX#lS0X$+GI-5;o'qF?=FK._n4o!@?uR?r`AkoB$"ZVW8u-M5r)9`&?:b
%[U<ec,+Il^o&jE(CpR[a;^h$BhtUcRT:'.S5F\(HK)!KW<(H=JkPnhU.H;8HW%5+"kWpo-G^Tc^:OBp&Eb0a_n:EpH*ah5BK3?)"
%N&4l[%HX&B4*,WI*Fl7/^,(N\TXjN^kSk6E03I6a:>2,Q!m>cF@pYd*E?`!t7->E_jJ4RLG3-@\T:C##5faT6"HkE#A)u`e%N*J$
%*"ndMlk4h#\W7P[VsjhEJnmXU)qcNgaDb?o;f/op7s8oIHsemn]C6CM^3?'%jPOFkf7jDR[V)2tGto:k^r_c(cdP+k+TY_qR@R9e
%o-kSDoOg*.cm-1%k_93O5pX[RVV[Dbg#6mMG?XeQKSgU$iqgf'!HMH\&GR]EB/0E\<%Q4:AA699',A(^k2$UYK4<o"E$,i!RYlg.
%nq`c_.@^gY.l8=lTaB#P,<7!;cO#sLdYa>@A1c'5]g)q/glUi;PoSECKWoOOPb6^HVUHHU<(h]6G8g&DjK/,H'(4Dc#fN:m47Sm<
%FX&^l^R\CTPt8B*kg#p(YmQ(V8t#HPVMt,/BA5;_SOJZgZ.X=qEG&.)o?V""'R(=(pls"$p:G)I@8V9MAd9(d#`177b0=eIbbY/j
%(H=epr.-]:5fbm68f7ItPWRhEg.hLE)';i=[:&UEM*F9Kju2Mh<?/]#jtN]r?QqGpB\;eOEZO5f(X7C2]k:'UHQW$*ODjP3(:F/A
%[eHUQOsS^`,PdBB;GMG^fJ@u_Ah@/NR?`'h7bk]N4gV/oQEKZ@Y-+AM\#H4)\ngh\!'_\nm-n+fZQjY3NZMRZ5_'"8@'Rs'2M!Hr
%5EMK3o6qQ3Hmdo+O]ut2#)'$uEc.Iqmth]*,#4YLil$[N<Z#$]W[=HLM0A=pXsTmCSFet-RqT:j,^.b.QgH^$b%-Yp/Z\gs?C=KE
%FiM?MP=]j+DmLd^=\n%fcuW2[.Q&;6T&Q6kHeD;FXCA.+5Fm3Tfsk]F(JK*4LTs'-;_;Y)N/SrWJslDZdtNC<A!MXV/pEK9b-OG'
%\6CJTWKd4m'hB;XG2Q3K1f*eYR'*k^\E.RNjgbZ^hr-mLH'6org:qsd4XIbZ[-M:jY1B@*]E[rD]f(I)=Ym!AYq2@"#$cqu4Np+@
%r&3Ior8j&rV!2a3Fnj.4?-fpe!E0LKC2jnn9)#I>V@q4O.`9=PQUaUM\]AsBai&8Z5)V<FSkEX1b,OqpM7"WEh\l.MUl2jb$FP+@
%KGf&tq6?Cf:L3lD>E#b2R$/k5Z"Hl1";d]fg`:hdX?\"MTGJbV2SH_FX(p$YP`00qC=N"3s'HEKoig1O8W0c<h<JVg?h5%?rRt7G
%h9$R=.i+V_paQBg`DF\%kR1>@Af\H_\5To4Afmg[;f8SSF=RrId@bY_Q?Z.h>!&)XfC6r$aE6k!UOa#uZ&-H%_-6XB9%dPi14HPn
%C@j)@IO*Cjh5OVt&fhI8;THL6+MEm_"q@C_:j:L"43Ml5_LQe=F=PIYoG-\"QLQAW!D1J3Or-$O4b\6.'`BJEC0l6"8$,a(:Qf5L
%qG[98$Fc0=o<m;9PijfWC9uSJ/O#_R0rH*fSapN@St[oY5HdBbFAR,)c/bi?7Y*=VcI\(7W3/he;:aYLS]t#&UoWSRD/7/Jl5!a=
%1\R-u0X%nKRa'J8FT,#^T(C8umVq0r^jbNai]4j=ck^DG="qh](U&\=XHqU!83D[:Q,lY`5:IU5ou7i1G0s8ub_BR8@Wb1Q%Ktt/
%l)eQiHZkZaq,dDZoj)chW)#r;g*:7W.\6\,/^mGFRsB5;!m1]eKh#E#9XDFmkG*6WX(mJ!Him3#&/psIq5Lc<RD]FfKQJE]\@TE3
%;!NWZh+lqOH[Vk$WX5Xc7$NXbC?MbXC*KZ'DS0Jqj$H[Z8P%Bq\A3$L4+riBj#%\V7IR,(QsR>!>rl<G(d'E%^.nl!#n]UIAS(Sl
%G3A9.fmkTYpZ`.8]oX4H`F7I.CfX#.V@.T:MiTHPSN!LnYOA`:3<gpW2DnSg$"h@00MCQNL-qNOF#S8NC3)R?*'\cIEp1a$?(.;?
%QnfDKOUrS]rr&_'fgU6[CKbfpV:;g8r'Qm5(mWN_>.Rh14Z;-P(*+ZM>AUm_/NPm:=#i:`caMAUM^_8F0L_,A%5-S8Bk)Xmbf.N0
%$O8I=^NRb610uGO0ic]CRWC4"e-B3DVgK<0fm\\LD+n#UHY?!ieJHlC>Z]k*j7Ok"'<BeI'):bNU!2&_PF@3&69[j!h=bNhm5>Ii
%.`kiUpr/2@d(_[&LQRKg"[gU!5=1R>5gAe.Rp8-k$LMq(7!D4e_;X)$-uQ_g&b256_IasYGA,)Oje@puUO4CoTV0JrH!$I/RECs;
%"4@,+UZ0j\1%B?44@.rF!dUr7k`hAiRd=R,C05!i#O^ntQ/i:5GX(7t[nX[MN'-*G=C.k.Zp?kP?^gYDX*^p/k7K@-s.q8VSUZ=k
%B"Es&jclsP;]bJM+&7slSaqS,N)jHIRMAo9h)G/AUCA^5PTk*IO_VOF]Ms]fR_l)`I,fF-X.$mTer[CV2VK:N'MHGB!IDi4:he$O
%4lSrjp3KbH8=gS@5n]%e=F;V($\$_@`!Dp'&.4T9,@8NAnqcbJ=D!sQa3fsV?B1/24!LI?`lmV6jB0rGK?)eE^K-jZE?8JY["4LD
%?X@(deK0d]oS:n7`2LmD)I!P-#sY/[RT!JoUZ\O\T%S>:*j\Yp@WfX/1`C3rB0K5#_-V+6--&Zbqt'*42@qZbe,/b%NAaV-Tit&L
%IWr."c,fRr)ruUaa%c?PF.(I44.3N0>JP>B3$AJ3bCA51h6PL7eR9Z2\KZdLdiF9s;ZCkrq2=m6kn7R&_QKt)khp>uV%@j\2e]OL
%k,i*WNt.CF(uIWE]G7+C,0QjpO#T#HcZb*Ra9D!p.fD>$dhWV-%na1aPq'.No5qiK+J`+oD2kh!3ISW1O:&;LQ*qTi7Uo?bGslQN
%_:156`i&^W,XLZkd+J`AkZ[-rW7+;KA/b:Dm+__DK`18mKFXQBY]=toD2WC>)iX<)8QH:GqV'ZfW%g"h[OBtAqlAt<p)KY(qk[h]
%EJ[s&].:0[eD54tec9II8P-/7WW]<V?n<NGS(M1TUJOQbIWG7;2Y6%)P%?aLjVHnKA-&E;D-D[cQO"5YkaShKDqeAG'-ukjG9tJ2
%b`f'gk^biS#g2;:9$=KVLL)`'3,*Mi..O"_TCJT*\mKs\jPXcoEbFoQDKK`:rDdL9!Ga!QhNkGJPLTD22W3<BJ4j&$gq)C/1D77J
%95UppSEa==f(c[_-,4"!BAl:Y=LL(Z&NNqT9b1:^P[l=lS!ne*]Iqd?j@97D\N7CfZ,Bqi=>l>hG$`Ie/Jg3,ND\D^r1aXn32'is
%)AK+$Q[@B&a9!f!_?AmC[U=!+Hsm4NR!e=4F<"TSHu!r!eg;6*8p$JMQBk07-eQl.ZTfIekRtFDWWm3q`:(PpPm`L*RbS#jG!K#"
%>;s&Y[bm:Oo^UJLQ?B',p"X]+`ih;b9[_d9.4n153g5YkXefU.6YE,qKbi.Ce7,eZ1J+c:I;)hbc>K-$R7*A'ZeHgJf@?oS.<;L@
%,>0^s#*USV09sWaKEuY@2pP@%GUUsc0Ik7%ZJ:DQC-L[/.!.9ZVC<T&'N46inKBY/X?ZE2bHK?cE15[Ph&scO7H_,SBjTF7:\ClO
%7H.@8E"njL*bj^`Ln["<dqG(.Y=pE'/sGR)j/X\qVNaYneRT<G0?m^Aou\Pjql)kSY$m`O;EDG_-1Y>`EpJW*U"["UC-X+OFp73Q
%buf"Q>n+n$>"r]0"MB%lP/"c;+fWu$9FCMreWrfpTPX)Y!pM%XM+XPc,gr*^RPIGpMpn"bo/ERGi8*LXYgoaFV:m\=qOfbXZ*l8[
%:]Mug*9''"_kF]fi`+@WL&,E9I7g8MO&n9p'1O$TSJ<[6/,fE`#p]13%`0pjE2RZ5BAqYeEY(l#'Qh]4a8pR5>!<=tK[J>eaQ;(p
%GIkaL]S/%[5#;kZEn<4^QG^dRM6]BejhRk/iqf#Z<-KBCPq%n$e\fJ'GaQ&PEiBdC/df!W&hR#6J6=4UjSI'[]?`YHX=_*sic307
%RMmOq8?jI9Qm.</f5O$Gs&(2RC2=OVNFLGrD#7A*)*Tk0OQ_g5\C^.WBi4LN4,(k3:E)_u/CEEd3(&19kDnL0(`htICM!fj/mY[E
%.>dEuf&Y6o.ro2gV,@&`AC7Jk,>46k-aJohE0+$nq'5XJ=_/@PM(Wn]>qUX#m2(%Xip,KC'd6O%<($X&#_<Pe3/`uP%Z5X[4DS#u
%:sVY*Pc^"(bY\g@,1ud8b+^4.;.u6j4,-pF?W._g8e*Qo<,Ah:f@T;pb"@&c*OEn_aPfl@,Tp=Xp$6Cik=%7GQ&4<:gJq2Ien(-*
%h+Fa7?kUJpeqe9V#h(?[A(?UWa_R>WZmOY(_l1F/H^;2j1X2._Aa=FT/SY;J'!0NF?-RM?0I]b-$WpNj^G]ei?9VU;X7!aZJ$.,%
%r)@[AMA(=pG@D:7+bWNZpr6NZ(tE8WPrjs&72%K:EjSr&8X'\['D1YbFtclr/d&]3/MbAeULi_I^[`ul'F<ikpdl-@d_@h+9`)4A
%Tn0c`pg$Jh*)+el8KmF"/=JbSUU@q-5X`r_asd=[W[9IcUnSfC%7WhlPT.6J;^9,<WGHYYj'cdU\1s=K90p00:B\.m=a4H"(Q\BS
%F9GN8c;/#9)bS6J3K5l![)d(]$0AV_Td31,\%&ig7(uk4QnuO<LZq>nZ+]/uP"uVM@G,J3f,=580=*)";RW2<@J!)cY"S5EbmD^]
%ooT"<4BrP5%I.(Z6A6-$1fDJmZ6luqj/a^^eHj^Ua`Hi/4gD;B<"o\:l5Qp6R4QPlf7C1F^/ua6j"2LG-=iVsXOkH9?2$6kqKpA4
%?-%=A,k30d)<$i0&^1ZsYjlcZ4R79>J!QO6,8\#+Tnc]CBo!eD'aE`:)![+FZX/-3S=NhL>rM$^cP8ZoPaKR;WNBPs\^p%coMrVO
%]W">Rd]n,:e4lLBXN4\nRnR)9'j%#44>mLXW`%]Ok2G[PP@mhC")_jsG%U9$ZJZZ=2ISkY^[mRs`C,M<6rQ^8.mIdDB-:S$U_<Na
%7b($>"AA-m.!,JSSLYjtV88Rk(jRRi(IV,0Q04:o$_P8rX$HH=B6,FFHRTS%)]3Tkr.sdY'k^VuPE8biX";$G`n'o4AaK)6E0CR*
%rj7bb`d,S9+j%5J&<[I<eNNY)a=OS6JQ@$A-I9:WAn`.[0^'8[BFX,r@;=tAi]sTq`tEsE),*nK09QOtJ30p`CKQ$;8HB4>bCN+h
%)3I-A8^&_W22Dm!jeh3r06LZ*eqL>+7:L_*7hMcQ^G$RIFd'jO__C,]e_B]5X6$CGj-,CG-8lR]:!>?#G&_I]HZaT.q!]4]e!Ks@
%0+KXQie-dV`1s<B3S0]`gqPs2N6B#W*@K>H1]FKElT.Ke"('-#kp%j2<p3[,fpt=TT8f-eh^P<S6>=;E7`t@2WML%7.d77Wm2TiI
%ZhtC]Z_-[.lAJp$6`MH40"8ohN=Gd(`c-*6p<n3nh5<qdO!TGk5*:-$1dA_4?&uRNiMYDrjbESAk3A->I<oDsg#LbJM334[lR4f+
%Up\bF=%I+9F7tnX#uHqob`f.H&H?jc/",5\VY\Qdf2,Ol_H<M%r**I+POm2)m)?k<\d%jcNuT@O*"_]pU,bm^NgS.!Hm3bAoT),@
%mYl/m-!R'-]Lp>k$]!>HC#@l#Apr7$Tq<3039j"4Rb06dKeFq9=:Ib<23Wo,E0*a'"ucb8b5=K12)lT2(fub4g5J?EE,/KQDCBSF
%BMhhF"/U7$0/563P4R]9MT^-8/NZ09koO&:i#9O2^6nL<)ho4:V?,T+K+US_e#L!3d700"Ng#a=D!4.>^.nJlAYl>^LO9oVb,S3W
%KAl-HI]c>N(bZ\o5QCIm.:8cq2OBO9-:OVR[]HG<OeK[peBudDp?]*">G[1).BC!opgT*B1"Msudm$+/FJk$/.1&^;4$A]9Xl-8n
%EpX0;9C1Cu<uRYD=+8Wd*F!!cpo<E.RRVHF$Oil'/9"B1jcuQ*T']!5=aNJX%0c^`Yo.9V<`k\O@r-"j&6P2:g$.;[E*m:ET@P^4
%;glKKDh9L_/]2=A]Qp(^h>kncOd9(5Mb%/'FPe&W!Z!ad<GLl[(PVJFUVuic=CQZ&Cu(':B%:K:74"*rF`)_rb>*4il;enQ4l(0u
%3s1L[k#^.>2jZ1]1J]A7k9j3k="@aDm,X,.4W`<*?B"$mT<*Mt;6[\+<$.+g($YIp-,6Q[JV[L?oZ+4-4:t-(X_[1>4m?;;$Z2^*
%5e#,:.5Q$GClf:4W5'-3IOP?=0FOM5$HX-A5J6MS(W'%Hk8OZ[=.3eXg?Q*iV.C4nV/";cTnf(Z?hb@P3i;#cN./#FWYK7*+i6!5
%M3gEJ&>)i8Ob&QIRWN=`JbZpOWOg<s.G`Ssb)Ic*NZ>C0TS!"l%JVP$W<A)!H[o^Vc/dt/.8*=E:sD#mKc06S#WFekf59at3[KGL
%e:-[0['B\LZG%!@+\Tt"gH2`QTaRsYd-eQ%Qp6Xd92e#bagH71,gYc1G8HLZ<WVNt8R@0#<[pq5l+CUD-=5m@M2UW!X-(T4\t1AQ
%4GL2#"*.>"kheMe4Yn;<">IHc.l#^=*MD'RX$AD-P:-P82S5Pnb.=1/Emb]8GTiS=PgpBE>BkA2L^7Ba?3RQG=1OOV$d;no_`L3!
%MIl(9O[F7L;kK0*d3Y/70Keu:Pr/=idZhu*3o0(`[t`2[Q5&2tM1@'t]/.<XJjRD*RN?sIhSj^WR)KN3#r9JZ<-%@$H,LKUYq+SE
%E0egH_t@6@_(DEK]DY(jQP]>MnmOISo;na-(/kgcf"3PU1VhX+"'.U40)-\!:%%\WINf1,1G@ui(W0s^UX+TFPmRB`TjRrXfMG]N
%C/bt=\M"%#N#TK.,aj`2mb.u7@-/X[&3XY<'83H4%1C/[cRo87Ug\S71*ISl_(SbA_/BsO#rPg=EYJ*DgTH>9csY,akC"KemcXmc
%K.Am0a.>sVKIeNfC>Ge'!=OSMW9=J8!4P)'g?7K=X3m34UDO84n#;.//0;GF"W\!(!Y)LOU&S-(Pn>1c=1XS"N68c5!Acab&hB[=
%B?>kW8i;L'<X0)=`#U8W#'3L^.NcLX\1S>S*,>lb3<YMmke;C[9?CO)\n+@33`/jH5l#"qOt`[\$rj's<f`%_.QC9FaLi:B8j`c6
%23oh0:4KEG>@Vl%.7.H*5A.-VJi3olgp,B`EL&U+agEl^KF1_=&$\OYP?t\ANX6EOh>+ouJAU_G5JJs[.F7*'?`!\`AkuRJ0tW4H
%0'oN4(;&&!m:1@j._h9KUeXK'X-YQf%]af8>+IL9..=&/A$`h+1cAU4P*U;'IoP!)%<A[15$UbW=<Tc,[oA?=?">hh=M5rn0Xf,2
%6c7GfNeI`Gk)Hf-XNnn'D_(AS:3@?^HcH3j2/*>.jB>OX-sj4!3`R%,F>.%)PAP$Pmq5.t]3.]]nstAJhk"RTl3JWh@S%/Lm#T<S
%_#P_+[K6PNnKKg([Nkgo_!&qOoT7QnK!Ke<*0DG*aHf:O75g:Mja4E;YIs<([ml&$fe3E2n8h20?CT2nbGMjcJ+eB'*GqZ*GI-am
%-LQD1UGrgfq^c:.)lg))=)-h</#=Z;2C)2B_muQqj?`M,"aH=glA]<F+M=BS@u&!T/j0X\jjYH?R-u&4j!*GIPpO:LU>:`\N@a<O
%^IVH9*sFm:GEK,`&n/#?f=j\jC.j5b[P&7o>9YWSk1Yha_LX10K`5^Q)]&ecW[n_h9>%BbK[l@oKcFmo,%7l*_I3>=I>`d/Q3bHM
%ITmTpeKr)+=FsQT[q@<'e5a:d+p#c[_jajkVI@d(Sif,!\L?lpIWuT;EVWDN5PfQ939+nH>8DZi">0&\P2b.S9>uf*Z,Cg'ip(.P
%AH1fQnm_@YoCsGZeea6[F49Zq\9rH=cORpXTLRhYe$t[;V8mFL\/j&Y'DQMEZe-f+D`O\13rTPP?Md(g>MkG)n_i=$kP-cmMc8F,
%/C*n_@f6&!*^;o\elThC04KYgWZ_;e>mja)s5u*C5=4U.G>SR0j`mq@dtMQla&^<$*S7B=+\6&S8^,[XdfBPn9=%?`JHg"]RcA]F
%Je]MtY$!BT15b%k+m?QOS"Ma$g1`H9F?Ma&(q/B7XbLD5>UA+.CtGPA=UrJ8>WAm(i0j6EnE?+j@(#S/?T6HTVm6oFV)d>9ill@!
%f.np%c8%62d(K]cN*s)Hs'(K`aYs=CGpTV:nhU4"N#Qcaqt-K^iS^]t=?7hPCr`kf6X8iF'@EDsCbt:<'/>Npi=?@Ge@9CJbIXU>
%2MbhddO^Ur5`2g:IWO%r?8NE,5hTPhZo.!WQ;Rd_G'"N#9@H%$+TcXNVh[sjAWDVITsi2,!oc644s5T:@7fpUQHeFd0nSXJ(Eh&^
%[WmULl8cGX=f1EiLnj9@5[83rp_7E$)J:+Pl52\'GXPM]$S]Jr8X+te*jpDa&i5'Yn-F4A9Oa0M!R*?B1EKO5j+Do2nW58G7$+rd
%_)g74l]u(R`h(1&@LlsT4IM)15D<pMIk3eBbP^%Wo><j_r3,Npha%2$@5M4QQCC)9qT8`qC47qP^(bohc0VtN%0lYFr88(:9L^%Y
%@n;,UnP-g_"%kdpkV[ZO^+)?"`Xa,0KJ5:DU4Zn6'!tF&hWt`ld=us`II:0b;>U%,)fI!NmcSn+Z2V6#otL66ir6X0rAT)liVT5A
%-:mV(qfFb4_io?EMe[_`"4)U%cb4\]DnanYDo-Q[q:8d7\),9?rO2FngKF%aGl+Vm>AjQ!pY^MHrVQ0]`.J;>pL=AJ!_'m"-6BrQ
%'CWWDhVE=B9)X@=rDq3nQYHAl@Gq$lEW2Gp%cGqp"6[eeG&QieO$CY%ju`%):m=_nhn',04ec9.]C/!Dq6Rt+Is5YumnHT+G@LJ'
%Nf<mUchm[L%;`e5Z!X]t^6Qn?=tTVeZIrS:5+cID\!_d`alFg44k&l7%q607(&..TqTfQZrR:]209(tj!QP3ehoKCpjJVtT#CQmi
%o=V!uBm81hG^MCJn]Jlo/Um?>P5'Pu^it)<GRV'sNPkqYQ1<CKrcoXt_Ec"=3fQI%P=].DlKd1@#XQA7md;H.?$L/\j,]'>IT6+3
%K:2Jk8!V,D*hT&0QSs0$dt5%oaM7T%IlTafD\j2gg=YV]n@[XoRD2VN;574WoN<qpf[mU%khQYdWcTk@p`V=e^&K-kPp-&AF*%@n
%@K(2(O8[V6dD%@jr20`(s01hg50NdCL&p@K$SVV"T*rg9"Fa;c<<c2P:dp0NWr0%:k5YBH&T.')7n:r`BT>=@3$8qA_,@K="CD[9
%'1df7.S*#$k<AfOp4EmkPNP-H#O&kbBkWP,[efJX/Je@XIeJ,P'5A1RK\m%HT(Mc0$,?j2i#@&-'gOI(qWE8e(@D:f74JW7^0`;d
%]A`mlO(S5Y1Xgi#EWV3uF2PoRm2tj<'ELDqDU\NS-:_F+N<n7b1nqHD!%LqcfK_>U2T?"`.Op#_dH,hh_,4tjq2T=8lMh&XUk4fg
%+kh8+C[Z#4qZ.$#l;p<B\Gg,pr*L<\"o[@5T##*"hg6$/DD?/XX(;\4"<UmDj5n#G[e7p-W%WHl.VNDl.pkRGs'p'-mn?KNK&@]+
%_,rspg$7s1lfqXcI;f,&&((OT`\i'".Y;SDcbBD[R^`bL-q$;tlXOFto?RqG\+uen;1=R?U>kAshpf$Z1'91..?oF(JV%FA!WL48
%W#r#F5rSSuIp$)E.f^q.rina*@kbiup-Z%f@r4ST)t\+-6kqDKJ29H8&"LS%(sDr%H0IOH(4S;Fp]gjV3[@lem+uDS8-[EIR/fg1
%n#qW["r%=arn>t7Ma6Y$^\-Mpd2PpiH6"DebQ5-OG\6([:=!=,s/h-7?P4UI:Cdo/#dcQ:)jlRZ%O0<OTWNu;c%A4-K&@fj*H"Hm
%BNZI%hgH:m%^nTZa4GndN.D2$!"9^H;@N7)$ts<29e,?b5kqPFkPdiRLu+&9@0hD6nh#Z2ft0Y]H%6Ot(;q5"!>7MI/j93jHXJ9d
%Q*$"M%/GF.L3SAjpdN"[oPh#Bipg!T#l'HM_;IbgY/]Mc2GuN5Xc/8l8)2uA+9,!/,>pN!+d[G-+nhBCqfTFh3/31'n2q<"!=6LH
%.3-,+N4uN]+gJj<#_`5lq@GX6(*F6B(]@/F?YJ4kHqC;qd>,^FIuaF&:IOLoKu=J`P]uX56ik4-QjII2Z1I^f#rs9WT,dL=!SPdB
%Io)#mZTpO\!=m=%F,HL\H@s4+[n"!%#@/5bcqO5-T7[7'[Y\D9<iA*IM0=ZUL+EdG^&*4eedL[&5"sa@SrMX>#I,LcF)"W1[%*@X
%*8Ui%E*l5YH26;[]_c].)..+gM--i\5(&uYa0i*58;PV=C2"/rd,12HGLsS%]c[9ss8&!&J+$TWme^@;6iMLZiB':!jc[Z6q>9&P
%pbM9=ridk85CE7GPQ+eYc50jcAF4lr\F[ZU[I84qn&I<Sr9/JbDgf(sKJ`:E#DGCFH0[s@+Je/W*Nf8#-T1>iAF5A35H&nk#:n:7
%kJ-uonp^B$q(MWYoLnX7CZ#'XO3i6'o\FG?]iTH;8F;FoNQ3^knCol>QH4XK1);A4SjCr48LCV'_0#7\&6+TRU$?!D<LO$QQ.RQ<
%Rf@F4L9J:hNkPi8jk.n[@&mnHM,8YAhSf`9jr=Qs;db);,Cf*p31RT?3;eO/rTND7lLWpmO6>`?M2Rjeh=Hidl][6:YrP)%L[,1"
%gFo?$&m31Ii#OJeBX.d*(ol?267sB%rsZ(Jb]+Zo8/N7(/`BG\1rg3b%Nj3#PD'uCQ=[(-0N[:pBuW;;F'W'r+WSbs*!*<eNm\r-
%\Ten)*HH0T)eIYs*.=0C9K4/2c/u0#&-nJn-QM]417]Cp3Z7*![quGUFZ_Z!isa79[T^0(.4_2?`+3Z-,#=/)'EK2/=WoXra4mK\
%XHZ"=NC43]ic$BsY9F!PQ_*l\5QF+.IO20AY@$=L.m.(.UR=0RK.KMKCeo$-,;5,\!Xsej3kTT")O81\6Y/Ql=JdLbcuanF9bp*=
%\P"LD3!s$p,`)T<POG2YNuWKlJHU#oZ'ZtD)DKc$$j#Amq9;$#1EGI(+GON4!of<>P9B):N7p\LSUm8r"f/"gOq+$KkDmLB>+Q:J
%e73T!Q>*jfr5#<bP5sR"j#ZeT!Q=WW?dP2j@-7UR3h4;!3JN;J3Vd<uW3kMeNkjaYe74=k<3Q6m##`(VFu&P0pGD"dO%(M1bRJU7
%Ti7D7//1P:>e1RlY*g]T'lT9$d,:e&J;pEQ=.[]6[s_+l(VNj1r.G.meTG+a!73aq5":n%8^+VS)*V,!+7a[q)C>aKTd9&I>Ile2
%><"%1M9%2!E1*S>=r1I@5Ra3T(=S6j4cZIk6sgFfrPk[W&_/%2;Fb3!">H%>5X!5qRH09C0V>>@r+gF3ES$pr(QpAK$TV,4+st=2
%5tiMjiOQ&u9G8W&6Ji)(Ouo74f*>Mr%pe()_UFOZ^rSqT)"V!S;i>.g2S">TQKnj5/R5f9JGW6cJ=T"UE+f;,`']]Y!-m:^&E!R5
%#Nb6*kjKi)1@D(U<M$NAZ9i@cNCbq/'M(Orr?EKo&CFFS@[/X(b92Qr,Wm]$>3ZJF%>a7(0-7A&&4,W2'c+6_kq.n,6BDi([D>,J
%5pgnplV1.l4lQKV>o'b8.?Ki@N&^TN4(?,1,f_9&Ptf=/JmaJq![<q9#QbV&pO:!nCiRj-gp7.-j;-ASLhi1?!sEWVNTFVOF.k>j
%PHKh@+gS$]\4NeFZq/gAKe#=K31_6#ZaW;RLjO.RK2Eaa]]j,GNFmd`)4_,A>`$07#$d`PB0a=0Iebrh9U^>00JIk$DakA$(k_Y<
%&eut\T>,&SS!\P:L!6jqd\X6_d?N%Q)-sc-Yc,Z+\Vc,2@ar^5Wi]q0'-+TsB">8Km=U9'.$W`=Ma$@;&m#<=8NTT5FTWPa=hdFQ
%g:Z9YF^-`34'mNfnIjWSXc):aN$7JSR%6gtNVXs]QoN$aA(\I=:tRFRf>:isL8Xu;W+1K=13gI(b2?\m"l$]]`]<@tFj?F7ceCC/
%/=8l;j6O)-'0VQ/&;Nc[@K_<Em=U!L"3>a6Xptl8cB?pqA4b"aD:__.+iT;#p.,BCN:3'T3'q;@Sg%]q7qIc+/8S7^_+(-0OLe+e
%_A)^:^]@h!dccA_C;lkKl`MCj9/0$,`rNCr9,btX.;$qNTs:*8!4<(=F>D%%06o6VTj*YVk`DoB2R"PC+t.\&8Y_HY6,jfcT'+8j
%$klUM-<+tT4p0!EN0Eu$HBLChjq_AX#FuM6SO"1G'JG'qNbR4qp&uK=R"5JB"p(.+($qYifYEkj5f)rb;jn[&SQ@OJkB.3aXHLt#
%#o4tSd3']7e?jn;+-,_"-7",GhSWCsd!6@BSQ)L+TpSnZb\L)2Lf2#,:uba,$5u`)Re<S&?Lcr<KiN\9'os]t&^e`0"UuBQk<#B)
%D+1+@pn4!IPH@^gUq2OW$8=*gYL3Zpa;QECo>jTQd;FfuL?2%jO3Yj3"piIedK(X7J@^;WJQq+WL7oh7*]Kpf`thU]:/RYgo0#po
%oLuZ]b&^lW</Ae_DP3prVNV7B.qA\?RQU()Q,7nr)hgU6l1p,b%#F.'WaNUX`[%DX<S/\t&.M#B#B@,JVcfU,X!,"S8;YE!(+h.`
%8jmOs3Np6jdtf:;"P&J;8`"utId4rm2_P1Mcp?A/!LVin_`VhkRYP2sig,!(\gNKKQ<//0Hr36dkhcSs%;V)@Wf-XtJ98\;"L9T;
%s0ndOg4F&h7O8$mL*-Ljdh-@9"tclq!Kmh#!&umd6i\dmPgS!l.3?i-opo!\BAaA!5DkYjjS2NA$]sHfDM/;5OR"f_M?3c_?m.NE
%Dd<Q.(P1bnes0F+jS+?'(Y06"6(uV^rCVgPB=A'i73(\b?<PSc+mRI(LB+4<GMo!UHJ=SZ*TX7%ke%O47lG%&QJ`N;BXf[sPL*cp
%Bc+R/U1Od!`<\lG)cK*$pO(&--)M.[e]s<5OAp)4#\mYF2JWd[.94J$[:q'?FSQ(ODO=u)[(bEC6:_R&/En('&Ig=DPK_H,ko6kG
%.P>qA%tNF?0!3TB#:^5Dj;d*D.fmlS^2q(5W]?t;!@*:6b\3-2T$\S%+b1#ndVm=gNq<eUj?W0RQn*Re4urU@0^9ei*SZPb\`(p.
%Mh4sTT`IUC#j4H%82phoe)4(T!:ZpkL@k[7;WtGr^QN"Wa$Tu=>1r0T_DhYAp=caS.)\ZN9Y-:;fb;hjAtZ-Ql'!nU=0TR;P9=m/
%0:5!2U?e,CcCg]4@'c+_Kb=M5g^3.?HHiZG8"E%.6`6.<&E,/Y5,V)L&[GdcN=$)+c&aJf-4OD+<#SabQqO2Hqiba8RJf_^2Wb_5
%%CeE%E=25J=&^(dU@W!,d<RP'ke%dN1iJ+-ZXKsq)$ZOe/]?=Y/<O&f4[+7@[<lqCGSN<ShYm:ZI.uX[nn.XYn0RM@O09%s6/c8M
%qU<X6#_H-0`tO;tjk8;d#&^IHgA~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial Black 304 3341 a Fg(Figura)22 b(1.)29 b(Ilustrac)-37
b(\270)983 3340 y(\230)974 3341 y(ao)23 b(da)g(pr)n(oposta)f(de)h(ar)n
(quitetura)g(para)h(mitigac)-37 b(\270)2663 3340 y(\230)2654
3341 y(ao)23 b(de)g(ataques)g(DDoS)p Black Black 409
3579 a Fn(Esta)h(arquitetura,)g(ilustrada)f(na)i(Figura)f(1,)30
b(\264)-38 b(e)24 b(composta)g(por)g(um)g(m)8 b(\264)-41
b(odulo)23 b(geral)h(chamado)109 3699 y(de)d(Gerenciador)h(de)g(T)m(r)6
b(\264)-39 b(afe)o(go)21 b(\(GT\),)h(que)f(n)6 b(\230)-39
b(ao)22 b(se)f(comunica)g(diretamente)g(com)h(a)f(aplicac)-38
b(\270)11 b(\230)-38 b(ao.)29 b(Note)109 3819 y(que)21
b(a)h(inst)6 b(\210)-39 b(ancia)21 b(do)h(banco)f(de)h(dados)27
b(\264)-39 b(e)22 b(representada)g(e)o(xterior)27 b(\036)-39
b(as)22 b(demais)f(inst)6 b(\210)-39 b(ancias)21 b Fj(cloud)p
Fn(,)g(pelo)109 3938 y(f)o(ato)h(de)h(que)g(este)g(banco)g(de)g(dados)f
(tamb)6 b(\264)-39 b(em)22 b(est)6 b(\264)-39 b(a)23
b(nas)g(nuv)o(ens,)f(e)h(pode)f(ser)h(acessado)g(de)g(qualquer)109
4058 y(outra)28 b(inst)6 b(\210)-39 b(ancia)27 b Fj(cloud)p
Fn(.)40 b(As)28 b(operac)-38 b(\270)13 b(\230)-41 b(oes)28
b(realizadas)g(pelo)g(m)8 b(\264)-41 b(odulo)27 b(GT)h(s)6
b(\230)-39 b(ao)28 b(di)n(vididas)e(em)h(quatro)109 4177
y(subm)8 b(\264)-41 b(odulos:)p Black 186 4378 a(i)p
Black 49 w(Analizador)24 b(de)h(T)m(r)6 b(\264)-39 b(afe)o(go)24
b(\(A)-11 b(T\);)p Black 158 4499 a(ii)p Black 49 w(Redirecionador)25
b(de)g(T)m(r)6 b(\264)-39 b(afe)o(go)24 b(\(R)-6 b(T\);)p
Black 131 4620 a(iii)p Black 48 w(Gerenciador)25 b(de)g
Fj(Blac)n(klist)g Fn(\(GB\);)p Black 139 4741 a(i)n(v)p
Black 48 w(Instanciador)f(de)h(No)o(v)n(a)f(Aplicac)-38
b(\270)10 b(\230)-39 b(ao)25 b(\(IN)m(A\).)409 4941 y(O)d(subm)8
b(\264)-41 b(odulo)20 b(A)-11 b(T)21 b(observ)n(a)h(o)g(comportamento)e
(do)i(tr)6 b(\264)-39 b(afe)o(go)22 b(de)g(entrada)g(para)g(a)h
(aplicac)-38 b(\270)10 b(\230)-38 b(ao)109 5061 y(de)19
b(forma)g(pr)8 b(\264)-41 b(o-ati)n(v)n(a.)27 b(F)o(ocando-se)19
b(na)g(estimati)n(v)n(a)e(de)i(quantidade)f(de)i(tr)6
b(\264)-39 b(afe)o(go)18 b(e)i(de)f(processamento)109
5180 y(no)g(servidor)l(,)h(este)g(subm)8 b(\264)-41 b(odulo)17
b(realiza)j(medic)-38 b(\270)10 b(\230)-38 b(ao)19 b(para)i(v)o
(eri\002car)f(a)g(e)o(xist)6 b(\210)-39 b(encia)18 b(de)i(um)f(poss)m
(\264)-30 b(\021v)o(el)18 b(ata-)109 5300 y(que)j(DDoS.)g(Caso)h
(detectado,)g(o)f(subm)8 b(\264)-41 b(odulo)19 b(IN)m(A)26
b(\264)-38 b(e)22 b(ati)n(v)n(ado.)27 b(O)22 b(IN)m(A)f(criar)6
b(\264)-39 b(a)22 b(uma)f(no)o(v)n(a)f(inst)6 b(\210)-39
b(ancia)109 5419 y(da)33 b(aplicac)-38 b(\270)11 b(\230)-39
b(ao)34 b(em)f(outro)g(servidor)g(na)g Fj(cloud)p Fn(,)i
(consequentemente)d(com)h(um)g(enderec)-38 b(\270)6 b(o)33
b(IP)h(dife-)109 5539 y(rente)308 5503 y Ff(1)345 5539
y Fn(.)c(Com)22 b(isso,)f(o)h(subm)8 b(\264)-41 b(odulo)20
b(R)-6 b(T)23 b(passar)6 b(\264)-39 b(a)22 b(a)g(tratar)g(todo)f(o)h
(tr)6 b(\264)-39 b(afe)o(go)22 b(de)g(entrada,)h(respondendo)p
Black 109 5634 1418 4 v 225 5695 a Fe(1)258 5726 y Fd(Com)28
b(a)f(criac)-32 b(\270)8 b(\230)-32 b(ao)27 b(da)g(no)o(v)n(a)g(inst)5
b(\210)-33 b(ancia)27 b(da)g(aplicac)-32 b(\270)8 b(\230)-33
b(ao,)29 b(a)f(antiga)j(\264)-33 b(e)28 b(desati)n(v)n(ada.)46
b(A)28 b(primeira)e(inst)5 b(\210)-33 b(ancia)27 b(da)g
Fc(cloud)109 5825 y Fd(servir)5 b(\264)-33 b(a)19 b(apenas)h(para)g
(redirecionar)d(o)k(tr)5 b(\264)-33 b(afe)o(go)p Black
Black Black eop end
%%Page: 6 6
TeXDict begin 6 5 bop Black Black 109 326 a Fn(com)29
b(um)g(redirecionamento)f(para)i(a)g(no)o(v)n(a)e(inst)6
b(\210)-39 b(ancia)29 b(da)h(aplicac)-38 b(\270)10 b(\230)-38
b(ao.)45 b(P)o(arte-se)30 b(do)f(princ)m(\264)-30 b(\021pio)28
b(que)109 446 y(atacantes)i(DDoS)g(n)6 b(\230)-39 b(ao)30
b(interpretam)f(as)h(respostas)g(obtidas)f(do)g(servidor)l(,)i(pois)e
(se)h(interpretarem,)109 566 y(sua)38 b(e\002ci)6 b(\210)-39
b(encia)45 b(\264)-39 b(e)39 b(reduzida.)72 b(Desta)38
b(maneira,)k(apenas)d(os)f(clientes)g(le)o(g)m(\264)-30
b(\021timos)35 b(ser)6 b(\230)-39 b(ao,)43 b(de)38 b(f)o(ato,)109
685 y(redirecionados)30 b(\036)-39 b(a)25 b(no)o(v)n(a)f(aplicac)-38
b(\270)10 b(\230)-38 b(ao.)409 854 y(Ao)39 b(redirecionar)g(algum)g
(cliente)g(para)h(a)f(no)o(v)n(a)f(inst)6 b(\210)-39
b(ancia,)42 b(o)d(enderec)-38 b(\270)6 b(o)39 b(deste)g(cliente,)109
974 y(seja)31 b(ele)h(le)o(g)m(\264)-30 b(\021timo)29
b(ou)i(n)6 b(\230)-39 b(ao,)33 b(ser)6 b(\264)-39 b(a)32
b(adicionado)f(em)g(uma)g Fj(blac)n(klist)p Fn(.)50 b(Os)31
b(clientes)g(presentes)g(nesta)109 1094 y(lista)k(ter)6
b(\230)-39 b(ao)37 b(suas)g(requisic)-38 b(\270)12 b(\230)-41
b(oes)37 b(descartadas,)i(a)e(\002m)g(de)g(reduzir)g(o)f(custo)g(de)h
(processamento)f(de)109 1213 y(respostas)f(no)h(servidor)-5
b(.)64 b(Entretanto,)38 b(como)e(o)g(cliente)g(le)o(g)m(\264)-30
b(\021timo)34 b(foi)i(informado)g(antes)g(de)g(seu)109
1333 y(enderec)-38 b(\270)5 b(o)27 b(entrar)g(nesta)f
Fj(blac)n(klist)p Fn(,)g(isso)g(n)6 b(\230)-39 b(ao)26
b(ser)6 b(\264)-39 b(a)27 b(um)f(problema,)h(pois)e(ele)i(j)6
b(\264)-39 b(a)27 b(ter)6 b(\264)-39 b(a)27 b(acesso)32
b(\036)-39 b(a)27 b(no)o(v)n(a)109 1452 y(inst)6 b(\210)-39
b(ancia)29 b(en)l(viando)h(no)o(v)n(a)f(requisic)-38
b(\270)10 b(\230)-38 b(ao.)47 b(Ser)6 b(\230)-39 b(ao)31
b(empre)o(gadas)f(entradas)g(com)g(tempo)f(de)i(v)n(alidade)109
1572 y(nesta)36 b Fj(blac)n(klist)p Fn(,)j(dado)e(que)g(respostas)f
(podem)g(ser)i(perdidas.)66 b(O)37 b(tempo)g(de)g(v)n(alidade)f(na)h
(lista)109 1691 y(aumentar)6 b(\264)-39 b(a)37 b(e)o(xponencialmente,)j
(para)e(diminuir)e(ainda)i(mais)f(a)h(sobrecar)n(ga.)70
b(Cabe)38 b(ao)g(GB,)g(o)109 1811 y(papel)25 b(de)g(adicionar)g(e)h
(gerenciar)g(a)f(sa)m(\264)-30 b(\021da)25 b(de)h(enderec)-38
b(\270)6 b(os)24 b(de)i(clientes)k(\036)-38 b(a)25 b
Fj(blac)n(klist)p Fn(,)f(assim)g(como,)h(o)109 1930 y(tempo)f(de)h(v)n
(alidade)f(da)g(entrada)i(que)e(aumenta)h(e)o(xponencialmente.)409
2100 y(Contudo,)36 b(para)f(pre)n(v)o(enir)f(que)h(este)f(controle)h
(impec)-38 b(\270)t(a)35 b(o)g(acesso)g(de)f(clientes)h(le)o(g)m(\264)
-30 b(\021timos)109 2219 y(nas)34 b(pr)8 b(\264)-41 b(oximas)33
b(requisic)-38 b(\270)13 b(\230)-41 b(oes,)37 b(o)d(cliente,)j(ao)d
(ser)h(direcionado)f(para)h(a)g(no)o(v)n(a)e(inst)6 b(\210)-39
b(ancia,)36 b(ter)6 b(\264)-39 b(a)35 b(este)109 2339
y(enderec)-38 b(\270)5 b(o)33 b(armazenado)g(na)g(forma)f(de)h
Fj(cookie)g Fn(em)f(sua)h(m)6 b(\264)-39 b(aquina.)53
b(Este)33 b(procedimento)e(garante)109 2458 y(que)23
b(apenas)h(clientes)e(le)o(g)m(\264)-30 b(\021timos)21
b(tenham)i(conhecimento)f(do)i(no)o(v)n(o)e(enderec)-38
b(\270)6 b(o)23 b(da)g(aplicac)-38 b(\270)11 b(\230)-38
b(ao,)23 b(dado)109 2578 y(que)28 b(atacantes)h(de)f(DDoS)h(n)6
b(\230)-39 b(ao)28 b(ir)6 b(\230)-39 b(ao)28 b(manter)g
Fj(cookies)p Fn(.)42 b(Por)28 b(\002m,)i(tal)e(processo)g(de)g
(reinstanciac)-38 b(\270)10 b(\230)-38 b(ao)109 2698
y(de)21 b(aplicac)-38 b(\270)11 b(\230)-39 b(ao)21 b(e)h
(redirecionamento)e(de)h(tr)6 b(\264)-39 b(afe)o(go)21
b(pode)g(ser)g(repetido)g(recursi)n(v)n(amente,)f(at)6
b(\264)-39 b(e)22 b(um)e(dado)109 2817 y(n)8 b(\264)-41
b(umero)24 b(m)6 b(\264)-39 b(aximo)23 b(de)i(redirecionamentos.)p
Black 109 3052 a Fi(4.)p Black 49 w(Implementac)-42 b(\270)854
3051 y(\230)845 3052 y(ao)109 3215 y Fn(P)o(ara)26 b(a)g(implementac)
-38 b(\270)9 b(\230)-38 b(ao,)26 b(inicialmente)e(foram)h(estudadas)h
(as)f(possibilidades)f(de)h(servic)-38 b(\270)5 b(os)26
b Fj(cloud)p Fn(,)109 3335 y(como)34 b(o)g(Amazon,)j(Linode)d(e)h(o)g
(Heroku.)60 b(Dentre)35 b(estes,)i(o)d(que)h(se)g(apresentou)f(como)g
(o)h(mais)109 3454 y(adequado)21 b(para)h(a)h(implementac)-38
b(\270)9 b(\230)-39 b(ao)22 b(pr)6 b(\264)-39 b(atica)22
b(de)g(um)f(prot)8 b(\264)-41 b(otipo)20 b(operacional)i(de)f(nosso)g
(mecanismo)109 3574 y(foi)36 b(o)h(Heroku.)68 b(O)37
b(Heroku)42 b(\264)-38 b(e)37 b(uma)g(soluc)-38 b(\270)9
b(\230)-38 b(ao)37 b(em)g Fj(cloud)i Fn(que)e(oferece)h(a)g
(infra-estrutura)f(como)109 3693 y(servic)-38 b(\270)5
b(o)35 b(de)h(hospedagem,)h(possibilitando)c(desen)l(v)n(olvimento)g
(em)i(frame)n(w)o(orks)g(como)g Fj(django)p Fn(,)109
3813 y Fj(node)o(.js)e Fn(e)i Fj(Ruby)f(on)g(Rails)p
Fn(.)59 b(Dentre)35 b(estas)f(alternati)n(v)n(as,)h(a)g(implementac)-38
b(\270)9 b(\230)-39 b(ao)35 b(ser)6 b(\264)-39 b(a)35
b(realizada)g(em)109 3932 y Fj(Ruby)d(on)g(Rails)f Fn(\(RoR\),)j(por)e
(maior)g(e)o(xperi)6 b(\210)-39 b(encia)32 b(de)h(membros)e(do)h(grupo)
g(e)h(pela)f(v)o(ersatilidade)109 4052 y(da)f(linguagem,)h(que)g(se)g
(mostra)e(mais)h(direta)h(para)g(a)g(implementac)-38
b(\270)9 b(\230)-38 b(ao,)33 b(embora)e(qualquer)h(outro)109
4171 y Fj(fr)o(ame)o(work)25 b Fn(e)g(linguagem)f(pudessem)f(ser)j
(utilizados.)409 4341 y(A)37 b(arquitetura)g(do)g Fj(fr)o(ame)o(work)g
Fn(RoR)44 b(\264)-39 b(e)38 b(completamente)e(baseada)h(no)g(paradigma)
g Fj(Mo-)109 4460 y(del)26 b(V)-7 b(ie)o(w)26 b(Contr)l(oler)h
Fn(\(MVC\),)g(f)o(acilitando)f(a)h(or)n(ganizac)-38 b(\270)10
b(\230)-38 b(ao)26 b(dos)g(m)8 b(\264)-41 b(odulos)25
b(de)i(nosso)e(mecanismo.)109 4580 y(Desta)k(forma,)h(a)f(estrutura)g
(do)f(c)8 b(\264)-41 b(odigo)29 b(escrito)f(em)h(RoR)36
b(\264)-39 b(e)29 b(composta)f(de)h(componentes)f(de)h(Mo-)109
4699 y(delo,)f(de)g(V)-6 b(is)6 b(\230)-39 b(ao)28 b(e)g(de)g
(Controle.)40 b(Componentes)27 b(de)h Fp(modelo)g Fn(correspondem)g
(aos)g(dados)f(-)i(como)109 4819 y(eles)35 b(s)6 b(\230)-39
b(ao)36 b(armazenados,)i(obtidos,)f(correlacionados.)63
b(A)35 b(parte)h(de)g Fp(vis)2724 4818 y(\230)2716 4819
y(ao)e Fn(corresponde)41 b(\036)-38 b(a)36 b(parte)109
4939 y(gr)6 b(\264)-39 b(a\002ca)27 b(da)g(aplicac)-38
b(\270)11 b(\230)-39 b(ao.)36 b(Finalmente,)27 b Fp(contr)n(olador)n
(es)g Fn(realizam)g(a)g(manipulac)-38 b(\270)10 b(\230)-39
b(ao)27 b(de)f(dados)h(como)109 5058 y(um)33 b(todo,)h(correspondem)39
b(\036)-39 b(a)34 b(parte)g(l)8 b(\264)-41 b(ogica)33
b(e)g(funcional)g(do)g(c)8 b(\264)-41 b(odigo.)56 b(Eles)33
b(funcionam)g(tamb)6 b(\264)-39 b(em)109 5178 y(como)29
b(uma)h(ponte)f(entre)h(modelo)f(e)i(vis)6 b(\230)-39
b(ao,)30 b(para)h(que)f(os)f(dados)h(transitem)f(em)h(ambos)f(os)h
(senti-)109 5297 y(dos.)409 5467 y(Desta)23 b(maneira,)h(o)g(subm)8
b(\264)-41 b(odulo)21 b(analizador)j(de)g(tr)6 b(\264)-39
b(afe)o(go)23 b(\(A)-11 b(T\))24 b(do)f(nosso)g(mecanismo)g(cor)n(-)109
5586 y(responder)6 b(\264)-39 b(a)23 b(a)g(um)f(controlador)-5
b(.)29 b(Uma)22 b(requisic)-38 b(\270)10 b(\230)-38 b(ao)28
b(\036)-38 b(a)23 b(aplicac)-38 b(\270)10 b(\230)-38
b(ao)23 b(ser)6 b(\264)-39 b(a)23 b(interceptada)g(por)f(esse)h(com-)
109 5706 y(ponente)i(de)g(controle,)h(que)f(realizar)6
b(\264)-39 b(a)27 b(a)f(medic)-38 b(\270)10 b(\230)-39
b(ao)26 b(de)g(algumas)e(estat)m(\264)-30 b(\021sticas)25
b(e)h(dados,)f(e)h(imediata-)109 5825 y(mente)18 b(em)h(se)o(guida,)g
(acionar)6 b(\264)-39 b(a)20 b(o)f(controlador)f(que)h(corresponde)g
(ao)g(funcionamento)f(da)h(aplicac)-38 b(\270)10 b(\230)-38
b(ao)p Black Black eop end
%%Page: 7 7
TeXDict begin 7 6 bop Black Black 109 326 a Fn(em)22
b(si.)30 b(De)n(v)o(e-se)22 b(notar)l(,)i(contudo,)e(que)h(o)g(tempo)f
(despendido)f(neste)i(controlador)28 b(\264)-39 b(e)21
b(\264)-30 b(\021n\002mo,)28 b(\264)-39 b(e)24 b(ape-)109
446 y(nas)f(o)g(tempo)f(necess)6 b(\264)-39 b(ario)23
b(para)g(processar)h(algumas)e(equac)-38 b(\270)14 b(\230)-42
b(oes)23 b(e)h(salv)n(ar)e(estes)h(dados)f(de)i(controle.)109
566 y(Caso)i(se)g(perceba)g(que)g(o)g(tempo)f(afetar)6
b(\264)-39 b(a)27 b(o)e(funcionamento)g(do)g(nosso)g(mecanismo,)g(este)
h(proces-)109 685 y(samento)e(pode)g(ainda)h(ser)g(realizado)g(em)g(se)
o(gundo)e(plano.)409 854 y(Caso)29 b(o)g(A)-11 b(T)29
b(detecte)h(a)f(e)o(xist)6 b(\210)-39 b(encia)28 b(de)h(um)g(poss)m
(\264)-30 b(\021v)o(el)27 b(ataque,)j(uma)f(no)o(v)n(a)f(inst)6
b(\210)-39 b(ancia)29 b Fj(cloud)109 974 y Fn(de)n(v)o(e)39
b(ser)h(criada)h(pelo)f(subm)8 b(\264)-41 b(odulo)38
b(IN)m(A)i(e)g(a)h(aplicac)-38 b(\270)10 b(\230)-38 b(ao)40
b(replicada)h(para)f(esta,)k(paralisando)c(a)109 1094
y(aplicac)-38 b(\270)10 b(\230)-38 b(ao)34 b(original.)58
b(O)34 b(processo)g(de)h(reinstanciac)-38 b(\270)10 b(\230)-39
b(ao)35 b(da)f(aplicac)-38 b(\270)11 b(\230)-39 b(ao)35
b(pode)f(ser)g(obtido)f(de)h(duas)109 1213 y(maneiras.)51
b(A)32 b(abordagem)g(mais)f(simples)f(seria)i(a)g(pr)6
b(\264)-39 b(e)33 b(e)o(xist)6 b(\210)-39 b(encia)30
b(de)i(uma)g(se)o(gunda)f(aplicac)-38 b(\270)11 b(\230)-39
b(ao,)109 1333 y(sem)30 b(nenhum)f(recurso)i(alocado.)48
b(Entretanto,)31 b(embora)g(esta)f(inst)6 b(\210)-39
b(ancia)30 b(estaria)h(pronta)f(para)h(que)109 1452 y(seus)h(processos)
f(sejam)h(escalados)h(assim)e(que)h(necess)6 b(\264)-39
b(ario,)34 b(esta)f(abordagem)f(n)6 b(\230)-39 b(ao)32
b(se)h(comporta)109 1572 y(adequadamente)h(no)g(cen)6
b(\264)-39 b(ario)34 b(de)h(reinstanciac)-38 b(\270)10
b(\230)-38 b(ao)34 b(recursi)n(v)n(a.)58 b(A)35 b(se)o(gunda)e
(abordagem)h(en)l(v)n(olv)o(e)109 1691 y(a)e(hospedagem)f(do)h(projeto)
g(em)g(um)f(reposit)8 b(\264)-41 b(orio)31 b(do)h(GitHub,)h(que)f
(poder)6 b(\264)-39 b(a)32 b(ser)g(clonado)g(para)h(a)109
1811 y(especi\002cac)-38 b(\270)11 b(\230)-38 b(ao)22
b(da)f(se)o(gunda)g(inst)6 b(\210)-39 b(ancia)21 b(a)h(partir)g(de)g
(dentro)f(do)g(c)8 b(\264)-41 b(odigo)21 b(Ruby)-6 b(.)30
b(Contudo,)21 b(esta)h(etapa)109 1930 y(da)j(implementac)-38
b(\270)9 b(\230)-39 b(ao)25 b(ainda)g(requer)g(mais)f(estudos)g(para)i
(melhor)e(detalhamento.)409 2100 y(Uma)f(particularidade)h
(interessante)f(do)g Fj(fr)o(ame)o(work)i Fn(RoR)30 b(\264)-39
b(e)24 b(a)g(e)o(xist)6 b(\210)-39 b(encia)23 b(de)h(um)f(arqui)n(v)n
(o)109 2219 y(de)36 b(con\002gurac)-38 b(\270)11 b(\230)-38
b(ao)36 b(a)h(cerca)h(das)e(rotas.)65 b(A)37 b(implementac)-38
b(\270)9 b(\230)-39 b(ao)37 b(do)f(subm)8 b(\264)-41
b(odulo)34 b(redirecionador)j(de)109 2339 y(tr)6 b(\264)-39
b(afe)o(go)32 b(\(R)-6 b(T\))33 b(ser)6 b(\264)-39 b(a)33
b(realizada)g(em)f(cima)g(deste)g(arqui)n(v)n(o,)h(chamado)f
Fj(r)l(outes.rb)p Fn(.)51 b(P)o(ara)33 b(a)g(e)o(xibic)-38
b(\270)9 b(\230)-38 b(ao)109 2458 y(de)23 b(qualquer)g(p)6
b(\264)-39 b(agina)22 b(din)6 b(\210)-39 b(amica)23 b(da)g(aplicac)-38
b(\270)11 b(\230)-39 b(ao,)23 b(o)g(arqui)n(v)n(o)f(de)i(rotas)k(\264)
-39 b(e)24 b(ine)n(vita)n(v)o(elmente)c(chamado.)109
2578 y(Desta)g(forma,)26 b(\264)-38 b(e)20 b(o)g(local)g(ideal)g(para)h
(a)g(adic)-38 b(\270)10 b(\230)-38 b(ao)20 b(de)g(clientes)g(na)g
Fj(blac)n(klist)h Fn(e)f(respecti)n(v)n(a)g(\002ltragem)g(dos)109
2698 y(clientes)27 b(bloqueados)g(pelo)h(gerenciador)h(da)f
Fj(blac)n(klist)h Fn(\(GB\).)g(No)f(redirecionamento)f(do)h(tr)6
b(\264)-39 b(afe)o(go)109 2817 y(para)29 b(uma)f(no)o(v)n(a)f(inst)6
b(\210)-39 b(ancia,)28 b(uma)g(entrada)h(ser)6 b(\264)-39
b(a)29 b(adicionada,)g(bloqueando)e(o)h(cliente)g(em)h(quest)6
b(\230)-39 b(ao)109 2937 y(por)24 b(determinado)g(tempo.)409
3106 y(A)34 b Fj(blac)n(klist)h Fn(em)f(si)g(e)h(di)n(v)o(ersas)d
(outras)i(v)n(ari)6 b(\264)-39 b(av)o(eis)33 b(de)i(controle)f(ser)6
b(\230)-39 b(ao)34 b(gerenciadas)h(pela)109 3226 y(base)i(de)g(dados)f
(em)h Fj(cloud)i Fn(Redis.)66 b(Esta)37 b(base)g(de)g(dados)42
b(\264)-39 b(e)37 b(f)o(amosa)g(pela)g(sua)g(simplicidade)e(e)109
3345 y(e\002ci)6 b(\210)-39 b(encia.)35 b(Ela)25 b(basicamente)h
(mapeia)g Fp(cha)n(v)o(e)g Fn(e)g Fp(dado)p Fn(,)h(oferecendo)f(tempos)
f(de)h(escrita)g(e)g(leitura)109 3465 y(correspondentes)42
b(\036)-39 b(a)38 b Fj(hashing)p Fn(.)66 b(Desta)37 b(forma,)j(uma)d
(possibilidade)e(para)j(a)f(implementac)-38 b(\270)9
b(\230)-38 b(ao)37 b(da)109 3584 y Fj(blac)n(klist)43
b Fn(\264)-39 b(e)37 b(o)g(uso)g(do)f(Redis,)k(utilizando)c(o)h(IP)g
(de)h(um)e(cliente)h(como)f(cha)n(v)o(e,)k(e)d(o)g(tempo)f(que)109
3704 y(este)30 b(cliente)g(permanecer)6 b(\264)-39 b(a)31
b(bloqueado)f(como)g(dado.)47 b(Por)30 b(ser)l(,)i(abstratamente,)f(um)
f(mecanismo)109 3823 y(de)h Fj(hashing)p Fn(,)h(o)f(tempo)g(de)g
(checagem)h(por)f(um)g(cliente)g(ser)6 b(\264)-39 b(a)32
b(O\(1\),)h(o)e(que)37 b(\264)-38 b(e)32 b(e)o(xcelente)f(para)h(um)109
3943 y(mecanismo)23 b(que)i(v)n(ai)f(\002ltrar)i(todo)e(tr)6
b(\264)-39 b(afe)o(go)24 b(que)h(che)o(ga)30 b(\036)-39
b(a)25 b(aplicac)-38 b(\270)11 b(\230)-39 b(ao.)409 4112
y(Por)39 b(\002m,)i(um)d(aspecto)h(interessante)f(do)g(uso)g(do)g
(Heroku)g(s)6 b(\230)-39 b(ao)39 b(os)f(di)n(v)o(ersos)f
Fj(addons)g Fn(j)6 b(\264)-39 b(a)109 4232 y(customizados)29
b(para)i(o)f(uso)g(nele.)49 b(Em)30 b(particular)l(,)i(e)o(xiste)d(um)h
Fj(addon)g Fn(chamado)g Fj(Ne)o(w)i(Relic)e Fn(que)114
4351 y(\264)-38 b(e)31 b(designado)36 b(\036)-38 b(a)32
b(coleta)f(de)g(di)n(v)o(ersas)f(m)6 b(\264)-39 b(etricas)31
b(para)h(a)g(an)6 b(\264)-39 b(alise)31 b(de)h(desempenho.)49
b(Com)31 b(seu)h(uso,)109 4471 y(ser)6 b(\264)-39 b(a)37
b(poss)m(\264)-30 b(\021v)o(el)35 b(saber)i(com)g(precis)6
b(\230)-39 b(ao)37 b(o)f(que)h(se)g(passa)g(em)f(todas)h(as)g(inst)6
b(\210)-39 b(ancias)35 b Fj(cloud)k Fn(de)e(uma)109 4590
y(perspecti)n(v)n(a)f(diretamente)h(interna)43 b(\036)-39
b(a)38 b(esta)g Fj(cloud)p Fn(.)69 b(Assim,)39 b(poderemos)e(coletar)h
(dados)f(n)6 b(\230)-39 b(ao)37 b(s)8 b(\264)-41 b(o)109
4710 y(da)39 b(perspecti)n(v)n(a)g(e)o(xterna)45 b(\036)-39
b(a)40 b Fj(cloud)p Fn(,)j(perspecti)n(v)n(a)38 b(de)i(usu)6
b(\264)-39 b(ario,)42 b(como)d(tamb)6 b(\264)-39 b(em,)43
b(de)c(perspecti)n(v)n(a)109 4830 y(interna)30 b(\036)-39
b(a)25 b(ela.)p Black 109 5064 a Fi(5.)p Black 49 w(Descric)-42
b(\270)590 5063 y(\230)581 5064 y(ao)27 b(da)g(A)-11
b(v)o(aliac)-42 b(\270)1202 5063 y(\230)1193 5064 y(ao)109
5227 y Fn(Uma)26 b(soluc)-38 b(\270)10 b(\230)-38 b(ao)27
b(para)g(mitigar)e(ataques)i(pode)g(ser)g(a)n(v)n(aliada)f(quanto)g(a)h
(sua)g(capacidade)h(de)f(detectar)109 5347 y(ataque,)22
b(assim)e(como,)h(a)h(de)f(reagir)h(a)g(ele.)29 b(Outra)22
b(abordagem)f(para)h(a)n(v)n(aliar)f(uma)f(soluc)-38
b(\270)10 b(\230)-38 b(ao)27 b(\264)-39 b(e)22 b(quanto)109
5467 y(a)g(sua)g(capacidade)g(de)h(manter)e(as)h(condic)-38
b(\270)13 b(\230)-41 b(oes)22 b(normais)f(de)h(funcionamento)f(do)h
(cen)6 b(\264)-39 b(ario)22 b(de)g(ataque,)109 5586 y(mesmo)35
b(sob)h(ataque.)66 b(Se)o(gundo)36 b([Bellaiche)25 b(and)g(Gre)o(goire)
f(2008])42 b(\264)-39 b(e)37 b(importante)f(para)h(um)f(sis-)109
5706 y(tema)25 b(de)h(defesa)h(estimar)e(di)n(v)o(ersos)f(aspectos)h
(como:)32 b(custo)25 b(de)h(desen)l(v)n(olvimento,)e(desempenho,)109
5825 y(de)o(gradac)-38 b(\270)10 b(\230)-38 b(ao)25 b(do)f(servic)-38
b(\270)5 b(o)25 b(e)g(custo)f(de)h(rob)n(ustez.)p Black
Black eop end
%%Page: 8 8
TeXDict begin 8 7 bop Black Black 409 326 a Fn(A)42 b(maioria)g(das)g
(m)6 b(\264)-39 b(etricas)42 b(para)h(calcular)g(o)f(impacto)g(de)g
(ataques)h(DDoS)f(est)6 b(\230)-39 b(ao)42 b(rela-)109
446 y(cionadas)36 b(com)h(as)g(medidas)e(de)i(e\002ci)6
b(\210)-39 b(encia)38 b(dos)e(padr)8 b(\230)-41 b(oes)37
b(de)g(defensa)g([Sachde)n(v)n(a)25 b(et)g(al.)31 b(2009)o(].)109
566 y(Atualmente,)h(s)6 b(\230)-39 b(ao)31 b(consideradas)g(estrat)6
b(\264)-39 b(egias)31 b(de)h(medic)-38 b(\270)10 b(\230)-39
b(ao)32 b(da)g(quantidade)e(de)i(tr)6 b(\264)-39 b(afe)o(go)31
b(le)o(g)m(\264)-30 b(\021timo)109 685 y(passando)38
b Fp(pela)h(canal)g(com)h(e)f(sem)g(ataque)h(\(N)n(A)l(O)e(ENTENDI\))p
Fn(.)j(Outros)d(trabalhos)g(tem)h(se)109 805 y(concentrado)33
b(na)h(medida)g(do)f(tempo)g(de)h(resposta)g(para)g(a)n(v)n(aliar)f(a)i
(e\002ci)6 b(\210)-39 b(encia)34 b(de)g(uma)g(soluc)-38
b(\270)10 b(\230)-39 b(ao.)109 924 y([Mirk)o(o)o(vic)23
b(et)i(al.)31 b(2007)o(])26 b(utiliza)f(um)g(modelo)g(baseado)h(em)g
Fj(thr)l(eshold)h Fn(como)e(m)6 b(\264)-39 b(etrica)26
b(para)g(aferir)109 1044 y(o)32 b(impacto)f(de)i(DDoS.)f(Quando)g(uma)f
(medida)h(e)o(xcede)g(este)h Fj(thr)l(eshold)p Fn(,)f(ocorre)h(a)g
(indicac)-38 b(\270)10 b(\230)-38 b(ao)32 b(da)109 1163
y(baixa)24 b(qualidade)h(do)f(servic)-38 b(\270)5 b(o.)31
b(Esta)24 b(medida)30 b(\264)-39 b(e)25 b(indicada)g(para)g(aplicac)-38
b(\270)14 b(\230)-42 b(oes)25 b(\002m-a-\002m)g(como)g(http.)409
1333 y(A)36 b(etapa)h(de)f(a)n(v)n(aliac)-38 b(\270)10
b(\230)-38 b(ao)36 b(do)h(nosso)e(mecanismo)g(consistir)6
b(\264)-39 b(a)36 b(principalmente)f(na)h(an)6 b(\264)-39
b(alise)109 1452 y(da)42 b(capacidade)h(do)g(servidor)f(em)g(atender)h
(no)o(v)n(as)e(requisic)-38 b(\270)13 b(\230)-42 b(oes.)84
b(Se)43 b(o)g(ataque)f(de)h(DDoS)g(for)109 1572 y(de)n(vidamente)33
b(mitigado,)i(as)f(requisic)-38 b(\270)13 b(\230)-41
b(oes)34 b(de)h(atacantes)g(ser)6 b(\230)-39 b(ao)35
b(ignoradas,)h(ap)8 b(\264)-41 b(os)35 b(a)g(inclus)6
b(\230)-39 b(ao)33 b(do)109 1691 y(requisitante)42 b(na)h
Fj(blac)n(klist)p Fn(.)84 b(Assim,)46 b(o)d(servidor)g(na)g
Fj(cloud)i Fn(de)n(v)o(er)6 b(\264)-39 b(a)42 b(ser)i(capaz)g(de)f
(redirecio-)109 1811 y(nar)32 b(apenas)g(clientes)f(le)o(g)m(\264)-30
b(\021timos)29 b(para)j(a)g(no)o(v)n(a)f(inst)6 b(\210)-39
b(ancia)31 b(e)h(garantir)6 b(\264)-39 b(a)31 b(que)h(eles)g(ter)6
b(\230)-39 b(ao)31 b(acesso)h(di-)109 1930 y(reto)k(nas)g(pr)8
b(\264)-41 b(oximas)36 b(requisic)-38 b(\270)12 b(\230)-41
b(oes.)65 b(Portanto,)39 b(de)e(acordo)f(com)h(as)f(m)6
b(\264)-39 b(etricas)36 b(especi\002cadas)h(por)109 2050
y([Bellaiche)25 b(and)g(Gre)o(goire)f(2008],)42 b(este)d(trabalho)f(de)
h(pesquisa)f(f)o(ar)6 b(\264)-39 b(a)39 b(uso)g(de)g(m)6
b(\264)-39 b(etricas)38 b(como)g(o)109 2169 y(tempo)24
b(de)g(resposta)h(do)f(servidor)h(para)g(requisic)-38
b(\270)13 b(\230)-42 b(oes)25 b(atendidas,)f(a)h(taxa)g(de)g(requisic)
-38 b(\270)12 b(\230)-41 b(oes)25 b(atendidas)109 2289
y(com)20 b(relac)-38 b(\270)11 b(\230)-38 b(ao)21 b(ao)g(n)8
b(\264)-41 b(umero)20 b(de)h(clientes,)g(a)h(car)n(ga)f(gerada)h(pelos)
e(m)8 b(\264)-41 b(odulos)19 b(da)i(arquitetura)g(de)g(acordo)109
2409 y(com)29 b(o)h(n)8 b(\264)-41 b(umero)29 b(de)h(clientes)1183
2372 y Ff(2)1220 2409 y Fn(.)46 b(Cabe)31 b(ressaltar)e(que)h(este)g
(trabalho)g(n)6 b(\230)-39 b(ao)29 b(necessita)h(de)g(uma)g(pre-)109
2528 y(vis)6 b(\230)-39 b(ao)20 b(muito)f(grande)i(na)f(detecc)-38
b(\270)11 b(\230)-38 b(ao)21 b(no)f(sentido)f(de)i(que)26
b(\264)-38 b(e)21 b(melhor)f(realizar)h(uma)f(calibragem)g(muito)109
2648 y(sens)m(\264)-30 b(\021v)o(el)29 b(e)j(possuir)e(f)o(alsos)h
(positi)n(v)n(os)d(do)j(que)g(possuir)f(f)o(alsos)h(ne)o(gati)n(v)n
(os.)47 b(Isto)31 b(ocorre)h(de)n(vido)j(\036)-38 b(a)109
2767 y(natureza)28 b(do)f(nosso)f(mecanismo.)38 b(Se)28
b(uma)f(no)o(v)n(a)g(inst)6 b(\210)-39 b(ancia)27 b(for)g(criada)h(e)g
(o)g(trafe)o(go)f(for)h(redireci-)109 2887 y(onado)k(\036)-38
b(a)27 b(toa,)h(o)f(custo)g(ser)6 b(\230)-39 b(ao)28
b(alguns)e(m)m(\264)-30 b(\021nimos)25 b(milise)o(gundos)g(de)i(lat)6
b(\210)-39 b(encia.)38 b(Caso)28 b(o)f(mecanismo)109
3006 y(n)6 b(\230)-39 b(ao)27 b(detecte)g(um)f(ataque,)h(o)g(custo)g
(ser)6 b(\264)-39 b(a)27 b(muito)e(mais)i(signi\002cati)n(v)n(o.)35
b(Desta)27 b(maneira,)g(a)g(a)n(v)n(aliac)-38 b(\270)10
b(\230)-38 b(ao)109 3126 y(quanto)29 b(\036)-38 b(a)25
b(f)o(alsos)f(positi)n(v)n(os)e(n)6 b(\230)-39 b(ao)25
b(ser)6 b(\264)-39 b(a)26 b(t)6 b(\230)-39 b(ao)24 b(necess)6
b(\264)-39 b(aria.)p Black 109 3368 a Fi(6.)p Black 49
w(Conclus)620 3367 y(\230)611 3368 y(ao)109 3540 y Fn(Este)22
b(trabalho)g(apresentou)h(uma)f(proposta)g(de)h(arquitetura)f(de)h
(mitigac)-38 b(\270)9 b(\230)-39 b(ao)23 b(para)g(ataques)g(de)g(DDoS)
109 3659 y(direcionados)31 b(\036)-38 b(a)27 b(aplicac)-38
b(\270)14 b(\230)-42 b(oes)27 b(web)h(hospedadas)e(em)h
Fj(cloud)p Fn(.)37 b(A)27 b(arquitetura)32 b(\264)-38
b(e)27 b(dependente)g(apenas)109 3779 y(da)21 b(e)o(xist)6
b(\210)-39 b(encia)20 b(do)h(ambiente)f(na)h Fj(cloud)p
Fn(.)29 b(Os)21 b(quatro)g(sub)f(m)8 b(\264)-41 b(odulos)19
b(especi\002cados)j(garantem)e(o)h(fun-)109 3898 y(cionamento)28
b(das)h(etapas)g(de)h(forma)f(aut)8 b(\210)-41 b(onoma)29
b(at)6 b(\264)-39 b(e)29 b(mesmo)f(para)i(gerar)g(uma)f(no)o(v)n(a)f
(inst)6 b(\210)-39 b(ancia)29 b(da)109 4018 y(aplicac)-38
b(\270)10 b(\230)-38 b(ao.)30 b(Assim)23 b(como)g(permitir)6
b(\264)-39 b(a)23 b(li)n(vre)g(acesso)h(para)g(os)g(clientes)f(le)o(g)m
(\264)-30 b(\021timos,)22 b(dado)h(que)h(apenas)109 4137
y(eles)i(realizar)6 b(\230)-39 b(ao)27 b(o)f(redirecionamento)g
(solicitado.)33 b(O)26 b(uso)g(da)g Fj(blac)n(klist)h
Fn(ter)6 b(\264)-39 b(a)27 b(gerencimento)e(e\002ci-)109
4257 y(ente)j(pelo)f(uso)h(de)g(tempo)f(de)h(v)n(alidade,)f(que)h(no)g
(caso)g(de)g(atacantes,)h(ter)6 b(\264)-39 b(a)28 b(aumento)f(e)o
(xponencial)109 4377 y(para)e(reincid)6 b(\210)-39 b(encias.)p
Black 109 4619 a Fi(7.)p Black 49 w(Cr)n(onograma)109
4789 y Fn(O)31 b(desen)l(v)n(olvimento)e(deste)j(trabalho)f(de)g
(pesquisa)g(se)o(gue)g(as)g(etapas)h(descritas)f(no)g(cronograma)109
4889 y(descrito)k(abaixo,)j(onde)d(')p Fb(\016)p Fn(')h(de\002ne)g(as)g
(ati)n(vidades)e(j)6 b(\264)-39 b(a)36 b(realizadas)g(e)f(')p
Fb(\017)p Fn(')h(as)g(ati)n(vidades)e(a)i(serem)109 4989
y(desen)l(v)n(olvidas)p Black 109 5232 a Fi(8.)p Black
49 w(Ackno)o(wledment)109 5403 y Fn(Este)25 b(trabalho)g(foi)g
(realizado)g(mediante)g(a)h(colaborac)-38 b(\270)11 b(\230)-39
b(ao)26 b(de)f(todos)f(os)h(membros)g(da)g(equipe,)g(onde)109
5523 y(o)d(problema)g(a)g(ser)h(tratado)f(e)h(o)f(escopo)g(de)h(soluc)
-38 b(\270)10 b(\230)-39 b(ao)23 b(foram)f(discutidos)f(por)h(todos)f
(e)i(todos)f(ti)n(v)o(eram)109 5642 y(participac)-38
b(\270)10 b(\230)-39 b(ao.)46 b(As)29 b(etapas)h(descritas)f(no)g
(cronograma)h(ti)n(v)o(eram)e(a)i(se)o(guinte)e(di)n(vis)6
b(\230)-39 b(ao)28 b(de)i(trabalho,)p Black 109 5734
1418 4 v 225 5795 a Fe(2)258 5825 y Fd(o)20 b(termo)g
(\223clientes\224,)g(usado)f(neste)h(par)5 b(\264)-33
b(agrafo)18 b(engloba)h(tanto)h(clientes)g(le)o(g)n(\264)-26
b(\021timos)20 b(quanto)e(atacantes.)p Black Black Black
eop end
%%Page: 9 9
TeXDict begin 9 8 bop Black Black Black Black Black Black
Black 169 230 3402 4 v 167 330 4 100 v 1434 330 V 1450
330 V 1502 300 a Fa(No)o(v/1)p 1757 330 V 98 w(No)o(v/2)p
2063 330 V 98 w(No)o(v/3)p 2369 330 V 99 w(No)o(v/4)p
2676 330 V 98 w(Dez/1)p 2974 330 V 99 w(Dez/2)p 3271
330 V 99 w(Dez/3)p 3569 330 V 169 333 3402 4 v 169 350
V 167 449 4 100 v 226 419 a Fd(Elaborac)-32 b(\270)6
b(\230)-32 b(ao)20 b(da)g(proposta)f(de)h(soluc)-32 b(\270)8
b(\230)-33 b(ao)p 1434 449 V 1450 449 V 205 w Fm(\016)p
1757 449 V 265 w(\016)p 2063 449 V 2369 449 V 2676 449
V 2974 449 V 3271 449 V 3569 449 V 169 453 3402 4 v 167
552 4 100 v 219 522 a Fd(Estudo)19 b(de)h(m)5 b(\264)-33
b(etricas)20 b(de)g(desempenho)p 1434 552 V 1450 552
V 1757 552 V 503 w Fm(\016)p 2063 552 V 264 w(\017)p
2369 552 V 2676 552 V 2974 552 V 3271 552 V 3569 552
V 169 556 3402 4 v 167 655 4 100 v 237 625 a Fd(Pesquisa)h(sobre)e
(detecc)-32 b(\270)8 b(\230)-33 b(ao)20 b(de)g(DDoS)p
1434 655 V 1450 655 V 1757 655 V 524 w Fm(\016)p 2063
655 V 264 w(\017)p 2369 655 V 2676 655 V 2974 655 V 3271
655 V 3569 655 V 169 658 3402 4 v 167 758 4 100 v 350
728 a Fd(Pesquisa)h(sobre)e(ferramentas)p 1434 758 V
1450 758 V 1757 758 V 2063 758 V 941 w Fm(\016)p 2369
758 V 2676 758 V 2974 758 V 3271 758 V 3569 758 V 167
858 V 345 828 a Fd(para)g(gerac)-32 b(\270)8 b(\230)-33
b(ao)20 b(de)g(requisic)-32 b(\270)10 b(\230)-35 b(oes)p
1434 858 V 1450 858 V 1757 858 V 2063 858 V 2369 858
V 2676 858 V 2974 858 V 3271 858 V 3569 858 V 169 861
3402 4 v 167 961 4 100 v 325 931 a(Implementac)j(\270)6
b(\230)-33 b(ao)20 b(dos)g(m)7 b(\264)-35 b(odulos)p
1434 961 V 1450 961 V 1757 961 V 2063 961 V 916 w Fm(\016)p
2369 961 V 264 w(\017)p 2676 961 V 260 w(\017)p 2974
961 V 256 w(\017)p 3271 961 V 3569 961 V 169 964 3402
4 v 167 1064 4 100 v 400 1034 a Fd(Escrita)20 b(do)g(relat)7
b(\264)-35 b(orio)19 b(\002nal)p 1434 1064 V 1450 1064
V 1757 1064 V 2063 1064 V 2369 1064 V 1298 w Fm(\017)p
2676 1064 V 260 w(\017)p 2974 1064 V 256 w(\017)p 3271
1064 V 3569 1064 V 169 1067 3402 4 v 167 1167 4 100 v
532 1137 a Fd(Experimentac)-32 b(\270)6 b(\230)-33 b(ao)p
1434 1167 V 1450 1167 V 1757 1167 V 2063 1167 V 2369
1167 V 2676 1167 V 1733 w Fm(\017)p 2974 1167 V 256 w(\017)p
3271 1167 V 3569 1167 V 169 1170 3402 4 v Black 109 1432
a Fn(embora)21 b(a)g(participac)-38 b(\270)10 b(\230)-38
b(ao)21 b(de)g(todos)f(seja)h(essencial)g(e)g(de)n(v)n(a)g(ser)g
(mantida)f(para)i(que)f(o)g(trabalho)f(tenha)109 1552
y(um)k(todo)g(como)g(resultado)g(e)h(n)6 b(\230)-39 b(ao)25
b(apenas)g(partes)g(de)g(esforc)-38 b(\270)5 b(os.)p
Black 310 1741 a Fb(\017)p Black 49 w Fn(Elaborac)-38
b(\270)10 b(\230)-38 b(ao)25 b(da)g(proposta)f(de)h(soluc)-38
b(\270)9 b(\230)-38 b(ao)25 b(-)g(T)-8 b(odos)p Black
310 1860 a Fb(\017)p Black 49 w Fn(Estudo)23 b(de)i(m)6
b(\264)-39 b(etricas)25 b(de)g(desempenho)f(-)h(Cinara)g(e)g(Fernando)h
(Gielo)n(w)p Black 310 1978 a Fb(\017)p Black 49 w Fn(Pesquisa)e(sobre)
h(detecc)-38 b(\270)11 b(\230)-39 b(ao)25 b(de)g(DDoS)g(-)g(Cinara)p
Black 310 2097 a Fb(\017)p Black 49 w Fn(Pesquisa)f(sobre)h
(ferramentas)g(para)g(gerac)-38 b(\270)12 b(\230)-39
b(ao)25 b(de)g(requisic)-38 b(\270)13 b(\230)-42 b(oes)25
b(-)g(Fernando)g(C)6 b(\264)-39 b(esar)p Black 310 2216
a Fb(\017)p Black 49 w Fn(Implementac)h(\270)9 b(\230)-38
b(ao)25 b(dos)f(m)8 b(\264)-41 b(odulos)23 b(-)i(Fernando)g(Gielo)n(w)f
(e)h(Fernando)g(C)6 b(\264)-39 b(esar)p Black 610 2334
a Fp(\226)p Black 49 w Fn(Especi\002cac)h(\270)11 b(\230)-39
b(ao)25 b(de)g(Algoritmos)e(-)i(Cinara)h(e)f(Nadine)f(com)h(suporte)f
(de)h(todos)p Black 610 2453 a Fp(\226)p Black 49 w Fn(Estudo)e(de)i
(ferramentas)g(-)h(Fernando)f(Gielo)n(w)e(e)j(Fernando)f(C)6
b(\264)-39 b(esar)p Black 310 2571 a Fb(\017)p Black
49 w Fn(Escrita)24 b(do)h(relat)8 b(\264)-41 b(orio)24
b(\002nal)h(-)g(Cinara)h(e)f(Nadine)p Black 310 2689
a Fb(\017)p Black 49 w Fn(Experimentac)-38 b(\270)10
b(\230)-39 b(ao)25 b(-)g(T)-8 b(odos)p Black 610 2807
a Fp(\226)p Black 49 w Fn(Cate)o(gorizac)-38 b(\270)11
b(\230)-39 b(ao)25 b(e)g(medic)-38 b(\270)10 b(\230)-38
b(ao)25 b(de)f(m)6 b(\264)-39 b(etricas)25 b(-)g(Cinara)g(e)h(Fernando)
f(Gielo)n(w)109 3044 y Fi(Refer)373 3043 y(\210)367 3044
y(encias)p Black Black 109 3210 a Fn(Bakshi,)36 b(A.)e(and)g(Y)-11
b(ogesh1,)36 b(B.)e(\(2010\).)65 b(Securing)35 b(cloud)e(from)h(ddos)g
(attacks)g(using)f(intrusion)224 3330 y(detection)22
b(system)g(in)h(virtual)f(machine.)32 b(In)23 b Fj(Communication)f
(Softwar)l(e)g(and)h(Networks,)h(2010.)224 3450 y(ICCSN)i('10.)f
(Second)f(International)f(Confer)l(ence)i(on)p Fn(,)g(pages)g(260)f
(\226)h(264.)p Black Black 109 3618 a(Bellaiche,)e(M.)g(and)g(Gre)o
(goire,)g(J.-C.)g(\(2008\).)32 b(Measuring)22 b(defense)h(systems)f
(against)g(\003ooding)g(at-)224 3738 y(tacks.)27 b(In)21
b Fj(W)-5 b(ir)l(eless)20 b(Communications)f(and)h(Mobile)h(Computing)e
(Confer)l(ence)o(,)k(2008.)d(IWCMC)224 3857 y('08.)k(International)p
Fn(,)f(pages)i(600)f(\226605.)p Black Black 109 4026
a(Chang,)e(R.)f(\(2002\).)28 b(Defending)21 b(against)f
(\003ooding-based)h(distrib)n(uted)e(denial-of-service)j(attacks:)224
4145 y(a)j(tutorial.)35 b Fj(Communications)23 b(Ma)o(gazine)o(,)g
(IEEE)p Fn(,)i(40\(10\):42)f(\226)h(51.)p Black Black
109 4314 a(Dhage,)37 b(S.)e(N.,)i(Meshram,)f(B.)f(B.,)j(Ra)o(w)o(at,)f
(R.,)h(P)o(ada)o(we,)f(S.,)g(P)o(aingaokar)l(,)f(M.,)h(and)e(Misra,)h
(A.)224 4434 y(\(2011\).)50 b(Intrusion)29 b(detection)g(system)f(in)h
(cloud)g(computing)f(en)l(vironment.)50 b(In)29 b Fj(Pr)l(oceedings)224
4553 y(of)e(the)h(International)e(Confer)l(ence)i(&#38;)h(W)-9
b(orkshop)26 b(on)i(Emer)l(ging)f(T)-5 b(r)l(ends)27
b(in)h(T)-9 b(ec)o(hnolo)o(gy)p Fn(,)224 4673 y(ICWET)25
b('11,)g(pages)f(235\226239,)g(Ne)n(w)g(Y)-11 b(ork,)25
b(NY)-13 b(,)25 b(USA.)g(A)l(CM.)p Black Black 109 4841
a(Dietrich,)k(S.,)i(Goddard,)f(N.,)g(and)f(Long,)h(N.)f(\(2000\).)49
b(Analyzing)28 b(distrib)n(uted)g(denial)h(of)g(service)224
4961 y(tools:)g(The)c(shaft)g(case.)36 b(In)25 b Fj(In)g(Pr)l
(oceedings)e(of)h(USENIX)h(LISA)l('2000)p Fn(,)g(pages)g(329\226339.)p
Black Black 109 5129 a(Dw)o(ork,)39 b(C.)e(and)f(Naor)l(,)k(M.)c
(\(1993\).)72 b(Pricing)37 b(via)f(processing)g(or)g(combatting)f(junk)
h(mail.)72 b(In)224 5249 y Fj(Pr)l(oceedings)27 b(of)g(the)h(12th)g
(Annual)f(International)f(Cryptolo)o(gy)i(Confer)l(ence)h(on)e
(Advances)h(in)224 5368 y(Cryptolo)o(gy)p Fn(,)c(CR)-6
b(YPT)n(O)26 b('92,)e(pages)h(139\226147,)e(London,)h(UK.)h(Springer)n
(-V)-11 b(erlag.)p Black Black 109 5537 a(Exame,)24 b(I.)h(\(2011\).)35
b(http://info.abril.com.br/noticias/se)o(guranca/.)p
Black Black 109 5706 a(Hazelhurst,)c(S.)g(\(2008\).)54
b(Scienti\002c)31 b(computing)e(using)g(virtual)h(high-performance)g
(computing:)224 5825 y(a)i(case)h(study)e(using)g(the)h(amazon)h
(elastic)e(computing)g(cloud.)59 b(In)32 b Fj(Pr)l(oceedings)f(of)h
(the)g(2008)p Black Black eop end
%%Page: 10 10
TeXDict begin 10 9 bop Black Black 224 326 a Fj(annual)28
b(r)l(esear)l(c)o(h)h(confer)l(ence)h(of)f(the)h(South)e(African)g
(Institute)h(of)g(Computer)g(Scientists)f(and)224 446
y(Information)e(T)-9 b(ec)o(hnolo)o(gists)26 b(on)h(IT)i(r)l(esear)l(c)
o(h)f(in)f(de)o(veloping)g(countries:)36 b(riding)27
b(the)h(wave)g(of)224 566 y(tec)o(hnolo)o(gy)p Fn(,)23
b(SAICSIT)k('08,)d(pages)h(94\226103,)f(Ne)n(w)g(Y)-11
b(ork,)25 b(NY)-13 b(,)25 b(USA.)g(A)l(CM.)p Black Black
109 735 a(K)n(eromytis,)32 b(A.)h(D.,)h(Misra,)g(V)-13
b(.,)35 b(and)d(Rubenstein,)i(D.)e(\(2002\).)61 b(Sos:)46
b(secure)33 b(o)o(v)o(erlay)e(services.)224 854 y Fj(SIGCOMM)25
b(Comput.)f(Commun.)h(Re)o(v)-7 b(.)p Fn(,)24 b(32:61\22672.)p
Black Black 109 1024 a(Khor)l(,)42 b(S.)d(H.)f(and)h(Nakao,)j(A.)d
(\(2009\).)80 b(spo)n(w:)57 b(On-demand)38 b(cloud-based)h(eddos)f
(mitigation)224 1143 y(mechanism.)c Fj(HotDep)25 b(\(F)l(ifth)e(W)-9
b(orkshop)24 b(on)g(Hot)h(T)-9 b(opics)24 b(in)h(System)f
(Dependability\))p Fn(.)p Black Black 109 1313 a(Li,)36
b(K.,)g(Zhou,)g(W)-9 b(.,)36 b(Li,)g(P)-11 b(.,)37 b(Hai,)f(J.,)h(and)d
(Liu,)i(J.)e(\(2009\).)65 b(Distinguishing)31 b(ddos)i(attacks)h(from)
224 1432 y(\003ash)23 b(cro)n(wds)g(using)f(probability)f(metrics.)32
b(In)23 b Fj(Pr)l(oceedings)f(of)h(the)g(2009)f(Thir)l(d)h
(International)224 1552 y(Confer)l(ence)28 b(on)f(Network)h(and)f
(System)g(Security)p Fn(,)h(NSS)g('09,)g(pages)f(9\22617,)g(W)-8
b(ashington,)27 b(DC,)224 1671 y(USA.)e(IEEE)g(Computer)f(Society)-6
b(.)p Black Black 109 1841 a(Liu,)42 b(H.)e(\(2010\).)83
b(A)40 b(ne)n(w)f(form)h(of)f(dos)h(attack)f(in)h(a)g(cloud)f(and)h
(its)f(a)n(v)n(oidance)g(mechanism.)224 1960 y(In)33
b Fj(Pr)l(oceedings)f(of)h(the)g(2010)g(A)m(CM)g(workshop)g(on)g(Cloud)
g(computing)f(security)h(workshop)p Fn(,)224 2080 y(CCSW)26
b('10,)f(pages)f(65\22676,)g(Ne)n(w)h(Y)-11 b(ork,)24
b(NY)-13 b(,)25 b(USA.)g(A)l(CM.)p Black Black 109 2249
a(Mirk)o(o)o(vic,)c(J.,)h(Hussain,)g(A.,)h(W)l(ilson,)e(B.,)j(F)o(ahmy)
-6 b(,)21 b(S.,)i(Reiher)l(,)h(P)-11 b(.,)23 b(Thomas,)f(R.,)h(Y)-10
b(ao,)23 b(W)-9 b(.-M.,)22 b(and)224 2369 y(Schw)o(ab,)32
b(S.)g(\(2007\).)54 b(T)-8 b(o)n(w)o(ards)30 b(user)n(-centric)h
(metrics)f(for)h(denial-of-service)g(measurement.)224
2488 y(In)c Fj(Pr)l(oceedings)e(of)h(the)h(2007)f(workshop)g(on)g
(Experimental)g(computer)g(science)p Fn(,)h(ExpCS)g('07,)224
2608 y(Ne)n(w)d(Y)-11 b(ork,)25 b(NY)-13 b(,)25 b(USA.)g(A)l(CM.)p
Black Black 109 2777 a(Ne)n(ws,)19 b(B.)h(\(2011\).)j(http://www)-6
b(.bbc.co.uk/portuguese/noticias/20)o(11/06)o(/1106)o(30)p
3158 2777 30 4 v 30 w(botnet)p 3438 2777 V 54 w(des-)224
2897 y(coberta)p 523 2897 V 36 w(fn.shtml.)p Black Black
109 3066 a(Peng,)28 b(T)-7 b(.,)27 b(Leckie,)h(C.,)g(and)g
(Ramamohanarao,)f(K.)h(\(2007\).)43 b(Surv)o(e)o(y)27
b(of)g(netw)o(ork-based)g(defense)224 3186 y(mechanisms)c(countering)h
(the)h(dos)f(and)h(ddos)f(problems.)35 b Fj(A)m(CM)25
b(Comput.)f(Surv)-7 b(.)p Fn(,)24 b(39.)p Black Black
109 3355 a(Sachde)n(v)n(a,)h(M.,)f(K)o(umar)l(,)g(K.,)h(Singh,)g(G.,)g
(and)g(Singh,)g(K.)g(\(2009\).)36 b(Performance)26 b(analysis)e(of)h
(web)224 3475 y(service)37 b(under)f(ddos)h(attacks.)73
b(In)37 b Fj(Advance)g(Computing)f(Confer)l(ence)o(,)k(2009.)c(IA)m(CC)
i(2009.)224 3594 y(IEEE)24 b(International)p Fn(,)f(pages)i(1002)f
(\2261007.)p Black Black 109 3764 a(Sachde)n(v)n(a,)38
b(M.,)g(Singh,)g(G.,)g(K)o(umar)l(,)g(K.,)h(and)c(Singh,)j(K.)e
(\(2008\).)71 b(Ddos)35 b(incidents)g(and)g(their)224
3883 y(impact:)30 b(A)24 b(re)n(vie)n(w)-6 b(.)p Black
Black 109 4052 a(Sta)n(vrou,)32 b(A.,)g(Cook,)g(D.)e(L.,)i(Morein,)g(W)
-9 b(.)30 b(G.,)i(K)n(eromytis,)f(A.)f(D.,)i(Misra,)g(V)-13
b(.,)32 b(and)f(Rubenstein,)224 4172 y(D.)23 b(\(2005\).)31
b(W)-8 b(ebsos:)29 b(an)23 b(o)o(v)o(erlay-based)f(system)g(for)h
(protecting)f(web)h(serv)o(ers)g(from)f(denial)h(of)224
4292 y(service)i(attacks.)35 b Fj(Comput.)25 b(Netw)-7
b(.)p Fn(,)25 b(48:781\226807.)p Black Black 109 4461
a(V)-11 b(erkaik,)40 b(P)-11 b(.,)41 b(Spatscheck,)h(O.,)e(V)-11
b(an)38 b(der)g(Merwe,)j(J.,)f(and)e(Snoeren,)j(A.)d(C.)g(\(2006\).)76
b(Primed:)224 4580 y(community-of-interest-based)23 b(ddos)h
(mitigation.)35 b(In)25 b Fj(Pr)l(oceedings)f(of)h(the)g(2006)g
(SIGCOMM)224 4700 y(workshop)j(on)h(Lar)l(g)o(e-scale)h(attac)n(k)f
(defense)p Fn(,)h(LSAD)f('06,)h(pages)f(147\226154,)g(Ne)n(w)g(Y)-11
b(ork,)30 b(NY)-13 b(,)224 4820 y(USA.)25 b(A)l(CM.)p
Black Black 109 4989 a(W)-8 b(al\002sh,)30 b(M.,)f(V)-7
b(utukuru,)29 b(M.,)g(Balakrishnan,)h(H.,)g(Kar)n(ger)l(,)h(D.,)f(and)f
(Shenk)o(er)l(,)h(S.)g(\(2010\).)49 b(Ddos)224 5108 y(defense)25
b(by)f(of)n(fense.)36 b Fj(A)m(CM)25 b(T)-5 b(r)o(ans.)24
b(Comput.)g(Syst.)p Fn(,)g(28:3:1\2263:54.)p Black Black
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
